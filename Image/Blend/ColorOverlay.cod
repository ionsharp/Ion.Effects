//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float BlendMode;
//   float4 Color;
//   float Opacity;
//   bool Reverse;
//   sampler2D input;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlendMode    c0       1
//   Opacity      c1       1
//   Color        c2       1
//   Reverse      c3       1
//   input        s0       1
//

    ps_3_0
    def c4, 0, 0.00100000005, 1, 0.5
    def c5, 2, 3, 4, 0.166666672
    def c6, 1, 0.333333343, 1.33333337, -0.666666627
    def c7, 0.166666672, 1, 6, 0.666666687
    def c8, 1, -1, -0.333333343, 0.666666627
    def c9, 19, 20, 21, -22
    def c10, -0.166666672, -0.5, -0.666666687, 5
    def c11, 7, 8, 2, 1
    def c12, 9, 2, -1, 10
    def c13, 11, 12, 13, 14
    def c14, 15, 16, 17, 18
    def c15, 23, 24, 25, 26
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 581 "C:\Users\james\OneDrive\Code\GitHub\Core.WPF\Core.WPF\Effects\-Image\Blend\ColorOverlay.fx"
    texld r0, v0, s0  // ::color1<0,1,2,3>

#line 585
    if_lt -r0.w, c4.x

#line 118
      cmp r1.xyz, -r0_abs, c4.y, r0  // Blend::blendColor<0,1,2>

#line 124
      mov r2, c4
      if_eq c0.x, r2.x

#line 127
        rcp r1.w, r0.w
        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 130
        add r3.xyz, r1, c2
        mul r3.xyz, r0.w, r3

#line 133
        add r1.w, -r0.w, c4.z
        mul r3.xyz, r3, c4.w
        mad r3.xyz, r1.w, c2, r3  // ::result<0,1,2>
        mov r3.w, c1.x  // ::result<3>
      else
        if_eq c0.x, r2.z

#line 139
          rcp r1.w, r0.w
          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 143
          add r4.xyz, r2.z, -c2
          rcp r5.x, r1.x
          rcp r5.y, r1.y
          rcp r5.z, r1.z
          mad_sat r4.xyz, r4, -r5, c4.z  // ::result<0,1,2>

#line 146
          lrp r3.xyz, r0.w, r4, c2  // ::result<0,1,2>
          mov r3.w, c1.x  // ::result<3>
        else
          mov r4.x, c0.x  // ::BlendMode<0>
          if_eq r4.x, c5.x

#line 152
            rcp r1.w, r0.w
            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 158
            add r4.yzw, r1.xxyz, -c4.z
            add r5.xyz, -r1, c4.z
            rcp r1.w, r5.x
            mul r1.w, r1.w, c2.x
            min r5.x, r1.w, c4.z
            cmp r6.x, r4.y, r1.x, r5.x  // ::result<0>
            rcp r1.w, r5.y
            mul r1.w, r1.w, c2.y
            min r4.y, r1.w, c4.z
            cmp r6.y, r4.z, r1.y, r4.y  // ::result<1>
            rcp r1.w, r5.z
            mul r1.w, r1.w, c2.z
            min r4.y, r1.w, c4.z
            cmp r6.z, r4.w, r1.z, r4.y  // ::result<2>

#line 161
            lrp r3.xyz, r0.w, r6, c2  // ::result<0,1,2>
            mov r3.w, c1.x  // ::result<3>
          else
            if_eq r4.x, c5.y

#line 167
              rcp r1.w, r0.w
              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 73
              add r4.yzw, -r1.xxzy, r1.xzyx

#line 47
              cmp r5.xy, r4.w, r1.yxzw, r1
              min r6.x, r1.z, r5.x  // ::fmin<0>
              max r6.y, r5.y, r1.z  // ::fmax<0>
              add r1.w, -r6.x, r6.y  // ::delta<0>
              add r5.x, r6.x, r6.y  // ::maxplusmin<0>

#line 65
              add r5.y, r5.x, -c4.z
              rcp r5.z, r5.x
              add r5.x, -r5.x, c5.x
              rcp r5.x, r5.x
              mul r5.xz, r1.w, r5  // ::hsl<1,1>
              cmp r5.x, r5.y, r5.x, r5.z  // ::hsl<1>

#line 72
              add r6.xy, r1, -r6.y
              rcp r6.z, r1.w

#line 75
              mul r4.z, r4.z, r6.z  // ::hsl<0>
              mad r4.yw, r4, r6.z, c5.xxzz  // ::hsl<0,0>
              cmp r4.y, -r6_abs.y, r4.y, r4.w  // ::hsl<0>
              cmp r4.y, -r6_abs.x, r4.z, r4.y  // ::hsl<0>
              mul r4.z, r4.y, c5.w  // ::hsl<0>

#line 80
              mad r4.w, r4.y, c7.x, c7.y  // ::hsl<0>
              cmp r5.yzw, r4.y, r4.z, r4.w  // ::hsl<0,0,0>
              cmp r5, -r1_abs.w, c4.x, r5  // ::hsl<1,0,0,0>

#line 46
              add r1.w, -c2.y, c2.x
              cmp r4.yz, r1.w, c2.xyxw, c2.xxyw
              min r1.w, c2.z, r4.y  // ::fmin<0>
              max r6.x, r4.z, c2.z  // ::fmax<0>
              add r1.w, r1.w, r6.x  // ::maxplusmin<0>

#line 52
              mul r4.yzw, r1.w, c4.w  // ::hsl<2,2,2>

#line 90
              if_eq r5.x, c4.x

#line 93
              else

#line 97
                add r6.x, r1.w, -c4.z

#line 24
                add r7, r5, c6  // GetHue::temp3<0,0,0>

#line 98
                mul r5.y, r4.w, r7.x  // ::temp2<0>
                mad r5.z, r1.w, c4.w, r5.x
                mad r5.x, r5.x, -r4.w, r5.z  // ::temp2<0>
                cmp r5.x, r6.x, r5.x, r5.y  // ::temp2<0>
                add r1.w, r1.w, -r5.x  // ::temp1<0>

#line 23
                add r5.y, -r7.y, c4.z
                cmp r5.y, r5.y, r7.y, r7.w  // GetHue::temp3<0>
                cmp r5.y, r7.y, r5.y, r7.z  // GetHue::temp3<0>

#line 29
                add r5.z, -r1.w, r5.x
                mul r6.x, r5.z, c7.z
                mad r6.y, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                add r7.xyz, r5.y, c10
                add r5.y, -r5.y, c7.w
                mul r5.y, r5.y, r5.z
                mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                cmp r5.y, r7.z, r1.w, r5.y  // ::rgbComponent<0>
                cmp r5.y, r7.y, r5.y, r5.x  // ::rgbComponent<0>
                cmp r4.y, r7.x, r5.y, r6.y  // ::rgbComponent<0>

#line 23
                add r5.y, -r5.w, c4.z
                add r7, r5.w, c8  // GetHue::temp3<0,0,0,0>
                cmp r5.y, r5.y, r5.w, r7.y  // GetHue::temp3<0>
                cmp r5.y, r5.w, r5.y, r7.x  // GetHue::temp3<0>

#line 29
                mad r6.y, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                add r8.xyz, r5.y, c10
                add r5.y, -r5.y, c7.w
                mul r5.y, r5.y, r5.z
                mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                cmp r5.y, r8.z, r1.w, r5.y  // ::rgbComponent<0>
                cmp r5.y, r8.y, r5.y, r5.x  // ::rgbComponent<0>
                cmp r4.z, r8.x, r5.y, r6.y  // ::rgbComponent<0>

#line 23
                add r5.y, -r7.z, c4.z
                add r5.w, r5.w, -c6.z  // GetHue::temp3<0>
                cmp r5.y, r5.y, r7.z, r5.w  // GetHue::temp3<0>
                cmp r5.y, r7.z, r5.y, r7.w  // GetHue::temp3<0>

#line 29
                mad r5.w, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                add r6.xyz, r5.y, c10
                add r5.y, -r5.y, c7.w
                mul r5.y, r5.y, r5.z
                mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                cmp r1.w, r6.z, r1.w, r5.y  // ::rgbComponent<0>
                cmp r1.w, r6.y, r1.w, r5.x  // ::rgbComponent<0>
                cmp r4.w, r6.x, r1.w, r5.w  // ::rgbComponent<0>

#line 107
              endif

#line 174
              lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
              mov r3.w, c1.x  // ::result<3>
            else
              if_eq r4.x, c5.z

#line 180
                rcp r1.w, r0.w
                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 198
                min r4.yzw, c2.xxyz, r1.xxyz  // ::result<0,1,2>

#line 201
                lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                mov r3.w, c1.x  // ::result<3>
              else
                if_eq r4.x, c10.w

#line 207
                  rcp r1.w, r0.w
                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 211
                  add r4.yzw, -r1.xxyz, c2.xxyz

#line 214
                  lrp r3.xyz, r0.w, r4_abs.yzww, c2  // ::result<0,1,2>
                  mov r3.w, c1.x  // ::result<3>
                else
                  if_eq r4.x, c7.z

#line 220
                    rcp r1.w, r0.w
                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 224
                    add r4.yzw, -r2.w, c2.xxyz
                    add r4.yzw, r4, r4
                    add r5.xyz, r1, -c4.w
                    mad r4.yzw, r4, -r5.xxyz, c4.w  // ::result<0,1,2>

#line 227
                    lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                    mov r3.w, c1.x  // ::result<3>
                  else
                    if_eq r4.x, c11.x

#line 233
                      rcp r1.w, r0.w
                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 238
                      add r4.yzw, -r2.z, c2.xxyz
                      mul r5.xyz, r1, r1
                      add r6.xyz, r2.z, -c2
                      rcp r1.w, r6.x
                      mul r1.w, r1.w, r5.x
                      min r5.x, r1.w, c4.z
                      cmp r7.x, -r4_abs.y, c2.x, r5.x  // ::result<0>
                      rcp r1.w, r6.y
                      mul r1.w, r1.w, r5.y
                      min r4.y, r1.w, c4.z
                      cmp r7.y, -r4_abs.z, c2.y, r4.y  // ::result<1>
                      rcp r1.w, r6.z
                      mul r1.w, r1.w, r5.z
                      min r4.y, r1.w, c4.z
                      cmp r7.z, -r4_abs.w, c2.z, r4.y  // ::result<2>

#line 241
                      lrp r3.xyz, r0.w, r7, c2  // ::result<0,1,2>
                      mov r3.w, c1.x  // ::result<3>
                    else
                      if_eq r4.x, c11.y

#line 247
                        rcp r1.w, r0.w
                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 264
                        add r4.yzw, -r1.xxyz, c4.w
                        add r5.xyz, r2.z, -c2
                        add r6.xyz, r1, -c4.w
                        mad r6.xyz, r6, -c11.z, c11.w
                        mad r5.xyz, r5, -r6, c4.z  // ::result<0,1,2>

#line 256
                        dp2add r1.w, c2.x, r1.x, r2.x  // ::result<0>
                        cmp r6.x, r4.y, r1.w, r5.x  // ::result<0>

#line 262
                        dp2add r1.w, c2.y, r1.y, r2.x  // ::result<1>
                        cmp r6.y, r4.z, r1.w, r5.y  // ::result<1>

#line 268
                        dp2add r1.w, c2.z, r1.z, r2.x  // ::result<2>
                        cmp r6.z, r4.w, r1.w, r5.z  // ::result<2>

#line 271
                        lrp r3.xyz, r0.w, r6, c2  // ::result<0,1,2>
                        mov r3.w, c1.x  // ::result<3>
                      else
                        if_eq r4.x, c12.x

#line 277
                          rcp r1.w, r0.w
                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 282
                          add r4.yzw, r1.xxyz, -c4.w
                          add r5.xyz, r1, r1
                          add r6.xyz, r2.z, -c2
                          rcp r1.w, r5.x
                          mad r1.w, r6.x, -r1.w, c4.z
                          max r5.w, r1.w, c4.x
                          cmp r1.w, -r5.x, r5.x, r5.w
                          add r7.xyz, r4.yzww, r4.yzww
                          mad r8.xyz, r4.yzww, c12.y, c12.z
                          mad r9.xyz, r4.yzww, -c11.z, c11.w
                          rcp r5.x, r9.x
                          mul r5.x, r5.x, c2.x
                          min r6.x, r5.x, c4.z
                          cmp r5.x, r8.x, r7.x, r6.x
                          cmp r1.w, r4.y, r5.x, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.x, r1.w, c4.z, c4.x  // ::result<0>
                          rcp r1.w, r5.y
                          mad r1.w, r6.y, -r1.w, c4.z
                          max r4.y, r1.w, c4.x
                          cmp r1.w, -r5.y, r5.y, r4.y
                          rcp r4.y, r9.y
                          mul r4.y, r4.y, c2.y
                          min r5.x, r4.y, c4.z
                          cmp r4.y, r8.y, r7.y, r5.x
                          cmp r1.w, r4.z, r4.y, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.y, r1.w, c4.z, c4.x  // ::result<1>
                          rcp r1.w, r5.z
                          mad r1.w, r6.z, -r1.w, c4.z
                          max r4.y, r1.w, c4.x
                          cmp r1.w, -r5.z, r5.z, r4.y
                          rcp r4.y, r9.z
                          mul r4.y, r4.y, c2.z
                          min r5.x, r4.y, c4.z
                          cmp r4.y, r8.z, r7.z, r5.x
                          cmp r1.w, r4.w, r4.y, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.z, r1.w, c4.z, c4.x  // ::result<2>

#line 285
                          lrp r3.xyz, r0.w, r10, c2  // ::result<0,1,2>
                          mov r3.w, c1.x  // ::result<3>
                        else
                          if_eq r4.x, c12.w

#line 291
                            rcp r1.w, r0.w
                            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 46
                            add r1.w, -c2.y, c2.x
                            cmp r4.yz, r1.w, c2.xyxw, c2.xxyw
                            min r1.w, c2.z, r4.y  // ::fmin<0>
                            max r5.x, r4.z, c2.z  // ::fmax<0>
                            add r4.y, -r1.w, r5.x  // ::delta<0>
                            add r1.w, r1.w, r5.x  // ::maxplusmin<0>

#line 52
                            mul r5.xyz, r1.w, c4.w  // ::hsl<2,2,2>

#line 65
                            add r4.z, r1.w, -c4.z
                            rcp r4.w, r1.w
                            mul r4.w, r4.w, r4.y  // ::hsl<1>
                            add r5.w, -r1.w, c5.x
                            rcp r5.w, r5.w
                            mul r5.w, r4.y, r5.w  // ::hsl<1>
                            cmp r4.w, r4.z, r5.w, r4.w  // ::hsl<1>

#line 81
                            cmp r4.y, -r4_abs.y, c4.x, r4.w  // ::hsl<1>

#line 90
                            if_eq r4.y, c4.x

#line 93
                            else

#line 73
                              add r6.xyz, -r1.xzyw, r1.zyxw

#line 47
                              cmp r7.xy, r6.z, r1.yxzw, r1
                              min r4.w, r1.z, r7.x  // ::fmin<0>
                              max r5.w, r7.y, r1.z  // ::fmax<0>
                              add r4.w, -r4.w, r5.w  // ::delta<0>

#line 72
                              add r7.xy, r1, -r5.w
                              rcp r5.w, r4.w

#line 75
                              mul r6.y, r5.w, r6.y  // ::hsl<0>
                              mad r6.xz, r6, r5.w, c5  // ::hsl<0,0>
                              cmp r5.w, -r7_abs.y, r6.x, r6.z  // ::hsl<0>
                              cmp r5.w, -r7_abs.x, r6.y, r5.w  // ::hsl<0>
                              mul r6.x, r5.w, c5.w  // ::hsl<0>

#line 80
                              mad r6.y, r5.w, c7.x, c7.y  // ::hsl<0>
                              cmp r5.w, r5.w, r6.x, r6.y  // ::hsl<0>
                              cmp r4.w, -r4_abs.w, c4.x, r5.w  // ::hsl<0>

#line 98
                              add r5.w, r4.y, c4.z
                              mul r5.w, r5.w, r5.z  // ::temp2<0>
                              mad r6.x, r1.w, c4.w, r4.y
                              mad r4.y, r4.y, -r5.z, r6.x  // ::temp2<0>
                              cmp r4.y, r4.z, r4.y, r5.w  // ::temp2<0>
                              add r1.w, r1.w, -r4.y  // ::temp1<0>

#line 22
                              add r6, r4.w, c6.yzwx  // GetHue::temp3<0,0,0,0>
                              add r4.z, -r6.x, c4.z
                              cmp r4.z, r4.z, r6.x, r6.z  // GetHue::temp3<0>
                              cmp r4.z, r6.x, r4.z, r6.y  // GetHue::temp3<0>

#line 29
                              add r5.w, -r1.w, r4.y
                              mul r6.x, r5.w, c7.z
                              mad r6.y, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                              add r7.xyz, r4.z, c10
                              add r4.z, -r4.z, c7.w
                              mul r4.z, r4.z, r5.w
                              mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r4.z, r7.z, r1.w, r4.z  // ::rgbComponent<0>
                              cmp r4.z, r7.y, r4.z, r4.y  // ::rgbComponent<0>
                              cmp r5.x, r7.x, r4.z, r6.y  // ::rgbComponent<0>

#line 23
                              add r4.z, -r4.w, c4.z
                              add r7, r4.w, -c6.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r4.z, r4.z, r4.w, r7.x  // GetHue::temp3<0>
                              cmp r4.z, r4.w, r4.z, r6.w  // GetHue::temp3<0>

#line 29
                              mad r4.w, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                              add r6.yzw, r4.z, c10.xxyz
                              add r4.z, -r4.z, c7.w
                              mul r4.z, r4.z, r5.w
                              mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r4.z, r6.w, r1.w, r4.z  // ::rgbComponent<0>
                              cmp r4.z, r6.z, r4.z, r4.y  // ::rgbComponent<0>
                              cmp r5.y, r6.y, r4.z, r4.w  // ::rgbComponent<0>

#line 23
                              add r4.z, -r7.y, c4.z
                              cmp r4.z, r4.z, r7.y, r7.w  // GetHue::temp3<0>
                              cmp r4.z, r7.y, r4.z, r7.z  // GetHue::temp3<0>

#line 29
                              mad r4.w, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                              add r6.xyz, r4.z, c10
                              add r4.z, -r4.z, c7.w
                              mul r4.z, r4.z, r5.w
                              mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r1.w, r6.z, r1.w, r4.z  // ::rgbComponent<0>
                              cmp r1.w, r6.y, r1.w, r4.y  // ::rgbComponent<0>
                              cmp r5.z, r6.x, r1.w, r4.w  // ::rgbComponent<0>

#line 107
                            endif

#line 298
                            lrp r3.xyz, r0.w, r5, c2  // ::result<0,1,2>
                            mov r3.w, c1.x  // ::result<3>
                          else
                            if_eq r4.x, c13.x

#line 304
                              rcp r1.w, r0.w
                              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 323
                              max r4.yzw, c2.xxyz, r1.xxyz  // ::result<0,1,2>

#line 326
                              lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                              mov r3.w, c1.x  // ::result<3>
                            else
                              if_eq r4.x, c13.y

#line 332
                                rcp r1.w, r0.w
                                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 336
                                add r4.yzw, r1.xxyz, c2.xxyz
                                add_sat r4.yzw, r4, -c4.z  // ::result<0,1,2>

#line 339
                                lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                mov r3.w, c1.x  // ::result<3>
                              else
                                if_eq r4.x, c13.z

#line 345
                                  rcp r1.w, r0.w
                                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 349
                                  add r4.yzw, r1.xxyz, c2.xxyz  // ::result<0,1,2>

#line 352
                                  lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                  mov r3.w, c1.x  // ::result<3>
                                else
                                  if_eq r4.x, c13.w

#line 358
                                    rcp r1.w, r0.w
                                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 375
                                    add r4.yzw, -r1.xxyz, c4.w
                                    add r5.xyz, r1, -c4.w
                                    mov r6.xyz, c2  // ::Color<0,1,2>
                                    mad r5.xyz, r5, c5.x, r6  // ::result<0,1,2>
                                    mad r6.xyz, r1, c5.x, r6
                                    add r6.xyz, r6, -c4.z  // ::result<0,1,2>
                                    cmp r4.yzw, r4, r6.xxyz, r5.xxyz  // ::result<0,1,2>

#line 382
                                    lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                    mov r3.w, c1.x  // ::result<3>
                                  else
                                    if_eq r4.x, c14.x

#line 388
                                      rcp r1.w, r0.w
                                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 73
                                      add r4.yzw, -c2.xxzy, c2.xzyx

#line 47
                                      cmp r5.xy, r4.w, c2.yxzw, c2
                                      min r1.w, c2.z, r5.x  // ::fmin<0>
                                      max r6.x, r5.y, c2.z  // ::fmax<0>
                                      add r5.x, -r1.w, r6.x  // ::delta<0>
                                      add r1.w, r1.w, r6.x  // ::maxplusmin<0>

#line 65
                                      add r5.y, r1.w, -c4.z
                                      rcp r5.z, r1.w
                                      mul r5.z, r5.z, r5.x  // ::hsl<1>
                                      add r1.w, -r1.w, c5.x
                                      rcp r1.w, r1.w
                                      mul r1.w, r1.w, r5.x  // ::hsl<1>
                                      cmp r7.x, r5.y, r1.w, r5.z  // ::hsl<1>

#line 72
                                      add r5.yz, -r6.x, c2.xxyw
                                      rcp r1.w, r5.x

#line 75
                                      mul r4.z, r1.w, r4.z  // ::hsl<0>
                                      mad r4.yw, r4, r1.w, c5.xxzz  // ::hsl<0,0>
                                      cmp r1.w, -r5_abs.z, r4.y, r4.w  // ::hsl<0>
                                      cmp r1.w, -r5_abs.y, r4.z, r1.w  // ::hsl<0>
                                      mul r4.y, r1.w, c5.w  // ::hsl<0>

#line 80
                                      mad r4.z, r1.w, c7.x, c7.y  // ::hsl<0>
                                      cmp r7.yzw, r1.w, r4.y, r4.z  // ::hsl<0,0,0>
                                      cmp r5, -r5_abs.x, c4.x, r7  // ::hsl<1,0,0,0>

#line 46
                                      add r1.w, -r1.y, r1.x
                                      cmp r4.yz, r1.w, r1.xyxw, r1.xxyw
                                      min r6.x, r1.z, r4.y  // ::fmin<0>
                                      max r6.y, r4.z, r1.z  // ::fmax<0>
                                      add r1.w, r6.x, r6.y  // ::maxplusmin<0>

#line 52
                                      mul r4.yzw, r1.w, c4.w  // ::hsl<2,2,2>

#line 90
                                      if_eq r5.x, c4.x

#line 93
                                      else

#line 97
                                        add r6.x, r1.w, -c4.z

#line 24
                                        add r7, r5, c6  // GetHue::temp3<0,0,0>

#line 98
                                        mul r5.y, r4.w, r7.x  // ::temp2<0>
                                        mad r5.z, r1.w, c4.w, r5.x
                                        mad r5.x, r5.x, -r4.w, r5.z  // ::temp2<0>
                                        cmp r5.x, r6.x, r5.x, r5.y  // ::temp2<0>
                                        add r1.w, r1.w, -r5.x  // ::temp1<0>

#line 23
                                        add r5.y, -r7.y, c4.z
                                        cmp r5.y, r5.y, r7.y, r7.w  // GetHue::temp3<0>
                                        cmp r5.y, r7.y, r5.y, r7.z  // GetHue::temp3<0>

#line 29
                                        add r5.z, -r1.w, r5.x
                                        mul r6.x, r5.z, c7.z
                                        mad r6.y, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                                        add r7.xyz, r5.y, c10
                                        add r5.y, -r5.y, c7.w
                                        mul r5.y, r5.y, r5.z
                                        mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r5.y, r7.z, r1.w, r5.y  // ::rgbComponent<0>
                                        cmp r5.y, r7.y, r5.y, r5.x  // ::rgbComponent<0>
                                        cmp r4.y, r7.x, r5.y, r6.y  // ::rgbComponent<0>

#line 23
                                        add r5.y, -r5.w, c4.z
                                        add r7, r5.w, c8  // GetHue::temp3<0,0,0,0>
                                        cmp r5.y, r5.y, r5.w, r7.y  // GetHue::temp3<0>
                                        cmp r5.y, r5.w, r5.y, r7.x  // GetHue::temp3<0>

#line 29
                                        mad r6.y, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                                        add r8.xyz, r5.y, c10
                                        add r5.y, -r5.y, c7.w
                                        mul r5.y, r5.y, r5.z
                                        mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r5.y, r8.z, r1.w, r5.y  // ::rgbComponent<0>
                                        cmp r5.y, r8.y, r5.y, r5.x  // ::rgbComponent<0>
                                        cmp r4.z, r8.x, r5.y, r6.y  // ::rgbComponent<0>

#line 23
                                        add r5.y, -r7.z, c4.z
                                        add r5.w, r5.w, -c6.z  // GetHue::temp3<0>
                                        cmp r5.y, r5.y, r7.z, r5.w  // GetHue::temp3<0>
                                        cmp r5.y, r7.z, r5.y, r7.w  // GetHue::temp3<0>

#line 29
                                        mad r5.w, r6.x, r5.y, r1.w  // ::rgbComponent<0>

#line 32
                                        add r6.xyz, r5.y, c10
                                        add r5.y, -r5.y, c7.w
                                        mul r5.y, r5.y, r5.z
                                        mad r5.y, r5.y, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r1.w, r6.z, r1.w, r5.y  // ::rgbComponent<0>
                                        cmp r1.w, r6.y, r1.w, r5.x  // ::rgbComponent<0>
                                        cmp r4.w, r6.x, r1.w, r5.w  // ::rgbComponent<0>

#line 107
                                      endif

#line 395
                                      lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                      mov r3.w, c1.x  // ::result<3>
                                    else
                                      if_eq r4.x, c14.y

#line 401
                                        rcp r1.w, r0.w
                                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 405
                                        mul r4.yzw, r1.xxyz, c2.xxyz  // ::result<0,1,2>

#line 408
                                        lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                        mov r3.w, c1.x  // ::result<3>
                                      else
                                        if_eq r4.x, c14.z

#line 414
                                          rcp r1.w, r0.w
                                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 417
                                          add r4.yzw, r2.z, -c2.xxyz
                                          add r4.yzw, -r1.xxyz, r4
                                          add r4.yzw, -r4_abs, c4.z  // ::result<0,1,2>

#line 420
                                          lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                          mov r3.w, c1.x  // ::result<3>
                                        else
                                          if_eq r4.x, c14.w
                                            add r1.w, -r0.w, c4.z
                                            add r4.y, r2.z, -c1.x
                                            mad r3.w, r1.w, -r4.y, c4.z  // ::result<3>

#line 428
                                            mul r4.yzw, r0.w, r1.xxyz
                                            rcp r5.x, r3.w
                                            mov r6.xyz, c2  // ::Color<0,1,2>
                                            mul r5.yzw, r6.xxyz, c1.x
                                            mul r5.yzw, r1.w, r5
                                            mul r5.yzw, r5.x, r5
                                            mad r3.xyz, r4.yzww, r5.x, r5.yzww  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c9.x

#line 434
                                              rcp r1.w, r0.w
                                              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 452
                                              add r4.yzw, r2.w, -c2.xxyz
                                              add r5.xyz, -r2.w, c2
                                              mad r5.xyz, r5, -c11.z, c11.w
                                              add r6.xyz, -r1, c4.z
                                              mad r5.xyz, r5, -r6, c4.z  // ::result<0,1,2>

#line 444
                                              dp2add r1.w, r1.x, c2.x, r2.x  // ::result<0>
                                              cmp r6.x, r4.y, r1.w, r5.x  // ::result<0>

#line 450
                                              dp2add r1.w, r1.y, c2.y, r2.x  // ::result<1>
                                              cmp r6.y, r4.z, r1.w, r5.y  // ::result<1>

#line 456
                                              dp2add r1.w, r1.z, c2.z, r2.x  // ::result<2>
                                              cmp r6.z, r4.w, r1.w, r5.z  // ::result<2>

#line 459
                                              lrp r3.xyz, r0.w, r6, c2  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c9.y

#line 465
                                                rcp r1.w, r0.w
                                                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 468
                                                min r4.yzw, r1.xxyz, c2.xxyz
                                                max r5.xyz, c2, r1
                                                add r4.yzw, r4, -r5.xxyz
                                                add r4.yzw, r4, c4.z  // ::result<0,1,2>

#line 471
                                                lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                              else
                                                if_eq r4.x, c9.z

#line 477
                                                  rcp r1.w, r0.w
                                                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 494
                                                  add r4.yzw, -r1.xxyz, c4.w
                                                  add r5.xyz, r1, -c4.w
                                                  add r5.xyz, r5, r5
                                                  max r6.xyz, c2, r5  // ::result<0,1,2>
                                                  add r5.xyz, r1, r1
                                                  min r7.xyz, r5, c2  // ::result<0,1,2>
                                                  cmp r4.yzw, r4, r7.xxyz, r6.xxyz  // ::result<0,1,2>

#line 501
                                                  lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
                                                else
                                                  add r1.w, r4.x, c9.w

#line 507
                                                  rcp r2.w, r0.w
                                                  mul_sat r4.xyz, r1, r2.w  // Blend::blendColor<0,1,2>

#line 512
                                                  add r5.xyz, r4, -c4.z
                                                  mul r6.xyz, c2, c2
                                                  add r7.xyz, -r4, c4.z
                                                  rcp r2.w, r7.x
                                                  mul r2.w, r2.w, r6.x
                                                  min r4.w, r2.w, c4.z
                                                  cmp r8.x, r5.x, r4.x, r4.w  // ::result<0>
                                                  rcp r2.w, r7.y
                                                  mul r2.w, r2.w, r6.y
                                                  min r4.w, r2.w, c4.z
                                                  cmp r8.y, r5.y, r4.y, r4.w  // ::result<1>
                                                  rcp r2.w, r7.z
                                                  mul r2.w, r2.w, r6.z
                                                  min r4.w, r2.w, c4.z
                                                  cmp r8.z, r5.z, r4.z, r4.w  // ::result<2>

#line 515
                                                  lrp r3.xyz, r0.w, r8, c2  // ::result<0,1,2>
                                                  cmp r1.xyz, -r1_abs.w, r4, r1  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                            mov r3.w, c1.x  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 521
      mov r4.x, c0.x  // ::BlendMode<0>
      if_eq r4.x, c15.x

#line 524
        rcp r1.w, r0.w
        mul_sat r4.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 46
        add r1.w, -c2.y, c2.x
        cmp r5.xy, r1.w, c2.yxzw, c2
        min r2.w, c2.z, r5.x  // ::fmin<0>
        max r6.x, r5.y, c2.z  // ::fmax<0>
        add r5.x, r2.w, r6.x  // ::maxplusmin<0>

#line 52
        mul r5.yzw, r5.x, c4.w  // ::hsl<2,2,2>

#line 46
        add r6.y, -r4.z, r4.y
        cmp r4.yz, r6.y, r4.xzyw, r4
        min r6.y, r4.w, r4.y  // ::fmin<0>
        max r6.z, r4.z, r4.w  // ::fmax<0>
        add r4.y, -r6.y, r6.z  // ::delta<0>
        add r4.z, r6.y, r6.z  // ::maxplusmin<0>

#line 65
        add r4.w, r4.z, -c4.z
        rcp r6.y, r4.z
        mul r6.y, r4.y, r6.y  // ::hsl<1>
        add r4.z, -r4.z, c5.x
        rcp r4.z, r4.z
        mul r4.z, r4.z, r4.y  // ::hsl<1>
        cmp r4.z, r4.w, r4.z, r6.y  // ::hsl<1>

#line 81
        cmp r4.y, -r4_abs.y, c4.x, r4.z  // ::hsl<1>

#line 90
        if_eq r4.y, c4.x

#line 93
        else

#line 48
          add r2.w, -r2.w, r6.x  // ::delta<0>

#line 72
          add r4.zw, -r6.x, c2.xyxy
          add r6.xz, -c2.zyxw, c2.yyzw
          rcp r6.y, r2.w
          mul r6.x, r6.y, r6.x  // ::hsl<0>
          mad r6.z, r6.z, r6.y, c5.x  // ::hsl<0>
          mad r1.w, r1.w, r6.y, c5.z  // ::hsl<0>
          cmp r1.w, -r4_abs.w, r6.z, r1.w  // ::hsl<0>
          cmp r1.w, -r4_abs.z, r6.x, r1.w  // ::hsl<0>
          mul r4.z, r1.w, c5.w  // ::hsl<0>

#line 80
          mad r4.w, r1.w, c7.x, c7.y  // ::hsl<0>
          cmp r1.w, r1.w, r4.z, r4.w  // ::hsl<0>
          cmp r1.w, -r2_abs.w, c4.x, r1.w  // ::hsl<0>

#line 97
          add r2.w, r5.x, -c4.z
          add r4.z, r4.y, c4.z
          mul r4.z, r4.z, r5.w  // ::temp2<0>
          mad r4.w, r5.x, c4.w, r4.y
          mad r4.y, r4.y, -r5.w, r4.w  // ::temp2<0>
          cmp r2.w, r2.w, r4.y, r4.z  // ::temp2<0>
          add r4.y, -r2.w, r5.x  // ::temp1<0>

#line 22
          add r6, r1.w, c6.yzwx  // GetHue::temp3<0,0,0,0>
          add r4.z, -r6.x, c4.z
          cmp r4.z, r4.z, r6.x, r6.z  // GetHue::temp3<0>
          cmp r4.z, r6.x, r4.z, r6.y  // GetHue::temp3<0>

#line 29
          add r4.w, r2.w, -r4.y
          mul r5.x, r4.w, c7.z
          mad r6.x, r5.x, r4.z, r4.y  // ::rgbComponent<0>

#line 32
          add r7.xyz, r4.z, c10
          add r4.z, -r4.z, c7.w
          mul r4.z, r4.z, r4.w
          mad r4.z, r4.z, c7.z, r4.y  // ::rgbComponent<0>
          cmp r4.z, r7.z, r4.y, r4.z  // ::rgbComponent<0>
          cmp r4.z, r7.y, r4.z, r2.w  // ::rgbComponent<0>
          cmp r5.y, r7.x, r4.z, r6.x  // ::rgbComponent<0>

#line 23
          add r4.z, -r1.w, c4.z
          add r7, r1.w, -c6.xywz  // GetHue::temp3<0,0,0,0>
          cmp r4.z, r4.z, r1.w, r7.x  // GetHue::temp3<0>
          cmp r1.w, r1.w, r4.z, r6.w  // GetHue::temp3<0>

#line 29
          mad r4.z, r5.x, r1.w, r4.y  // ::rgbComponent<0>

#line 32
          add r6.xyz, r1.w, c10
          add r1.w, -r1.w, c7.w
          mul r1.w, r1.w, r4.w
          mad r1.w, r1.w, c7.z, r4.y  // ::rgbComponent<0>
          cmp r1.w, r6.z, r4.y, r1.w  // ::rgbComponent<0>
          cmp r1.w, r6.y, r1.w, r2.w  // ::rgbComponent<0>
          cmp r5.z, r6.x, r1.w, r4.z  // ::rgbComponent<0>

#line 23
          add r1.w, -r7.y, c4.z
          cmp r1.w, r1.w, r7.y, r7.w  // GetHue::temp3<0>
          cmp r1.w, r7.y, r1.w, r7.z  // GetHue::temp3<0>

#line 29
          mad r4.z, r5.x, r1.w, r4.y  // ::rgbComponent<0>

#line 32
          add r6.xyz, r1.w, c10
          add r1.w, -r1.w, c7.w
          mul r1.w, r1.w, r4.w
          mad r1.w, r1.w, c7.z, r4.y  // ::rgbComponent<0>
          cmp r1.w, r6.z, r4.y, r1.w  // ::rgbComponent<0>
          cmp r1.w, r6.y, r1.w, r2.w  // ::rgbComponent<0>
          cmp r5.w, r6.x, r1.w, r4.z  // ::rgbComponent<0>

#line 107
        endif

#line 531
        lrp r3.xyz, r0.w, r5.yzww, c2  // ::result<0,1,2>
      else
        if_eq r4.x, c15.y

#line 537
          rcp r1.w, r0.w
          mul_sat r4.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 541
          add r5.xyz, r2.z, -c2
          add r4.yzw, -r4, c4.z
          mad r4.yzw, r5.xxyz, -r4, c4.z  // ::result<0,1,2>

#line 544
          lrp r3.xyz, r0.w, r4.yzww, c2  // ::result<0,1,2>
        else
          if_eq r4.x, c15.z

#line 550
            rcp r1.w, r0.w
            mul_sat r4.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 555
            add r5.xyz, r4.yzww, -c4.w
            add r6.xyz, c2, c2
            mul r7.xyz, c2, c2
            mad r8.xyz, r4.yzww, -c11.z, c11.w
            mul r7.xyz, r7, r8
            mad r7.xyz, r6, r4.yzww, r7
            rsq r1.w, c2.x
            rcp r1.w, r1.w
            mad r8.xyz, r4.yzww, c12.y, c12.z
            add r4.yzw, -r4, c4.z
            mul r4.yzw, r4, r6.xxyz
            mad r1.w, r1.w, r8.x, r4.y
            cmp r6.x, r5.x, r1.w, r7.x  // ::result<0>
            rsq r1.w, c2.y
            rcp r1.w, r1.w
            mad r1.w, r1.w, r8.y, r4.z
            cmp r6.y, r5.y, r1.w, r7.y  // ::result<1>
            rsq r1.w, c2.z
            rcp r1.w, r1.w
            mad r1.w, r1.w, r8.z, r4.w
            cmp r6.z, r5.z, r1.w, r7.z  // ::result<2>

#line 558
            lrp r3.xyz, r0.w, r6, c2  // ::result<0,1,2>
          else
            if_eq r4.x, c15.w

#line 564
              rcp r1.w, r0.w
              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 569
              add r4.yzw, r1.xxyz, -c4.w
              add r1.xyz, r1, r1
              add r5.xyz, r2.z, -c2
              rcp r1.w, r1.x
              mad r1.w, r5.x, -r1.w, c4.z
              max r2.w, r1.w, c4.x
              cmp r1.x, -r1.x, r1.x, r2.w
              add r6.xyz, r4.yzww, r4.yzww
              mad r7.xyz, r4.yzww, c12.y, c12.z
              mad r8.xyz, r4.yzww, -c11.z, c11.w
              rcp r1.w, r8.x
              mul r1.w, r1.w, c2.x
              min r2.w, r1.w, c4.z
              cmp r1.w, r7.x, r6.x, r2.w
              cmp r9.x, r4.y, r1.w, r1.x  // ::result<0>
              rcp r1.x, r1.y
              mad r1.x, r5.y, -r1.x, c4.z
              max r2.w, r1.x, c4.x
              cmp r1.x, -r1.y, r1.y, r2.w
              rcp r1.y, r8.y
              mul r1.y, r1.y, c2.y
              min r2.w, r1.y, c4.z
              cmp r1.y, r7.y, r6.y, r2.w
              cmp r9.y, r4.z, r1.y, r1.x  // ::result<1>
              rcp r1.x, r1.z
              mad r1.x, r5.z, -r1.x, c4.z
              max r2.w, r1.x, c4.x
              cmp r1.x, -r1.z, r1.z, r2.w
              rcp r1.y, r8.z
              mul r1.y, r1.y, c2.z
              min r2.w, r1.y, c4.z
              cmp r1.y, r7.z, r6.z, r2.w
              cmp r9.z, r4.w, r1.y, r1.x  // ::result<2>

#line 572
              lrp r3.xyz, r0.w, r9, c2  // ::result<0,1,2>
            endif
          endif
        endif
      endif

#line 118
      abs r1.xyz, c2
      cmp r1.xyz, -r1, r2.y, c2  // Blend::blendColor<0,1,2>

#line 124
      if_eq c0.x, r2.x

#line 127
        rcp r1.w, c1.x
        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 130
        add r2.xyw, r0.xyzz, r1.xyzz
        mul r2.xyw, r2, c1.x

#line 133
        add r1.w, r2.z, -c1.x
        mul r2.xyw, r2, c4.w
        mad r5.xyz, r1.w, r0, r2.xyww  // ::result<0,1,2>
        mov r5.w, r0.w  // ::result<3>
      else
        if_eq c0.x, r2.z

#line 139
          rcp r1.w, c1.x
          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 143
          add r2.xyw, -r0.xyzz, c4.z
          rcp r6.x, r1.x
          rcp r6.y, r1.y
          rcp r6.z, r1.z
          mad_sat r2.xyw, r2, -r6.xyzz, c4.z  // ::result<0,1,2>

#line 146
          lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
          mov r5.w, r0.w  // ::result<3>
        else
          if_eq r4.x, c5.x

#line 152
            rcp r1.w, c1.x
            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 158
            add r2.xyw, r1.xyzz, -c4.z
            add r4.yzw, -r1.xxyz, c4.z
            rcp r1.w, r4.y
            mul r1.w, r0.x, r1.w
            min r4.y, r1.w, c4.z
            cmp r6.x, r2.x, r1.x, r4.y  // ::result<0>
            rcp r1.w, r4.z
            mul r1.w, r0.y, r1.w
            min r2.x, r1.w, c4.z
            cmp r6.y, r2.y, r1.y, r2.x  // ::result<1>
            rcp r1.w, r4.w
            mul r1.w, r0.z, r1.w
            min r2.x, r1.w, c4.z
            cmp r6.z, r2.w, r1.z, r2.x  // ::result<2>

#line 161
            lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
            mov r5.w, r0.w  // ::result<3>
          else
            if_eq r4.x, c5.y

#line 167
              rcp r1.w, c1.x
              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 73
              add r2.xyw, -r1.xzzy, r1.zyzx

#line 47
              cmp r4.yz, r2.w, r1.xyxw, r1.xxyw
              min r6.x, r1.z, r4.y  // ::fmin<0>
              max r6.y, r4.z, r1.z  // ::fmax<0>
              add r1.w, -r6.x, r6.y  // ::delta<0>
              add r4.y, r6.x, r6.y  // ::maxplusmin<0>

#line 65
              add r4.z, r4.y, -c4.z
              rcp r4.w, r4.y
              add r4.y, -r4.y, c5.x
              rcp r4.y, r4.y
              mul r4.yw, r1.w, r4  // ::hsl<1,1>
              cmp r7.x, r4.z, r4.y, r4.w  // ::hsl<1>

#line 72
              add r4.yz, r1.xxyw, -r6.y
              rcp r4.w, r1.w

#line 75
              mul r2.y, r2.y, r4.w  // ::hsl<0>
              mad r2.xw, r2, r4.w, c5.xyzz  // ::hsl<0,0>
              cmp r2.x, -r4_abs.z, r2.x, r2.w  // ::hsl<0>
              cmp r2.x, -r4_abs.y, r2.y, r2.x  // ::hsl<0>
              mul r2.y, r2.x, c5.w  // ::hsl<0>

#line 80
              mad r2.w, r2.x, c7.x, c7.y  // ::hsl<0>
              cmp r7.yzw, r2.x, r2.y, r2.w  // ::hsl<0,0,0>
              cmp r6, -r1_abs.w, c4.x, r7  // ::hsl<1,0,0,0>

#line 46
              add r1.w, -r0.y, r0.x
              cmp r2.xy, r1.w, r0.yxzw, r0
              min r1.w, r0.z, r2.x  // ::fmin<0>
              max r4.y, r2.y, r0.z  // ::fmax<0>
              add r1.w, r1.w, r4.y  // ::maxplusmin<0>

#line 52
              mul r2.xyw, r1.w, c4.w  // ::hsl<2,2,2>

#line 90
              if_eq r6.x, c4.x

#line 93
              else

#line 97
                add r4.y, r1.w, -c4.z

#line 24
                add r7, r6, c6  // GetHue::temp3<0,0,0>

#line 98
                mul r4.z, r2.w, r7.x  // ::temp2<0>
                mad r4.w, r1.w, c4.w, r6.x
                mad r4.w, r6.x, -r2.w, r4.w  // ::temp2<0>
                cmp r4.y, r4.y, r4.w, r4.z  // ::temp2<0>
                add r1.w, r1.w, -r4.y  // ::temp1<0>

#line 23
                add r4.z, -r7.y, c4.z
                cmp r4.z, r4.z, r7.y, r7.w  // GetHue::temp3<0>
                cmp r4.z, r7.y, r4.z, r7.z  // GetHue::temp3<0>

#line 29
                add r4.w, -r1.w, r4.y
                mul r6.x, r4.w, c7.z
                mad r6.y, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                add r7.xyz, r4.z, c10
                add r4.z, -r4.z, c7.w
                mul r4.z, r4.z, r4.w
                mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                cmp r4.z, r7.z, r1.w, r4.z  // ::rgbComponent<0>
                cmp r4.z, r7.y, r4.z, r4.y  // ::rgbComponent<0>
                cmp r2.x, r7.x, r4.z, r6.y  // ::rgbComponent<0>

#line 23
                add r4.z, -r6.w, c4.z
                add r7, r6.w, c8  // GetHue::temp3<0,0,0,0>
                cmp r4.z, r4.z, r6.w, r7.y  // GetHue::temp3<0>
                cmp r4.z, r6.w, r4.z, r7.x  // GetHue::temp3<0>

#line 29
                mad r6.y, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                add r8.xyz, r4.z, c10
                add r4.z, -r4.z, c7.w
                mul r4.z, r4.z, r4.w
                mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                cmp r4.z, r8.z, r1.w, r4.z  // ::rgbComponent<0>
                cmp r4.z, r8.y, r4.z, r4.y  // ::rgbComponent<0>
                cmp r2.y, r8.x, r4.z, r6.y  // ::rgbComponent<0>

#line 23
                add r4.z, -r7.z, c4.z
                add r6.y, r6.w, -c6.z  // GetHue::temp3<0>
                cmp r4.z, r4.z, r7.z, r6.y  // GetHue::temp3<0>
                cmp r4.z, r7.z, r4.z, r7.w  // GetHue::temp3<0>

#line 29
                mad r6.x, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                add r6.yzw, r4.z, c10.xxyz
                add r4.z, -r4.z, c7.w
                mul r4.z, r4.z, r4.w
                mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                cmp r1.w, r6.w, r1.w, r4.z  // ::rgbComponent<0>
                cmp r1.w, r6.z, r1.w, r4.y  // ::rgbComponent<0>
                cmp r2.w, r6.y, r1.w, r6.x  // ::rgbComponent<0>

#line 107
              endif

#line 174
              lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
              mov r5.w, r0.w  // ::result<3>
            else
              if_eq r4.x, c5.z

#line 180
                rcp r1.w, c1.x
                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 198
                min r2.xyw, r0.xyzz, r1.xyzz  // ::result<0,1,2>

#line 201
                lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                mov r5.w, r0.w  // ::result<3>
              else
                if_eq r4.x, c10.w

#line 207
                  rcp r1.w, c1.x
                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 211
                  add r2.xyw, r0.xyzz, -r1.xyzz

#line 214
                  lrp r5.xyz, c1.x, r2_abs.xyww, r0  // ::result<0,1,2>
                  mov r5.w, r0.w  // ::result<3>
                else
                  if_eq r4.x, c7.z

#line 220
                    rcp r1.w, c1.x
                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 224
                    add r2.xyw, r0.xyzz, -c4.w
                    add r2.xyw, r2, r2
                    add r4.yzw, r1.xxyz, -c4.w
                    mad r2.xyw, r2, -r4.yzzw, c4.w  // ::result<0,1,2>

#line 227
                    lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                    mov r5.w, r0.w  // ::result<3>
                  else
                    if_eq r4.x, c11.x

#line 233
                      rcp r1.w, c1.x
                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 238
                      add r2.xyw, r0.xyzz, -c4.z
                      mul r4.yzw, r1.xxyz, r1.xxyz
                      add r6.xyz, -r0, c4.z
                      rcp r1.w, r6.x
                      mul r1.w, r1.w, r4.y
                      min r4.y, r1.w, c4.z
                      cmp r7.x, -r2_abs.x, r0.x, r4.y  // ::result<0>
                      rcp r1.w, r6.y
                      mul r1.w, r1.w, r4.z
                      min r2.x, r1.w, c4.z
                      cmp r7.y, -r2_abs.y, r0.y, r2.x  // ::result<1>
                      rcp r1.w, r6.z
                      mul r1.w, r1.w, r4.w
                      min r2.x, r1.w, c4.z
                      cmp r7.z, -r2_abs.w, r0.z, r2.x  // ::result<2>

#line 241
                      lrp r5.xyz, c1.x, r7, r0  // ::result<0,1,2>
                      mov r5.w, r0.w  // ::result<3>
                    else
                      if_eq r4.x, c11.y

#line 247
                        rcp r1.w, c1.x
                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 264
                        add r2.xyw, -r1.xyzz, c4.w
                        add r4.yzw, -r0.xxyz, c4.z
                        add r6.xyz, r1, -c4.w
                        mad r6.xyz, r6, -c11.z, c11.w
                        mad r4.yzw, r4, -r6.xxyz, c4.z  // ::result<0,1,2>

#line 256
                        dp2add r1.w, r0.x, r1.x, c4.x  // ::result<0>
                        cmp r6.x, r2.x, r1.w, r4.y  // ::result<0>

#line 262
                        dp2add r1.w, r0.y, r1.y, c4.x  // ::result<1>
                        cmp r6.y, r2.y, r1.w, r4.z  // ::result<1>

#line 268
                        dp2add r1.w, r0.z, r1.z, c4.x  // ::result<2>
                        cmp r6.z, r2.w, r1.w, r4.w  // ::result<2>

#line 271
                        lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
                        mov r5.w, r0.w  // ::result<3>
                      else
                        if_eq r4.x, c12.x

#line 277
                          rcp r1.w, c1.x
                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 282
                          add r2.xyw, r1.xyzz, -c4.w
                          add r4.yzw, r1.xxyz, r1.xxyz
                          add r6.xyz, -r0, c4.z
                          rcp r1.w, r4.y
                          mad r1.w, r6.x, -r1.w, c4.z
                          max r6.x, r1.w, c4.x
                          cmp r1.w, -r4.y, r4.y, r6.x
                          add r7.xyz, r2.xyww, r2.xyww
                          mad r8.xyz, r2.xyww, c12.y, c12.z
                          mad r9.xyz, r2.xyww, -c11.z, c11.w
                          rcp r4.y, r9.x
                          mul r4.y, r0.x, r4.y
                          min r6.x, r4.y, c4.z
                          cmp r4.y, r8.x, r7.x, r6.x
                          cmp r1.w, r2.x, r4.y, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.x, r1.w, c4.z, c4.x  // ::result<0>
                          rcp r1.w, r4.z
                          mad r1.w, r6.y, -r1.w, c4.z
                          max r2.x, r1.w, c4.x
                          cmp r1.w, -r4.z, r4.z, r2.x
                          rcp r2.x, r9.y
                          mul r2.x, r0.y, r2.x
                          min r4.y, r2.x, c4.z
                          cmp r2.x, r8.y, r7.y, r4.y
                          cmp r1.w, r2.y, r2.x, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.y, r1.w, c4.z, c4.x  // ::result<1>
                          rcp r1.w, r4.w
                          mad r1.w, r6.z, -r1.w, c4.z
                          max r2.x, r1.w, c4.x
                          cmp r1.w, -r4.w, r4.w, r2.x
                          rcp r2.x, r9.z
                          mul r2.x, r0.z, r2.x
                          min r4.y, r2.x, c4.z
                          cmp r2.x, r8.z, r7.z, r4.y
                          cmp r1.w, r2.w, r2.x, r1.w
                          add r1.w, r1.w, -c4.w
                          cmp r10.z, r1.w, c4.z, c4.x  // ::result<2>

#line 285
                          lrp r5.xyz, c1.x, r10, r0  // ::result<0,1,2>
                          mov r5.w, r0.w  // ::result<3>
                        else
                          if_eq r4.x, c12.w

#line 291
                            rcp r1.w, c1.x
                            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 46
                            add r1.w, -r0.y, r0.x
                            cmp r2.xy, r1.w, r0.yxzw, r0
                            min r1.w, r0.z, r2.x  // ::fmin<0>
                            max r4.y, r2.y, r0.z  // ::fmax<0>
                            add r2.x, -r1.w, r4.y  // ::delta<0>
                            add r1.w, r1.w, r4.y  // ::maxplusmin<0>

#line 52
                            mul r4.yzw, r1.w, c4.w  // ::hsl<2,2,2>

#line 65
                            add r2.y, r1.w, -c4.z
                            rcp r2.w, r1.w
                            mul r2.w, r2.w, r2.x  // ::hsl<1>
                            add r6.x, -r1.w, c5.x
                            rcp r6.x, r6.x
                            mul r6.x, r2.x, r6.x  // ::hsl<1>
                            cmp r2.w, r2.y, r6.x, r2.w  // ::hsl<1>

#line 81
                            cmp r2.x, -r2_abs.x, c4.x, r2.w  // ::hsl<1>

#line 90
                            if_eq r2.x, c4.x

#line 93
                            else

#line 73
                              add r6.xyz, -r1.xzyw, r1.zyxw

#line 47
                              cmp r7.xy, r6.z, r1.yxzw, r1
                              min r2.w, r1.z, r7.x  // ::fmin<0>
                              max r6.w, r7.y, r1.z  // ::fmax<0>
                              add r2.w, -r2.w, r6.w  // ::delta<0>

#line 72
                              add r7.xy, r1, -r6.w
                              rcp r6.w, r2.w

#line 75
                              mul r6.y, r6.w, r6.y  // ::hsl<0>
                              mad r6.xz, r6, r6.w, c5  // ::hsl<0,0>
                              cmp r6.x, -r7_abs.y, r6.x, r6.z  // ::hsl<0>
                              cmp r6.x, -r7_abs.x, r6.y, r6.x  // ::hsl<0>
                              mul r6.y, r6.x, c5.w  // ::hsl<0>

#line 80
                              mad r6.z, r6.x, c7.x, c7.y  // ::hsl<0>
                              cmp r6.x, r6.x, r6.y, r6.z  // ::hsl<0>
                              cmp r2.w, -r2_abs.w, c4.x, r6.x  // ::hsl<0>

#line 98
                              add r6.x, r2.x, c4.z
                              mul r6.x, r4.w, r6.x  // ::temp2<0>
                              mad r6.y, r1.w, c4.w, r2.x
                              mad r2.x, r2.x, -r4.w, r6.y  // ::temp2<0>
                              cmp r2.x, r2.y, r2.x, r6.x  // ::temp2<0>
                              add r1.w, r1.w, -r2.x  // ::temp1<0>

#line 22
                              add r6, r2.w, c6.yzwx  // GetHue::temp3<0,0,0,0>
                              add r2.y, -r6.x, c4.z
                              cmp r2.y, r2.y, r6.x, r6.z  // GetHue::temp3<0>
                              cmp r2.y, r6.x, r2.y, r6.y  // GetHue::temp3<0>

#line 29
                              add r6.x, -r1.w, r2.x
                              mul r6.y, r6.x, c7.z
                              mad r6.z, r6.y, r2.y, r1.w  // ::rgbComponent<0>

#line 32
                              add r7.xyz, r2.y, c10
                              add r2.y, -r2.y, c7.w
                              mul r2.y, r2.y, r6.x
                              mad r2.y, r2.y, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r2.y, r7.z, r1.w, r2.y  // ::rgbComponent<0>
                              cmp r2.y, r7.y, r2.y, r2.x  // ::rgbComponent<0>
                              cmp r4.y, r7.x, r2.y, r6.z  // ::rgbComponent<0>

#line 23
                              add r2.y, -r2.w, c4.z
                              add r7, r2.w, -c6.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r2.y, r2.y, r2.w, r7.x  // GetHue::temp3<0>
                              cmp r2.y, r2.w, r2.y, r6.w  // GetHue::temp3<0>

#line 29
                              mad r2.w, r6.y, r2.y, r1.w  // ::rgbComponent<0>

#line 32
                              add r8.xyz, r2.y, c10
                              add r2.y, -r2.y, c7.w
                              mul r2.y, r2.y, r6.x
                              mad r2.y, r2.y, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r2.y, r8.z, r1.w, r2.y  // ::rgbComponent<0>
                              cmp r2.y, r8.y, r2.y, r2.x  // ::rgbComponent<0>
                              cmp r4.z, r8.x, r2.y, r2.w  // ::rgbComponent<0>

#line 23
                              add r2.y, -r7.y, c4.z
                              cmp r2.y, r2.y, r7.y, r7.w  // GetHue::temp3<0>
                              cmp r2.y, r7.y, r2.y, r7.z  // GetHue::temp3<0>

#line 29
                              mad r2.w, r6.y, r2.y, r1.w  // ::rgbComponent<0>

#line 32
                              add r6.yzw, r2.y, c10.xxyz
                              add r2.y, -r2.y, c7.w
                              mul r2.y, r2.y, r6.x
                              mad r2.y, r2.y, c7.z, r1.w  // ::rgbComponent<0>
                              cmp r1.w, r6.w, r1.w, r2.y  // ::rgbComponent<0>
                              cmp r1.w, r6.z, r1.w, r2.x  // ::rgbComponent<0>
                              cmp r4.w, r6.y, r1.w, r2.w  // ::rgbComponent<0>

#line 107
                            endif

#line 298
                            lrp r5.xyz, c1.x, r4.yzww, r0  // ::result<0,1,2>
                            mov r5.w, r0.w  // ::result<3>
                          else
                            if_eq r4.x, c13.x

#line 304
                              rcp r1.w, c1.x
                              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 323
                              max r2.xyw, r0.xyzz, r1.xyzz  // ::result<0,1,2>

#line 326
                              lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                              mov r5.w, r0.w  // ::result<3>
                            else
                              if_eq r4.x, c13.y

#line 332
                                rcp r1.w, c1.x
                                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 336
                                add r2.xyw, r0.xyzz, r1.xyzz
                                add_sat r2.xyw, r2, -c4.z  // ::result<0,1,2>

#line 339
                                lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                mov r5.w, r0.w  // ::result<3>
                              else
                                if_eq r4.x, c13.z

#line 345
                                  rcp r1.w, c1.x
                                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 349
                                  add r2.xyw, r0.xyzz, r1.xyzz  // ::result<0,1,2>

#line 352
                                  lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                  mov r5.w, r0.w  // ::result<3>
                                else
                                  if_eq r4.x, c13.w

#line 358
                                    rcp r1.w, c1.x
                                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 375
                                    add r2.xyw, -r1.xyzz, c4.w
                                    add r4.yzw, r1.xxyz, -c4.w
                                    mad r4.yzw, r4, c5.x, r0.xxyz  // ::result<0,1,2>
                                    mad r6.xyz, r1, c5.x, r0
                                    add r6.xyz, r6, -c4.z  // ::result<0,1,2>
                                    cmp r2.xyw, r2, r6.xyzz, r4.yzzw  // ::result<0,1,2>

#line 382
                                    lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                    mov r5.w, r0.w  // ::result<3>
                                  else
                                    if_eq r4.x, c14.x

#line 388
                                      rcp r1.w, c1.x
                                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 73
                                      add r2.xyw, -r0.xzzy, r0.zyzx

#line 47
                                      cmp r4.yz, r2.w, r0.xyxw, r0.xxyw
                                      min r1.w, r0.z, r4.y  // ::fmin<0>
                                      max r6.x, r4.z, r0.z  // ::fmax<0>
                                      add r4.y, -r1.w, r6.x  // ::delta<0>
                                      add r1.w, r1.w, r6.x  // ::maxplusmin<0>

#line 65
                                      add r4.z, r1.w, -c4.z
                                      rcp r4.w, r1.w
                                      mul r4.w, r4.w, r4.y  // ::hsl<1>
                                      add r1.w, -r1.w, c5.x
                                      rcp r1.w, r1.w
                                      mul r1.w, r1.w, r4.y  // ::hsl<1>
                                      cmp r7.x, r4.z, r1.w, r4.w  // ::hsl<1>

#line 72
                                      add r4.zw, r0.xyxy, -r6.x
                                      rcp r1.w, r4.y

#line 75
                                      mul r2.y, r1.w, r2.y  // ::hsl<0>
                                      mad r2.xw, r2, r1.w, c5.xyzz  // ::hsl<0,0>
                                      cmp r1.w, -r4_abs.w, r2.x, r2.w  // ::hsl<0>
                                      cmp r1.w, -r4_abs.z, r2.y, r1.w  // ::hsl<0>
                                      mul r2.x, r1.w, c5.w  // ::hsl<0>

#line 80
                                      mad r2.y, r1.w, c7.x, c7.y  // ::hsl<0>
                                      cmp r7.yzw, r1.w, r2.x, r2.y  // ::hsl<0,0,0>
                                      cmp r6, -r4_abs.y, c4.x, r7  // ::hsl<1,0,0,0>

#line 46
                                      add r1.w, -r1.y, r1.x
                                      cmp r2.xy, r1.w, r1.yxzw, r1
                                      min r4.y, r1.z, r2.x  // ::fmin<0>
                                      max r4.z, r2.y, r1.z  // ::fmax<0>
                                      add r1.w, r4.y, r4.z  // ::maxplusmin<0>

#line 52
                                      mul r2.xyw, r1.w, c4.w  // ::hsl<2,2,2>

#line 90
                                      if_eq r6.x, c4.x

#line 93
                                      else

#line 97
                                        add r4.y, r1.w, -c4.z

#line 24
                                        add r7, r6, c6  // GetHue::temp3<0,0,0>

#line 98
                                        mul r4.z, r2.w, r7.x  // ::temp2<0>
                                        mad r4.w, r1.w, c4.w, r6.x
                                        mad r4.w, r6.x, -r2.w, r4.w  // ::temp2<0>
                                        cmp r4.y, r4.y, r4.w, r4.z  // ::temp2<0>
                                        add r1.w, r1.w, -r4.y  // ::temp1<0>

#line 23
                                        add r4.z, -r7.y, c4.z
                                        cmp r4.z, r4.z, r7.y, r7.w  // GetHue::temp3<0>
                                        cmp r4.z, r7.y, r4.z, r7.z  // GetHue::temp3<0>

#line 29
                                        add r4.w, -r1.w, r4.y
                                        mul r6.x, r4.w, c7.z
                                        mad r6.y, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                                        add r7.xyz, r4.z, c10
                                        add r4.z, -r4.z, c7.w
                                        mul r4.z, r4.z, r4.w
                                        mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r4.z, r7.z, r1.w, r4.z  // ::rgbComponent<0>
                                        cmp r4.z, r7.y, r4.z, r4.y  // ::rgbComponent<0>
                                        cmp r2.x, r7.x, r4.z, r6.y  // ::rgbComponent<0>

#line 23
                                        add r4.z, -r6.w, c4.z
                                        add r7, r6.w, c8  // GetHue::temp3<0,0,0,0>
                                        cmp r4.z, r4.z, r6.w, r7.y  // GetHue::temp3<0>
                                        cmp r4.z, r6.w, r4.z, r7.x  // GetHue::temp3<0>

#line 29
                                        mad r6.y, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                                        add r8.xyz, r4.z, c10
                                        add r4.z, -r4.z, c7.w
                                        mul r4.z, r4.z, r4.w
                                        mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r4.z, r8.z, r1.w, r4.z  // ::rgbComponent<0>
                                        cmp r4.z, r8.y, r4.z, r4.y  // ::rgbComponent<0>
                                        cmp r2.y, r8.x, r4.z, r6.y  // ::rgbComponent<0>

#line 23
                                        add r4.z, -r7.z, c4.z
                                        add r6.y, r6.w, -c6.z  // GetHue::temp3<0>
                                        cmp r4.z, r4.z, r7.z, r6.y  // GetHue::temp3<0>
                                        cmp r4.z, r7.z, r4.z, r7.w  // GetHue::temp3<0>

#line 29
                                        mad r6.x, r6.x, r4.z, r1.w  // ::rgbComponent<0>

#line 32
                                        add r6.yzw, r4.z, c10.xxyz
                                        add r4.z, -r4.z, c7.w
                                        mul r4.z, r4.z, r4.w
                                        mad r4.z, r4.z, c7.z, r1.w  // ::rgbComponent<0>
                                        cmp r1.w, r6.w, r1.w, r4.z  // ::rgbComponent<0>
                                        cmp r1.w, r6.z, r1.w, r4.y  // ::rgbComponent<0>
                                        cmp r2.w, r6.y, r1.w, r6.x  // ::rgbComponent<0>

#line 107
                                      endif

#line 395
                                      lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                      mov r5.w, r0.w  // ::result<3>
                                    else
                                      if_eq r4.x, c14.y

#line 401
                                        rcp r1.w, c1.x
                                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 405
                                        mul r2.xyw, r0.xyzz, r1.xyzz  // ::result<0,1,2>

#line 408
                                        lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                        mov r5.w, r0.w  // ::result<3>
                                      else
                                        if_eq r4.x, c14.z

#line 414
                                          rcp r1.w, c1.x
                                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 417
                                          add r2.xyw, -r0.xyzz, c4.z
                                          add r2.xyw, -r1.xyzz, r2
                                          add r2.xyw, -r2_abs, c4.z  // ::result<0,1,2>

#line 420
                                          lrp r5.xyz, c1.x, r2.xyww, r0  // ::result<0,1,2>
                                          mov r5.w, r0.w  // ::result<3>
                                        else
                                          if_eq r4.x, c14.w
                                            add r1.w, r2.z, -c1.x
                                            add r2.x, -r0.w, c4.z
                                            mad r5.w, r1.w, -r2.x, c4.z  // ::result<3>

#line 428
                                            mul r2.xyz, r1, c1.x
                                            rcp r2.w, r5.w
                                            mul r4.yzw, r0.w, r0.xxyz
                                            mul r4.yzw, r1.w, r4
                                            mul r4.yzw, r2.w, r4
                                            mad r5.xyz, r2, r2.w, r4.yzww  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c9.x

#line 434
                                              rcp r1.w, c1.x
                                              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 452
                                              add r2.xyz, -r0, c4.w
                                              add r4.yzw, r0.xxyz, -c4.w
                                              mad r4.yzw, r4, -c11.z, c11.w
                                              add r6.xyz, -r1, c4.z
                                              mad r4.yzw, r4, -r6.xxyz, c4.z  // ::result<0,1,2>

#line 444
                                              dp2add r1.w, r1.x, r0.x, c4.x  // ::result<0>
                                              cmp r6.x, r2.x, r1.w, r4.y  // ::result<0>

#line 450
                                              dp2add r1.w, r1.y, r0.y, c4.x  // ::result<1>
                                              cmp r6.y, r2.y, r1.w, r4.z  // ::result<1>

#line 456
                                              dp2add r1.w, r1.z, r0.z, c4.x  // ::result<2>
                                              cmp r6.z, r2.z, r1.w, r4.w  // ::result<2>

#line 459
                                              lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c9.y

#line 465
                                                rcp r1.w, c1.x
                                                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 468
                                                min r2.xyz, r1, r0
                                                max r4.yzw, r0.xxyz, r1.xxyz
                                                add r2.xyz, r2, -r4.yzww
                                                add r2.xyz, r2, c4.z  // ::result<0,1,2>

#line 471
                                                lrp r5.xyz, c1.x, r2, r0  // ::result<0,1,2>
                                              else
                                                if_eq r4.x, c9.z

#line 477
                                                  rcp r1.w, c1.x
                                                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 494
                                                  add r2.xyz, -r1, c4.w
                                                  add r4.yzw, r1.xxyz, -c4.w
                                                  add r4.yzw, r4, r4
                                                  max r6.xyz, r0, r4.yzww  // ::result<0,1,2>
                                                  add r4.yzw, r1.xxyz, r1.xxyz
                                                  min r7.xyz, r4.yzww, r0  // ::result<0,1,2>
                                                  cmp r2.xyz, r2, r7, r6  // ::result<0,1,2>

#line 501
                                                  lrp r5.xyz, c1.x, r2, r0  // ::result<0,1,2>
                                                else
                                                  add r1.w, r4.x, c9.w

#line 507
                                                  rcp r2.x, c1.x
                                                  mul_sat r2.xyz, r1, r2.x  // Blend::blendColor<0,1,2>

#line 512
                                                  add r4.yzw, r2.xxyz, -c4.z
                                                  mul r6.xyz, r0, r0
                                                  add r7.xyz, -r2, c4.z
                                                  rcp r2.w, r7.x
                                                  mul r2.w, r2.w, r6.x
                                                  min r6.x, r2.w, c4.z
                                                  cmp r8.x, r4.y, r2.x, r6.x  // ::result<0>
                                                  rcp r2.w, r7.y
                                                  mul r2.w, r2.w, r6.y
                                                  min r4.y, r2.w, c4.z
                                                  cmp r8.y, r4.z, r2.y, r4.y  // ::result<1>
                                                  rcp r2.w, r7.z
                                                  mul r2.w, r2.w, r6.z
                                                  min r4.y, r2.w, c4.z
                                                  cmp r8.z, r4.w, r2.z, r4.y  // ::result<2>

#line 515
                                                  lrp r5.xyz, c1.x, r8, r0  // ::result<0,1,2>
                                                  cmp r1.xyz, -r1_abs.w, r2, r1  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                            mov r5.w, r0.w  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 521
      if_eq r4.x, c15.x

#line 524
        rcp r1.w, c1.x
        mul_sat r2.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 46
        add r1.w, -r0.y, r0.x
        cmp r4.yz, r1.w, r0.xyxw, r0.xxyw
        min r2.w, r0.z, r4.y  // ::fmin<0>
        max r6.x, r4.z, r0.z  // ::fmax<0>
        add r4.y, r2.w, r6.x  // ::maxplusmin<0>

#line 52
        mul r6.yzw, r4.y, c4.w  // ::hsl<2,2,2>

#line 46
        add r4.z, -r2.y, r2.x
        cmp r2.xy, r4.z, r2.yxzw, r2
        min r4.z, r2.z, r2.x  // ::fmin<0>
        max r4.w, r2.y, r2.z  // ::fmax<0>
        add r2.x, -r4.z, r4.w  // ::delta<0>
        add r2.y, r4.z, r4.w  // ::maxplusmin<0>

#line 65
        add r2.z, r2.y, -c4.z
        rcp r4.z, r2.y
        mul r4.z, r2.x, r4.z  // ::hsl<1>
        add r2.y, -r2.y, c5.x
        rcp r2.y, r2.y
        mul r2.y, r2.y, r2.x  // ::hsl<1>
        cmp r2.y, r2.z, r2.y, r4.z  // ::hsl<1>

#line 81
        cmp r2.x, -r2_abs.x, c4.x, r2.y  // ::hsl<1>

#line 90
        if_eq r2.x, c4.x

#line 93
        else

#line 48
          add r2.y, -r2.w, r6.x  // ::delta<0>

#line 72
          add r2.zw, r0.xyxy, -r6.x
          add r4.zw, -r0.xyzx, r0.xyyz
          rcp r6.x, r2.y
          mul r4.z, r4.z, r6.x  // ::hsl<0>
          mad r4.w, r4.w, r6.x, c5.x  // ::hsl<0>
          mad r1.w, r1.w, r6.x, c5.z  // ::hsl<0>
          cmp r1.w, -r2_abs.w, r4.w, r1.w  // ::hsl<0>
          cmp r1.w, -r2_abs.z, r4.z, r1.w  // ::hsl<0>
          mul r2.z, r1.w, c5.w  // ::hsl<0>

#line 80
          mad r2.w, r1.w, c7.x, c7.y  // ::hsl<0>
          cmp r1.w, r1.w, r2.z, r2.w  // ::hsl<0>
          cmp r1.w, -r2_abs.y, c4.x, r1.w  // ::hsl<0>

#line 97
          add r2.y, r4.y, -c4.z
          add r2.z, r2.x, c4.z
          mul r2.z, r2.z, r6.w  // ::temp2<0>
          mad r2.w, r4.y, c4.w, r2.x
          mad r2.x, r2.x, -r6.w, r2.w  // ::temp2<0>
          cmp r2.x, r2.y, r2.x, r2.z  // ::temp2<0>
          add r2.y, -r2.x, r4.y  // ::temp1<0>

#line 22
          add r7, r1.w, c6.yzwx  // GetHue::temp3<0,0,0,0>
          add r2.z, -r7.x, c4.z
          cmp r2.z, r2.z, r7.x, r7.z  // GetHue::temp3<0>
          cmp r2.z, r7.x, r2.z, r7.y  // GetHue::temp3<0>

#line 29
          add r2.w, -r2.y, r2.x
          mul r4.y, r2.w, c7.z
          mad r4.z, r4.y, r2.z, r2.y  // ::rgbComponent<0>

#line 32
          add r7.xyz, r2.z, c10
          add r2.z, -r2.z, c7.w
          mul r2.z, r2.z, r2.w
          mad r2.z, r2.z, c7.z, r2.y  // ::rgbComponent<0>
          cmp r2.z, r7.z, r2.y, r2.z  // ::rgbComponent<0>
          cmp r2.z, r7.y, r2.z, r2.x  // ::rgbComponent<0>
          cmp r6.y, r7.x, r2.z, r4.z  // ::rgbComponent<0>

#line 23
          add r2.z, -r1.w, c4.z
          add r8, r1.w, -c6.xywz  // GetHue::temp3<0,0,0,0>
          cmp r2.z, r2.z, r1.w, r8.x  // GetHue::temp3<0>
          cmp r1.w, r1.w, r2.z, r7.w  // GetHue::temp3<0>

#line 29
          mad r2.z, r4.y, r1.w, r2.y  // ::rgbComponent<0>

#line 32
          add r7.xyz, r1.w, c10
          add r1.w, -r1.w, c7.w
          mul r1.w, r1.w, r2.w
          mad r1.w, r1.w, c7.z, r2.y  // ::rgbComponent<0>
          cmp r1.w, r7.z, r2.y, r1.w  // ::rgbComponent<0>
          cmp r1.w, r7.y, r1.w, r2.x  // ::rgbComponent<0>
          cmp r6.z, r7.x, r1.w, r2.z  // ::rgbComponent<0>

#line 23
          add r1.w, -r8.y, c4.z
          cmp r1.w, r1.w, r8.y, r8.w  // GetHue::temp3<0>
          cmp r1.w, r8.y, r1.w, r8.z  // GetHue::temp3<0>

#line 29
          mad r2.z, r4.y, r1.w, r2.y  // ::rgbComponent<0>

#line 32
          add r4.yzw, r1.w, c10.xxyz
          add r1.w, -r1.w, c7.w
          mul r1.w, r1.w, r2.w
          mad r1.w, r1.w, c7.z, r2.y  // ::rgbComponent<0>
          cmp r1.w, r4.w, r2.y, r1.w  // ::rgbComponent<0>
          cmp r1.w, r4.z, r1.w, r2.x  // ::rgbComponent<0>
          cmp r6.w, r4.y, r1.w, r2.z  // ::rgbComponent<0>

#line 107
        endif

#line 531
        lrp r5.xyz, c1.x, r6.yzww, r0  // ::result<0,1,2>
      else
        if_eq r4.x, c15.y

#line 537
          rcp r1.w, c1.x
          mul_sat r2.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 541
          add r4.yzw, -r0.xxyz, c4.z
          add r2.xyz, -r2, c4.z
          mad r2.xyz, r4.yzww, -r2, c4.z  // ::result<0,1,2>

#line 544
          lrp r5.xyz, c1.x, r2, r0  // ::result<0,1,2>
        else
          if_eq r4.x, c15.z

#line 550
            rcp r1.w, c1.x
            mul_sat r2.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 555
            add r4.yzw, r2.xxyz, -c4.w
            add r6.xyz, r0, r0
            mul r7.xyz, r0, r0
            mad r8.xyz, r2, -c11.z, c11.w
            mul r7.xyz, r7, r8
            mad r7.xyz, r6, r2, r7
            rsq r1.w, r0.x
            rcp r1.w, r1.w
            mad r8.xyz, r2, c12.y, c12.z
            add r2.xyz, -r2, c4.z
            mul r2.xyz, r2, r6
            mad r1.w, r1.w, r8.x, r2.x
            cmp r6.x, r4.y, r1.w, r7.x  // ::result<0>
            rsq r1.w, r0.y
            rcp r1.w, r1.w
            mad r1.w, r1.w, r8.y, r2.y
            cmp r6.y, r4.z, r1.w, r7.y  // ::result<1>
            rsq r1.w, r0.z
            rcp r1.w, r1.w
            mad r1.w, r1.w, r8.z, r2.z
            cmp r6.z, r4.w, r1.w, r7.z  // ::result<2>

#line 558
            lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
          else
            if_eq r4.x, c15.w

#line 564
              rcp r1.w, c1.x
              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 569
              add r2.xyz, r1, -c4.w
              add r1.xyz, r1, r1
              add r4.xyz, -r0, c4.z
              rcp r1.w, r1.x
              mad r1.w, r4.x, -r1.w, c4.z
              max r2.w, r1.w, c4.x
              cmp r1.x, -r1.x, r1.x, r2.w
              add r6.xyz, r2, r2
              mad r7.xyz, r2, c12.y, c12.z
              mad r8.xyz, r2, -c11.z, c11.w
              rcp r1.w, r8.x
              mul r1.w, r0.x, r1.w
              min r2.w, r1.w, c4.z
              cmp r1.w, r7.x, r6.x, r2.w
              cmp r9.x, r2.x, r1.w, r1.x  // ::result<0>
              rcp r1.x, r1.y
              mad r1.x, r4.y, -r1.x, c4.z
              max r2.x, r1.x, c4.x
              cmp r1.x, -r1.y, r1.y, r2.x
              rcp r1.y, r8.y
              mul r1.y, r0.y, r1.y
              min r2.x, r1.y, c4.z
              cmp r1.y, r7.y, r6.y, r2.x
              cmp r9.y, r2.y, r1.y, r1.x  // ::result<1>
              rcp r1.x, r1.z
              mad r1.x, r4.z, -r1.x, c4.z
              max r2.x, r1.x, c4.x
              cmp r1.x, -r1.z, r1.z, r2.x
              rcp r1.y, r8.z
              mul r1.y, r0.z, r1.y
              min r2.x, r1.y, c4.z
              cmp r1.y, r7.z, r6.z, r2.x
              cmp r9.z, r2.z, r1.y, r1.x  // ::result<2>

#line 572
              lrp r5.xyz, c1.x, r9, r0  // ::result<0,1,2>
            endif
          endif
        endif
      endif

#line 586
      cmp r1, -c3.x, r5, r3  // ::main<0,1,2,3>
    else
      mov r1, c4.x
    endif
    cmp oC0, -r0.w, r0, r1  // ::main<0,1,2,3>

// approximately 1537 instruction slots used (1 texture, 1536 arithmetic)
