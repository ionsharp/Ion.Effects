//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float BlendMode;
//   sampler2D InputA;
//   sampler2D InputB;
//   bool Invert;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlendMode    c0       1
//   Invert       c3       1
//   InputA       s0       1
//   InputB       s1       1
//

    ps_3_0
    def c1, 0.00100000005, 0, 1, 0.5
    def c2, 2, 3, 4, 0.166666672
    def c4, 1, 0.333333343, 1.33333337, -0.666666627
    def c5, 0.166666672, 1, 6, 0.666666687
    def c6, 19, 20, 21, -22
    def c7, 1, -1, -0.333333343, 0.666666627
    def c8, -0.166666672, -0.5, -0.666666687, 5
    def c9, 7, 8, 2, 1
    def c10, 9, 2, -1, 10
    def c11, 11, 12, 13, 14
    def c12, 15, 16, 17, 18
    def c13, 23, 24, 25, 26
    dcl_texcoord v0.xy  // xy<0,1>
    dcl_2d s0
    dcl_2d s1

#line 587 "C:\Users\james\OneDrive\Code\GitHub\Core.WPF\Core.WPF\Effects\-Default\BlendEffect.fx"
    texld r0, v0, s0  // ::color1<0,1,2,3>

#line 590
    texld r1, v0, s1  // ::color2<0,1,2,3>

#line 623
    if_ne c3.x, -c3.x

#line 124
      cmp r2.xyz, -r0_abs, c1.x, r0  // Blend::blendColor<0,1,2>

#line 130
      mov r3.yz, c1
      if_eq c0.x, r3.y

#line 133
        rcp r2.w, r0.w
        mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 136
        add r3.xyw, r1.xyzz, r2.xyzz
        mul r3.xyw, r0.w, r3

#line 139
        add r2.w, -r0.w, c1.z
        mul r3.xyw, r3, c1.w
        mad oC0.xyz, r2.w, r1, r3.xyww  // ::result<0,1,2>
        mov oC0.w, r1.w  // ::result<3>
      else
        if_eq c0.x, r3.z

#line 145
          rcp r2.w, r0.w
          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 149
          add r3.xyz, -r1, c1.z
          rcp r4.x, r2.x
          rcp r4.y, r2.y
          rcp r4.z, r2.z
          mad_sat r3.xyz, r3, -r4, c1.z  // ::result<0,1,2>

#line 152
          lrp oC0.xyz, r0.w, r3, r1  // ::result<0,1,2>
          mov oC0.w, r1.w  // ::result<3>
        else
          mov r3.x, c0.x  // ::BlendMode<0>
          if_eq r3.x, c2.x

#line 158
            rcp r2.w, r0.w
            mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 164
            add r3.yzw, r2.xxyz, -c1.z
            add r4.xyz, -r2, c1.z
            rcp r2.w, r4.x
            mul r2.w, r1.x, r2.w
            min r4.x, r2.w, c1.z
            cmp r5.x, r3.y, r2.x, r4.x  // ::result<0>
            rcp r2.w, r4.y
            mul r2.w, r1.y, r2.w
            min r3.y, r2.w, c1.z
            cmp r5.y, r3.z, r2.y, r3.y  // ::result<1>
            rcp r2.w, r4.z
            mul r2.w, r1.z, r2.w
            min r3.y, r2.w, c1.z
            cmp r5.z, r3.w, r2.z, r3.y  // ::result<2>

#line 167
            lrp oC0.xyz, r0.w, r5, r1  // ::result<0,1,2>
            mov oC0.w, r1.w  // ::result<3>
          else
            if_eq r3.x, c2.y

#line 173
              rcp r2.w, r0.w
              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 79
              add r3.yzw, -r2.xxzy, r2.xzyx

#line 53
              cmp r4.xy, r3.w, r2.yxzw, r2
              min r5.x, r2.z, r4.x  // ::fmin<0>
              max r5.y, r4.y, r2.z  // ::fmax<0>
              add r2.w, -r5.x, r5.y  // ::delta<0>
              add r4.x, r5.x, r5.y  // ::maxplusmin<0>

#line 71
              add r4.y, r4.x, -c1.z
              rcp r4.z, r4.x
              add r4.x, -r4.x, c2.x
              rcp r4.x, r4.x
              mul r4.xz, r2.w, r4  // ::hsl<1,1>
              cmp r4.x, r4.y, r4.x, r4.z  // ::hsl<1>

#line 78
              add r5.xy, r2, -r5.y
              rcp r5.z, r2.w

#line 81
              mul r3.z, r3.z, r5.z  // ::hsl<0>
              mad r3.yw, r3, r5.z, c2.xxzz  // ::hsl<0,0>
              cmp r3.y, -r5_abs.y, r3.y, r3.w  // ::hsl<0>
              cmp r3.y, -r5_abs.x, r3.z, r3.y  // ::hsl<0>
              mul r3.z, r3.y, c2.w  // ::hsl<0>

#line 86
              mad r3.w, r3.y, c5.x, c5.y  // ::hsl<0>
              cmp r4.yzw, r3.y, r3.z, r3.w  // ::hsl<0,0,0>
              cmp r4, -r2_abs.w, c1.y, r4  // ::hsl<1,0,0,0>

#line 52
              add r2.w, -r1.y, r1.x
              cmp r3.yz, r2.w, r1.xyxw, r1.xxyw
              min r2.w, r1.z, r3.y  // ::fmin<0>
              max r5.x, r3.z, r1.z  // ::fmax<0>
              add r2.w, r2.w, r5.x  // ::maxplusmin<0>

#line 58
              mul r3.yzw, r2.w, c1.w  // ::hsl<2,2,2>

#line 96
              if_eq r4.x, c1.y

#line 99
              else

#line 103
                add r5.x, r2.w, -c1.z

#line 30
                add r6, r4, c4  // GetHue::temp3<0,0,0>

#line 104
                mul r4.y, r3.w, r6.x  // ::temp2<0>
                mad r4.z, r2.w, c1.w, r4.x
                mad r4.x, r4.x, -r3.w, r4.z  // ::temp2<0>
                cmp r4.x, r5.x, r4.x, r4.y  // ::temp2<0>
                add r2.w, r2.w, -r4.x  // ::temp1<0>

#line 29
                add r4.y, -r6.y, c1.z
                cmp r4.y, r4.y, r6.y, r6.w  // GetHue::temp3<0>
                cmp r4.y, r6.y, r4.y, r6.z  // GetHue::temp3<0>

#line 35
                add r4.z, -r2.w, r4.x
                mul r5.x, r4.z, c5.z
                mad r5.y, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                add r6.xyz, r4.y, c8
                add r4.y, -r4.y, c5.w
                mul r4.y, r4.y, r4.z
                mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                cmp r4.y, r6.z, r2.w, r4.y  // ::rgbComponent<0>
                cmp r4.y, r6.y, r4.y, r4.x  // ::rgbComponent<0>
                cmp r3.y, r6.x, r4.y, r5.y  // ::rgbComponent<0>

#line 29
                add r4.y, -r4.w, c1.z
                add r6, r4.w, c7  // GetHue::temp3<0,0,0,0>
                cmp r4.y, r4.y, r4.w, r6.y  // GetHue::temp3<0>
                cmp r4.y, r4.w, r4.y, r6.x  // GetHue::temp3<0>

#line 35
                mad r5.y, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                add r7.xyz, r4.y, c8
                add r4.y, -r4.y, c5.w
                mul r4.y, r4.y, r4.z
                mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                cmp r4.y, r7.z, r2.w, r4.y  // ::rgbComponent<0>
                cmp r4.y, r7.y, r4.y, r4.x  // ::rgbComponent<0>
                cmp r3.z, r7.x, r4.y, r5.y  // ::rgbComponent<0>

#line 29
                add r4.y, -r6.z, c1.z
                add r4.w, r4.w, -c4.z  // GetHue::temp3<0>
                cmp r4.y, r4.y, r6.z, r4.w  // GetHue::temp3<0>
                cmp r4.y, r6.z, r4.y, r6.w  // GetHue::temp3<0>

#line 35
                mad r4.w, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                add r5.xyz, r4.y, c8
                add r4.y, -r4.y, c5.w
                mul r4.y, r4.y, r4.z
                mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                cmp r2.w, r5.z, r2.w, r4.y  // ::rgbComponent<0>
                cmp r2.w, r5.y, r2.w, r4.x  // ::rgbComponent<0>
                cmp r3.w, r5.x, r2.w, r4.w  // ::rgbComponent<0>

#line 113
              endif

#line 180
              lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
              mov oC0.w, r1.w  // ::result<3>
            else
              if_eq r3.x, c2.z

#line 186
                rcp r2.w, r0.w
                mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 204
                min r3.yzw, r1.xxyz, r2.xxyz  // ::result<0,1,2>

#line 207
                lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                mov oC0.w, r1.w  // ::result<3>
              else
                if_eq r3.x, c8.w

#line 213
                  rcp r2.w, r0.w
                  mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 217
                  add r3.yzw, r1.xxyz, -r2.xxyz

#line 220
                  lrp oC0.xyz, r0.w, r3_abs.yzww, r1  // ::result<0,1,2>
                  mov oC0.w, r1.w  // ::result<3>
                else
                  if_eq r3.x, c5.z

#line 226
                    rcp r2.w, r0.w
                    mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 230
                    add r3.yzw, r1.xxyz, -c1.w
                    add r3.yzw, r3, r3
                    add r4.xyz, r2, -c1.w
                    mad r3.yzw, r3, -r4.xxyz, c1.w  // ::result<0,1,2>

#line 233
                    lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                    mov oC0.w, r1.w  // ::result<3>
                  else
                    if_eq r3.x, c9.x

#line 239
                      rcp r2.w, r0.w
                      mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 244
                      add r3.yzw, r1.xxyz, -c1.z
                      mul r4.xyz, r2, r2
                      add r5.xyz, -r1, c1.z
                      rcp r2.w, r5.x
                      mul r2.w, r2.w, r4.x
                      min r4.x, r2.w, c1.z
                      cmp r6.x, -r3_abs.y, r1.x, r4.x  // ::result<0>
                      rcp r2.w, r5.y
                      mul r2.w, r2.w, r4.y
                      min r3.y, r2.w, c1.z
                      cmp r6.y, -r3_abs.z, r1.y, r3.y  // ::result<1>
                      rcp r2.w, r5.z
                      mul r2.w, r2.w, r4.z
                      min r3.y, r2.w, c1.z
                      cmp r6.z, -r3_abs.w, r1.z, r3.y  // ::result<2>

#line 247
                      lrp oC0.xyz, r0.w, r6, r1  // ::result<0,1,2>
                      mov oC0.w, r1.w  // ::result<3>
                    else
                      if_eq r3.x, c9.y

#line 253
                        rcp r2.w, r0.w
                        mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 270
                        add r3.yzw, -r2.xxyz, c1.w
                        add r4.xyz, -r1, c1.z
                        add r5.xyz, r2, -c1.w
                        mad r5.xyz, r5, -c9.z, c9.w
                        mad r4.xyz, r4, -r5, c1.z  // ::result<0,1,2>

#line 262
                        dp2add r2.w, r1.x, r2.x, c1.y  // ::result<0>
                        cmp r5.x, r3.y, r2.w, r4.x  // ::result<0>

#line 268
                        dp2add r2.w, r1.y, r2.y, c1.y  // ::result<1>
                        cmp r5.y, r3.z, r2.w, r4.y  // ::result<1>

#line 274
                        dp2add r2.w, r1.z, r2.z, c1.y  // ::result<2>
                        cmp r5.z, r3.w, r2.w, r4.z  // ::result<2>

#line 277
                        lrp oC0.xyz, r0.w, r5, r1  // ::result<0,1,2>
                        mov oC0.w, r1.w  // ::result<3>
                      else
                        if_eq r3.x, c10.x

#line 283
                          rcp r2.w, r0.w
                          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 288
                          add r3.yzw, r2.xxyz, -c1.w
                          add r4.xyz, r2, r2
                          add r5.xyz, -r1, c1.z
                          rcp r2.w, r4.x
                          mad r2.w, r5.x, -r2.w, c1.z
                          max r4.w, r2.w, c1.y
                          cmp r2.w, -r4.x, r4.x, r4.w
                          add r6.xyz, r3.yzww, r3.yzww
                          mad r7.xyz, r3.yzww, c10.y, c10.z
                          mad r8.xyz, r3.yzww, -c9.z, c9.w
                          rcp r4.x, r8.x
                          mul r4.x, r1.x, r4.x
                          min r5.x, r4.x, c1.z
                          cmp r4.x, r7.x, r6.x, r5.x
                          cmp r2.w, r3.y, r4.x, r2.w
                          add r2.w, r2.w, -c1.w
                          cmp r9.x, r2.w, c1.z, c1.y  // ::result<0>
                          rcp r2.w, r4.y
                          mad r2.w, r5.y, -r2.w, c1.z
                          max r3.y, r2.w, c1.y
                          cmp r2.w, -r4.y, r4.y, r3.y
                          rcp r3.y, r8.y
                          mul r3.y, r1.y, r3.y
                          min r4.x, r3.y, c1.z
                          cmp r3.y, r7.y, r6.y, r4.x
                          cmp r2.w, r3.z, r3.y, r2.w
                          add r2.w, r2.w, -c1.w
                          cmp r9.y, r2.w, c1.z, c1.y  // ::result<1>
                          rcp r2.w, r4.z
                          mad r2.w, r5.z, -r2.w, c1.z
                          max r3.y, r2.w, c1.y
                          cmp r2.w, -r4.z, r4.z, r3.y
                          rcp r3.y, r8.z
                          mul r3.y, r1.z, r3.y
                          min r4.x, r3.y, c1.z
                          cmp r3.y, r7.z, r6.z, r4.x
                          cmp r2.w, r3.w, r3.y, r2.w
                          add r2.w, r2.w, -c1.w
                          cmp r9.z, r2.w, c1.z, c1.y  // ::result<2>

#line 291
                          lrp oC0.xyz, r0.w, r9, r1  // ::result<0,1,2>
                          mov oC0.w, r1.w  // ::result<3>
                        else
                          if_eq r3.x, c10.w

#line 297
                            rcp r2.w, r0.w
                            mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 52
                            add r2.w, -r1.y, r1.x
                            cmp r3.yz, r2.w, r1.xyxw, r1.xxyw
                            min r2.w, r1.z, r3.y  // ::fmin<0>
                            max r4.x, r3.z, r1.z  // ::fmax<0>
                            add r3.y, -r2.w, r4.x  // ::delta<0>
                            add r2.w, r2.w, r4.x  // ::maxplusmin<0>

#line 58
                            mul r4.xyz, r2.w, c1.w  // ::hsl<2,2,2>

#line 71
                            add r3.z, r2.w, -c1.z
                            rcp r3.w, r2.w
                            mul r3.w, r3.w, r3.y  // ::hsl<1>
                            add r4.w, -r2.w, c2.x
                            rcp r4.w, r4.w
                            mul r4.w, r3.y, r4.w  // ::hsl<1>
                            cmp r3.w, r3.z, r4.w, r3.w  // ::hsl<1>

#line 87
                            cmp r3.y, -r3_abs.y, c1.y, r3.w  // ::hsl<1>

#line 96
                            if_eq r3.y, c1.y

#line 99
                            else

#line 79
                              add r5.xyz, -r2.xzyw, r2.zyxw

#line 53
                              cmp r6.xy, r5.z, r2.yxzw, r2
                              min r3.w, r2.z, r6.x  // ::fmin<0>
                              max r4.w, r6.y, r2.z  // ::fmax<0>
                              add r3.w, -r3.w, r4.w  // ::delta<0>

#line 78
                              add r6.xy, r2, -r4.w
                              rcp r4.w, r3.w

#line 81
                              mul r5.y, r4.w, r5.y  // ::hsl<0>
                              mad r5.xz, r5, r4.w, c2  // ::hsl<0,0>
                              cmp r4.w, -r6_abs.y, r5.x, r5.z  // ::hsl<0>
                              cmp r4.w, -r6_abs.x, r5.y, r4.w  // ::hsl<0>
                              mul r5.x, r4.w, c2.w  // ::hsl<0>

#line 86
                              mad r5.y, r4.w, c5.x, c5.y  // ::hsl<0>
                              cmp r4.w, r4.w, r5.x, r5.y  // ::hsl<0>
                              cmp r3.w, -r3_abs.w, c1.y, r4.w  // ::hsl<0>

#line 104
                              add r4.w, r3.y, c1.z
                              mul r4.w, r4.w, r4.z  // ::temp2<0>
                              mad r5.x, r2.w, c1.w, r3.y
                              mad r3.y, r3.y, -r4.z, r5.x  // ::temp2<0>
                              cmp r3.y, r3.z, r3.y, r4.w  // ::temp2<0>
                              add r2.w, r2.w, -r3.y  // ::temp1<0>

#line 28
                              add r5, r3.w, c4.yzwx  // GetHue::temp3<0,0,0,0>
                              add r3.z, -r5.x, c1.z
                              cmp r3.z, r3.z, r5.x, r5.z  // GetHue::temp3<0>
                              cmp r3.z, r5.x, r3.z, r5.y  // GetHue::temp3<0>

#line 35
                              add r4.w, -r2.w, r3.y
                              mul r5.x, r4.w, c5.z
                              mad r5.y, r5.x, r3.z, r2.w  // ::rgbComponent<0>

#line 38
                              add r6.xyz, r3.z, c8
                              add r3.z, -r3.z, c5.w
                              mul r3.z, r3.z, r4.w
                              mad r3.z, r3.z, c5.z, r2.w  // ::rgbComponent<0>
                              cmp r3.z, r6.z, r2.w, r3.z  // ::rgbComponent<0>
                              cmp r3.z, r6.y, r3.z, r3.y  // ::rgbComponent<0>
                              cmp r4.x, r6.x, r3.z, r5.y  // ::rgbComponent<0>

#line 29
                              add r3.z, -r3.w, c1.z
                              add r6, r3.w, -c4.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r3.z, r3.z, r3.w, r6.x  // GetHue::temp3<0>
                              cmp r3.z, r3.w, r3.z, r5.w  // GetHue::temp3<0>

#line 35
                              mad r3.w, r5.x, r3.z, r2.w  // ::rgbComponent<0>

#line 38
                              add r5.yzw, r3.z, c8.xxyz
                              add r3.z, -r3.z, c5.w
                              mul r3.z, r3.z, r4.w
                              mad r3.z, r3.z, c5.z, r2.w  // ::rgbComponent<0>
                              cmp r3.z, r5.w, r2.w, r3.z  // ::rgbComponent<0>
                              cmp r3.z, r5.z, r3.z, r3.y  // ::rgbComponent<0>
                              cmp r4.y, r5.y, r3.z, r3.w  // ::rgbComponent<0>

#line 29
                              add r3.z, -r6.y, c1.z
                              cmp r3.z, r3.z, r6.y, r6.w  // GetHue::temp3<0>
                              cmp r3.z, r6.y, r3.z, r6.z  // GetHue::temp3<0>

#line 35
                              mad r3.w, r5.x, r3.z, r2.w  // ::rgbComponent<0>

#line 38
                              add r5.xyz, r3.z, c8
                              add r3.z, -r3.z, c5.w
                              mul r3.z, r3.z, r4.w
                              mad r3.z, r3.z, c5.z, r2.w  // ::rgbComponent<0>
                              cmp r2.w, r5.z, r2.w, r3.z  // ::rgbComponent<0>
                              cmp r2.w, r5.y, r2.w, r3.y  // ::rgbComponent<0>
                              cmp r4.z, r5.x, r2.w, r3.w  // ::rgbComponent<0>

#line 113
                            endif

#line 304
                            lrp oC0.xyz, r0.w, r4, r1  // ::result<0,1,2>
                            mov oC0.w, r1.w  // ::result<3>
                          else
                            if_eq r3.x, c11.x

#line 310
                              rcp r2.w, r0.w
                              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 329
                              max r3.yzw, r1.xxyz, r2.xxyz  // ::result<0,1,2>

#line 332
                              lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                              mov oC0.w, r1.w  // ::result<3>
                            else
                              if_eq r3.x, c11.y

#line 338
                                rcp r2.w, r0.w
                                mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 342
                                add r3.yzw, r1.xxyz, r2.xxyz
                                add_sat r3.yzw, r3, -c1.z  // ::result<0,1,2>

#line 345
                                lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                mov oC0.w, r1.w  // ::result<3>
                              else
                                if_eq r3.x, c11.z

#line 351
                                  rcp r2.w, r0.w
                                  mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 355
                                  add r3.yzw, r1.xxyz, r2.xxyz  // ::result<0,1,2>

#line 358
                                  lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                  mov oC0.w, r1.w  // ::result<3>
                                else
                                  if_eq r3.x, c11.w

#line 364
                                    rcp r2.w, r0.w
                                    mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 381
                                    add r3.yzw, -r2.xxyz, c1.w
                                    add r4.xyz, r2, -c1.w
                                    mad r4.xyz, r4, c2.x, r1  // ::result<0,1,2>
                                    mad r5.xyz, r2, c2.x, r1
                                    add r5.xyz, r5, -c1.z  // ::result<0,1,2>
                                    cmp r3.yzw, r3, r5.xxyz, r4.xxyz  // ::result<0,1,2>

#line 388
                                    lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                    mov oC0.w, r1.w  // ::result<3>
                                  else
                                    if_eq r3.x, c12.x

#line 394
                                      rcp r2.w, r0.w
                                      mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 79
                                      add r3.yzw, -r1.xxzy, r1.xzyx

#line 53
                                      cmp r4.xy, r3.w, r1.yxzw, r1
                                      min r2.w, r1.z, r4.x  // ::fmin<0>
                                      max r5.x, r4.y, r1.z  // ::fmax<0>
                                      add r4.x, -r2.w, r5.x  // ::delta<0>
                                      add r2.w, r2.w, r5.x  // ::maxplusmin<0>

#line 71
                                      add r4.y, r2.w, -c1.z
                                      rcp r4.z, r2.w
                                      mul r4.z, r4.z, r4.x  // ::hsl<1>
                                      add r2.w, -r2.w, c2.x
                                      rcp r2.w, r2.w
                                      mul r2.w, r2.w, r4.x  // ::hsl<1>
                                      cmp r6.x, r4.y, r2.w, r4.z  // ::hsl<1>

#line 78
                                      add r4.yz, r1.xxyw, -r5.x
                                      rcp r2.w, r4.x

#line 81
                                      mul r3.z, r2.w, r3.z  // ::hsl<0>
                                      mad r3.yw, r3, r2.w, c2.xxzz  // ::hsl<0,0>
                                      cmp r2.w, -r4_abs.z, r3.y, r3.w  // ::hsl<0>
                                      cmp r2.w, -r4_abs.y, r3.z, r2.w  // ::hsl<0>
                                      mul r3.y, r2.w, c2.w  // ::hsl<0>

#line 86
                                      mad r3.z, r2.w, c5.x, c5.y  // ::hsl<0>
                                      cmp r6.yzw, r2.w, r3.y, r3.z  // ::hsl<0,0,0>
                                      cmp r4, -r4_abs.x, c1.y, r6  // ::hsl<1,0,0,0>

#line 52
                                      add r2.w, -r2.y, r2.x
                                      cmp r3.yz, r2.w, r2.xyxw, r2.xxyw
                                      min r5.x, r2.z, r3.y  // ::fmin<0>
                                      max r5.y, r3.z, r2.z  // ::fmax<0>
                                      add r2.w, r5.x, r5.y  // ::maxplusmin<0>

#line 58
                                      mul r3.yzw, r2.w, c1.w  // ::hsl<2,2,2>

#line 96
                                      if_eq r4.x, c1.y

#line 99
                                      else

#line 103
                                        add r5.x, r2.w, -c1.z

#line 30
                                        add r6, r4, c4  // GetHue::temp3<0,0,0>

#line 104
                                        mul r4.y, r3.w, r6.x  // ::temp2<0>
                                        mad r4.z, r2.w, c1.w, r4.x
                                        mad r4.x, r4.x, -r3.w, r4.z  // ::temp2<0>
                                        cmp r4.x, r5.x, r4.x, r4.y  // ::temp2<0>
                                        add r2.w, r2.w, -r4.x  // ::temp1<0>

#line 29
                                        add r4.y, -r6.y, c1.z
                                        cmp r4.y, r4.y, r6.y, r6.w  // GetHue::temp3<0>
                                        cmp r4.y, r6.y, r4.y, r6.z  // GetHue::temp3<0>

#line 35
                                        add r4.z, -r2.w, r4.x
                                        mul r5.x, r4.z, c5.z
                                        mad r5.y, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                                        add r6.xyz, r4.y, c8
                                        add r4.y, -r4.y, c5.w
                                        mul r4.y, r4.y, r4.z
                                        mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                                        cmp r4.y, r6.z, r2.w, r4.y  // ::rgbComponent<0>
                                        cmp r4.y, r6.y, r4.y, r4.x  // ::rgbComponent<0>
                                        cmp r3.y, r6.x, r4.y, r5.y  // ::rgbComponent<0>

#line 29
                                        add r4.y, -r4.w, c1.z
                                        add r6, r4.w, c7  // GetHue::temp3<0,0,0,0>
                                        cmp r4.y, r4.y, r4.w, r6.y  // GetHue::temp3<0>
                                        cmp r4.y, r4.w, r4.y, r6.x  // GetHue::temp3<0>

#line 35
                                        mad r5.y, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                                        add r7.xyz, r4.y, c8
                                        add r4.y, -r4.y, c5.w
                                        mul r4.y, r4.y, r4.z
                                        mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                                        cmp r4.y, r7.z, r2.w, r4.y  // ::rgbComponent<0>
                                        cmp r4.y, r7.y, r4.y, r4.x  // ::rgbComponent<0>
                                        cmp r3.z, r7.x, r4.y, r5.y  // ::rgbComponent<0>

#line 29
                                        add r4.y, -r6.z, c1.z
                                        add r4.w, r4.w, -c4.z  // GetHue::temp3<0>
                                        cmp r4.y, r4.y, r6.z, r4.w  // GetHue::temp3<0>
                                        cmp r4.y, r6.z, r4.y, r6.w  // GetHue::temp3<0>

#line 35
                                        mad r4.w, r5.x, r4.y, r2.w  // ::rgbComponent<0>

#line 38
                                        add r5.xyz, r4.y, c8
                                        add r4.y, -r4.y, c5.w
                                        mul r4.y, r4.y, r4.z
                                        mad r4.y, r4.y, c5.z, r2.w  // ::rgbComponent<0>
                                        cmp r2.w, r5.z, r2.w, r4.y  // ::rgbComponent<0>
                                        cmp r2.w, r5.y, r2.w, r4.x  // ::rgbComponent<0>
                                        cmp r3.w, r5.x, r2.w, r4.w  // ::rgbComponent<0>

#line 113
                                      endif

#line 401
                                      lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                      mov oC0.w, r1.w  // ::result<3>
                                    else
                                      if_eq r3.x, c12.y

#line 407
                                        rcp r2.w, r0.w
                                        mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 411
                                        mul r3.yzw, r1.xxyz, r2.xxyz  // ::result<0,1,2>

#line 414
                                        lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                        mov oC0.w, r1.w  // ::result<3>
                                      else
                                        if_eq r3.x, c12.z

#line 420
                                          rcp r2.w, r0.w
                                          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 423
                                          add r3.yzw, -r1.xxyz, c1.z
                                          add_sat r3.yzw, -r2.xxyz, r3
                                          add r3.yzw, -r3, c1.z  // ::result<0,1,2>

#line 426
                                          lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                          mov oC0.w, r1.w  // ::result<3>
                                        else
                                          if_eq r3.x, c12.w
                                            add r2.w, -r0.w, c1.z
                                            add r3.y, -r1.w, c1.z
                                            mad r3.y, r2.w, -r3.y, c1.z  // ::result<3>

#line 434
                                            mul r4.xyz, r0.w, r2
                                            rcp r3.z, r3.y
                                            mul r5.xyz, r1.w, r1
                                            mul r5.xyz, r2.w, r5
                                            mul r5.xyz, r3.z, r5
                                            mad oC0.xyz, r4, r3.z, r5  // ::result<0,1,2>
                                            mov oC0.w, r3.y  // ::result<3>
                                          else
                                            if_eq r3.x, c6.x

#line 440
                                              rcp r2.w, r0.w
                                              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 458
                                              add r3.yzw, -r1.xxyz, c1.w
                                              add r4.xyz, r1, -c1.w
                                              mad r4.xyz, r4, -c9.z, c9.w
                                              add r5.xyz, -r2, c1.z
                                              mad r4.xyz, r4, -r5, c1.z  // ::result<0,1,2>

#line 450
                                              dp2add r2.w, r2.x, r1.x, c1.y  // ::result<0>
                                              cmp r5.x, r3.y, r2.w, r4.x  // ::result<0>

#line 456
                                              dp2add r2.w, r2.y, r1.y, c1.y  // ::result<1>
                                              cmp r5.y, r3.z, r2.w, r4.y  // ::result<1>

#line 462
                                              dp2add r2.w, r2.z, r1.z, c1.y  // ::result<2>
                                              cmp r5.z, r3.w, r2.w, r4.z  // ::result<2>

#line 465
                                              lrp oC0.xyz, r0.w, r5, r1  // ::result<0,1,2>
                                            else
                                              if_eq r3.x, c6.y

#line 471
                                                rcp r2.w, r0.w
                                                mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 474
                                                min r3.yzw, r2.xxyz, r1.xxyz
                                                max r4.xyz, r1, r2
                                                add r3.yzw, r3, -r4.xxyz
                                                add r3.yzw, r3, c1.z  // ::result<0,1,2>

#line 477
                                                lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                              else
                                                if_eq r3.x, c6.z

#line 483
                                                  rcp r2.w, r0.w
                                                  mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 500
                                                  add r3.yzw, -r2.xxyz, c1.w
                                                  add r4.xyz, r2, -c1.w
                                                  add r4.xyz, r4, r4
                                                  max r5.xyz, r1, r4  // ::result<0,1,2>
                                                  add r4.xyz, r2, r2
                                                  min r6.xyz, r4, r1  // ::result<0,1,2>
                                                  cmp r3.yzw, r3, r6.xxyz, r5.xxyz  // ::result<0,1,2>

#line 507
                                                  lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
                                                else
                                                  add r2.w, r3.x, c6.w

#line 513
                                                  rcp r3.x, r0.w
                                                  mul_sat r3.xyz, r2, r3.x  // Blend::blendColor<0,1,2>

#line 518
                                                  add r4.xyz, r3, -c1.z
                                                  mul r5.xyz, r1, r1
                                                  add r6.xyz, -r3, c1.z
                                                  rcp r3.w, r6.x
                                                  mul r3.w, r3.w, r5.x
                                                  min r4.w, r3.w, c1.z
                                                  cmp r7.x, r4.x, r3.x, r4.w  // ::result<0>
                                                  rcp r3.w, r6.y
                                                  mul r3.w, r3.w, r5.y
                                                  min r4.x, r3.w, c1.z
                                                  cmp r7.y, r4.y, r3.y, r4.x  // ::result<1>
                                                  rcp r3.w, r6.z
                                                  mul r3.w, r3.w, r5.z
                                                  min r4.x, r3.w, c1.z
                                                  cmp r7.z, r4.z, r3.z, r4.x  // ::result<2>

#line 521
                                                  lrp oC0.xyz, r0.w, r7, r1  // ::result<0,1,2>
                                                  cmp r2.xyz, -r2_abs.w, r3, r2  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                            mov oC0.w, r1.w  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 527
      mov r3.x, c0.x  // ::BlendMode<0>
      if_eq r3.x, c13.x

#line 530
        rcp r2.w, r0.w
        mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 52
        add r2.w, -r1.y, r1.x
        cmp r4.xy, r2.w, r1.yxzw, r1
        min r5.x, r1.z, r4.x  // ::fmin<0>
        max r5.y, r4.y, r1.z  // ::fmax<0>
        add r4.x, r5.x, r5.y  // ::maxplusmin<0>

#line 58
        mul r4.yzw, r4.x, c1.w  // ::hsl<2,2,2>

#line 52
        add r5.z, -r3.z, r3.y
        cmp r3.yz, r5.z, r3.xzyw, r3
        min r5.z, r3.w, r3.y  // ::fmin<0>
        max r5.w, r3.z, r3.w  // ::fmax<0>
        add r3.y, -r5.z, r5.w  // ::delta<0>
        add r3.z, r5.z, r5.w  // ::maxplusmin<0>

#line 71
        add r3.w, r3.z, -c1.z
        rcp r5.z, r3.z
        mul r5.z, r3.y, r5.z  // ::hsl<1>
        add r3.z, -r3.z, c2.x
        rcp r3.z, r3.z
        mul r3.z, r3.z, r3.y  // ::hsl<1>
        cmp r3.z, r3.w, r3.z, r5.z  // ::hsl<1>

#line 87
        cmp r3.y, -r3_abs.y, c1.y, r3.z  // ::hsl<1>

#line 96
        if_eq r3.y, c1.y

#line 99
        else

#line 54
          add r3.z, -r5.x, r5.y  // ::delta<0>

#line 78
          add r5.xy, r1, -r5.y
          add r3.w, -r1.z, r1.y
          rcp r5.z, r3.z
          mul r3.w, r3.w, r5.z  // ::hsl<0>
          add r5.w, -r1.x, r1.z
          mad r5.w, r5.w, r5.z, c2.x  // ::hsl<0>
          mad r2.w, r2.w, r5.z, c2.z  // ::hsl<0>
          cmp r2.w, -r5_abs.y, r5.w, r2.w  // ::hsl<0>
          cmp r2.w, -r5_abs.x, r3.w, r2.w  // ::hsl<0>
          mul r3.w, r2.w, c2.w  // ::hsl<0>

#line 86
          mad r5.x, r2.w, c5.x, c5.y  // ::hsl<0>
          cmp r2.w, r2.w, r3.w, r5.x  // ::hsl<0>
          cmp r2.w, -r3_abs.z, c1.y, r2.w  // ::hsl<0>

#line 103
          add r3.z, r4.x, -c1.z
          add r3.w, r3.y, c1.z
          mul r3.w, r3.w, r4.w  // ::temp2<0>
          mad r5.x, r4.x, c1.w, r3.y
          mad r3.y, r3.y, -r4.w, r5.x  // ::temp2<0>
          cmp r3.y, r3.z, r3.y, r3.w  // ::temp2<0>
          add r3.z, -r3.y, r4.x  // ::temp1<0>

#line 28
          add r5, r2.w, c4.yzwx  // GetHue::temp3<0,0,0,0>
          add r3.w, -r5.x, c1.z
          cmp r3.w, r3.w, r5.x, r5.z  // GetHue::temp3<0>
          cmp r3.w, r5.x, r3.w, r5.y  // GetHue::temp3<0>

#line 35
          add r4.x, -r3.z, r3.y
          mul r5.x, r4.x, c5.z
          mad r5.y, r5.x, r3.w, r3.z  // ::rgbComponent<0>

#line 38
          add r6.xyz, r3.w, c8
          add r3.w, -r3.w, c5.w
          mul r3.w, r3.w, r4.x
          mad r3.w, r3.w, c5.z, r3.z  // ::rgbComponent<0>
          cmp r3.w, r6.z, r3.z, r3.w  // ::rgbComponent<0>
          cmp r3.w, r6.y, r3.w, r3.y  // ::rgbComponent<0>
          cmp r4.y, r6.x, r3.w, r5.y  // ::rgbComponent<0>

#line 29
          add r3.w, -r2.w, c1.z
          add r6, r2.w, -c4.xywz  // GetHue::temp3<0,0,0,0>
          cmp r3.w, r3.w, r2.w, r6.x  // GetHue::temp3<0>
          cmp r2.w, r2.w, r3.w, r5.w  // GetHue::temp3<0>

#line 35
          mad r3.w, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 38
          add r5.yzw, r2.w, c8.xxyz
          add r2.w, -r2.w, c5.w
          mul r2.w, r2.w, r4.x
          mad r2.w, r2.w, c5.z, r3.z  // ::rgbComponent<0>
          cmp r2.w, r5.w, r3.z, r2.w  // ::rgbComponent<0>
          cmp r2.w, r5.z, r2.w, r3.y  // ::rgbComponent<0>
          cmp r4.z, r5.y, r2.w, r3.w  // ::rgbComponent<0>

#line 29
          add r2.w, -r6.y, c1.z
          cmp r2.w, r2.w, r6.y, r6.w  // GetHue::temp3<0>
          cmp r2.w, r6.y, r2.w, r6.z  // GetHue::temp3<0>

#line 35
          mad r3.w, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 38
          add r5.xyz, r2.w, c8
          add r2.w, -r2.w, c5.w
          mul r2.w, r2.w, r4.x
          mad r2.w, r2.w, c5.z, r3.z  // ::rgbComponent<0>
          cmp r2.w, r5.z, r3.z, r2.w  // ::rgbComponent<0>
          cmp r2.w, r5.y, r2.w, r3.y  // ::rgbComponent<0>
          cmp r4.w, r5.x, r2.w, r3.w  // ::rgbComponent<0>

#line 113
        endif

#line 537
        lrp oC0.xyz, r0.w, r4.yzww, r1  // ::result<0,1,2>
      else
        if_eq r3.x, c13.y

#line 543
          rcp r2.w, r0.w
          mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 547
          add r4.xyz, -r1, c1.z
          add r3.yzw, -r3, c1.z
          mad r3.yzw, r4.xxyz, -r3, c1.z  // ::result<0,1,2>

#line 550
          lrp oC0.xyz, r0.w, r3.yzww, r1  // ::result<0,1,2>
        else
          if_eq r3.x, c13.z

#line 556
            rcp r2.w, r0.w
            mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 561
            add r4.xyz, r3.yzww, -c1.w
            add r5.xyz, r1, r1
            mul r6.xyz, r1, r1
            mad r7.xyz, r3.yzww, -c9.z, c9.w
            mul r6.xyz, r6, r7
            mad r6.xyz, r5, r3.yzww, r6
            rsq r2.w, r1.x
            rcp r2.w, r2.w
            mad r7.xyz, r3.yzww, c10.y, c10.z
            add r3.yzw, -r3, c1.z
            mul r3.yzw, r3, r5.xxyz
            mad r2.w, r2.w, r7.x, r3.y
            cmp r5.x, r4.x, r2.w, r6.x  // ::result<0>
            rsq r2.w, r1.y
            rcp r2.w, r2.w
            mad r2.w, r2.w, r7.y, r3.z
            cmp r5.y, r4.y, r2.w, r6.y  // ::result<1>
            rsq r2.w, r1.z
            rcp r2.w, r2.w
            mad r2.w, r2.w, r7.z, r3.w
            cmp r5.z, r4.z, r2.w, r6.z  // ::result<2>

#line 564
            lrp oC0.xyz, r0.w, r5, r1  // ::result<0,1,2>
          else
            if_eq r3.x, c13.w

#line 570
              rcp r2.w, r0.w
              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 575
              add r3.xyz, r2, -c1.w
              add r2.xyz, r2, r2
              add r4.xyz, -r1, c1.z
              rcp r2.w, r2.x
              mad r2.w, r4.x, -r2.w, c1.z
              max r3.w, r2.w, c1.y
              cmp r2.x, -r2.x, r2.x, r3.w
              add r5.xyz, r3, r3
              mad r6.xyz, r3, c10.y, c10.z
              mad r7.xyz, r3, -c9.z, c9.w
              rcp r2.w, r7.x
              mul r2.w, r1.x, r2.w
              min r3.w, r2.w, c1.z
              cmp r2.w, r6.x, r5.x, r3.w
              cmp r8.x, r3.x, r2.w, r2.x  // ::result<0>
              rcp r2.x, r2.y
              mad r2.x, r4.y, -r2.x, c1.z
              max r3.x, r2.x, c1.y
              cmp r2.x, -r2.y, r2.y, r3.x
              rcp r2.y, r7.y
              mul r2.y, r1.y, r2.y
              min r3.x, r2.y, c1.z
              cmp r2.y, r6.y, r5.y, r3.x
              cmp r8.y, r3.y, r2.y, r2.x  // ::result<1>
              rcp r2.x, r2.z
              mad r2.x, r4.z, -r2.x, c1.z
              max r3.x, r2.x, c1.y
              cmp r2.x, -r2.z, r2.z, r3.x
              rcp r2.y, r7.z
              mul r2.y, r1.z, r2.y
              min r3.x, r2.y, c1.z
              cmp r2.y, r6.z, r5.z, r3.x
              cmp r8.z, r3.z, r2.y, r2.x  // ::result<2>

#line 578
              lrp oC0.xyz, r0.w, r8, r1  // ::result<0,1,2>
            endif
          endif
        endif
      endif

#line 626
    else

#line 124
      cmp r1.xyz, -r1_abs, c1.x, r1  // Blend::blendColor<0,1,2>

#line 130
      mov r2.yz, c1
      if_eq c0.x, r2.y

#line 133
        rcp r2.x, r1.w
        mul_sat r1.xyz, r1, r2.x  // Blend::blendColor<0,1,2>

#line 136
        add r2.xyw, r0.xyzz, r1.xyzz
        mul r2.xyw, r1.w, r2

#line 139
        add r3.x, -r1.w, c1.z
        mul r2.xyw, r2, c1.w
        mad oC0.xyz, r3.x, r0, r2.xyww  // ::result<0,1,2>
        mov oC0.w, r0.w  // ::result<3>
      else
        if_eq c0.x, r2.z

#line 145
          rcp r2.x, r1.w
          mul_sat r1.xyz, r1, r2.x  // Blend::blendColor<0,1,2>

#line 149
          add r2.xyz, -r0, c1.z
          rcp r3.x, r1.x
          rcp r3.y, r1.y
          rcp r3.z, r1.z
          mad_sat r2.xyz, r2, -r3, c1.z  // ::result<0,1,2>

#line 152
          lrp oC0.xyz, r1.w, r2, r0  // ::result<0,1,2>
          mov oC0.w, r0.w  // ::result<3>
        else
          mov r2.x, c0.x  // ::BlendMode<0>
          if_eq r2.x, c2.x

#line 158
            rcp r2.y, r1.w
            mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 164
            add r2.yzw, r1.xxyz, -c1.z
            add r3.xyz, -r1, c1.z
            rcp r3.x, r3.x
            mul r3.x, r0.x, r3.x
            min r4.x, r3.x, c1.z
            cmp r4.x, r2.y, r1.x, r4.x  // ::result<0>
            rcp r2.y, r3.y
            mul r2.y, r0.y, r2.y
            min r3.x, r2.y, c1.z
            cmp r4.y, r2.z, r1.y, r3.x  // ::result<1>
            rcp r2.y, r3.z
            mul r2.y, r0.z, r2.y
            min r3.x, r2.y, c1.z
            cmp r4.z, r2.w, r1.z, r3.x  // ::result<2>

#line 167
            lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
            mov oC0.w, r0.w  // ::result<3>
          else
            if_eq r2.x, c2.y

#line 173
              rcp r2.y, r1.w
              mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 79
              add r2.yzw, -r1.xxzy, r1.xzyx

#line 53
              cmp r3.xy, r2.w, r1.yxzw, r1
              min r4.x, r1.z, r3.x  // ::fmin<0>
              max r4.y, r3.y, r1.z  // ::fmax<0>
              add r3.x, -r4.x, r4.y  // ::delta<0>
              add r3.y, r4.x, r4.y  // ::maxplusmin<0>

#line 71
              add r3.z, r3.y, -c1.z
              rcp r3.w, r3.y
              add r3.y, -r3.y, c2.x
              rcp r3.y, r3.y
              mul r3.yw, r3, r3.x  // ::hsl<1,1>
              cmp r5.x, r3.z, r3.y, r3.w  // ::hsl<1>

#line 78
              add r3.yz, r1.xxyw, -r4.y
              rcp r3.w, r3.x

#line 81
              mul r2.z, r2.z, r3.w  // ::hsl<0>
              mad r2.yw, r2, r3.w, c2.xxzz  // ::hsl<0,0>
              cmp r2.y, -r3_abs.z, r2.y, r2.w  // ::hsl<0>
              cmp r2.y, -r3_abs.y, r2.z, r2.y  // ::hsl<0>
              mul r2.z, r2.y, c2.w  // ::hsl<0>

#line 86
              mad r2.w, r2.y, c5.x, c5.y  // ::hsl<0>
              cmp r5.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
              cmp r3, -r3_abs.x, c1.y, r5  // ::hsl<1,0,0,0>

#line 52
              add r2.y, -r0.y, r0.x
              cmp r2.yz, r2.y, r0.xyxw, r0.xxyw
              min r4.x, r0.z, r2.y  // ::fmin<0>
              max r4.y, r2.z, r0.z  // ::fmax<0>
              add r2.y, r4.x, r4.y  // ::maxplusmin<0>

#line 58
              mul r4.xyz, r2.y, c1.w  // ::hsl<2,2,2>

#line 96
              if_eq r3.x, c1.y

#line 99
              else

#line 103
                add r2.z, r2.y, -c1.z

#line 30
                add r5, r3, c4  // GetHue::temp3<0,0,0>

#line 104
                mul r2.w, r4.z, r5.x  // ::temp2<0>
                mad r3.y, r2.y, c1.w, r3.x
                mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
                cmp r2.z, r2.z, r3.x, r2.w  // ::temp2<0>
                add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 29
                add r2.w, -r5.y, c1.z
                cmp r2.w, r2.w, r5.y, r5.w  // GetHue::temp3<0>
                cmp r2.w, r5.y, r2.w, r5.z  // GetHue::temp3<0>

#line 35
                add r3.x, -r2.y, r2.z
                mul r3.y, r3.x, c5.z
                mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                add r5.xyz, r2.w, c8
                add r2.w, -r2.w, c5.w
                mul r2.w, r2.w, r3.x
                mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                cmp r2.w, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                cmp r2.w, r5.y, r2.w, r2.z  // ::rgbComponent<0>
                cmp r4.x, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 29
                add r2.w, -r3.w, c1.z
                add r5, r3.w, c7  // GetHue::temp3<0,0,0,0>
                cmp r2.w, r2.w, r3.w, r5.y  // GetHue::temp3<0>
                cmp r2.w, r3.w, r2.w, r5.x  // GetHue::temp3<0>

#line 35
                mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                add r6.xyz, r2.w, c8
                add r2.w, -r2.w, c5.w
                mul r2.w, r2.w, r3.x
                mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                cmp r2.w, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
                cmp r4.y, r6.x, r2.w, r3.z  // ::rgbComponent<0>

#line 29
                add r2.w, -r5.z, c1.z
                add r3.z, r3.w, -c4.z  // GetHue::temp3<0>
                cmp r2.w, r2.w, r5.z, r3.z  // GetHue::temp3<0>
                cmp r2.w, r5.z, r2.w, r5.w  // GetHue::temp3<0>

#line 35
                mad r3.y, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                add r5.xyz, r2.w, c8
                add r2.w, -r2.w, c5.w
                mul r2.w, r2.w, r3.x
                mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                cmp r2.y, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                cmp r2.y, r5.y, r2.y, r2.z  // ::rgbComponent<0>
                cmp r4.z, r5.x, r2.y, r3.y  // ::rgbComponent<0>

#line 113
              endif

#line 180
              lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
              mov oC0.w, r0.w  // ::result<3>
            else
              if_eq r2.x, c2.z

#line 186
                rcp r2.y, r1.w
                mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 204
                min r2.yzw, r0.xxyz, r1.xxyz  // ::result<0,1,2>

#line 207
                lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                mov oC0.w, r0.w  // ::result<3>
              else
                if_eq r2.x, c8.w

#line 213
                  rcp r2.y, r1.w
                  mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 217
                  add r2.yzw, r0.xxyz, -r1.xxyz

#line 220
                  lrp oC0.xyz, r1.w, r2_abs.yzww, r0  // ::result<0,1,2>
                  mov oC0.w, r0.w  // ::result<3>
                else
                  if_eq r2.x, c5.z

#line 226
                    rcp r2.y, r1.w
                    mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 230
                    add r2.yzw, r0.xxyz, -c1.w
                    add r2.yzw, r2, r2
                    add r3.xyz, r1, -c1.w
                    mad r2.yzw, r2, -r3.xxyz, c1.w  // ::result<0,1,2>

#line 233
                    lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                    mov oC0.w, r0.w  // ::result<3>
                  else
                    if_eq r2.x, c9.x

#line 239
                      rcp r2.y, r1.w
                      mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 244
                      add r2.yzw, r0.xxyz, -c1.z
                      mul r3.xyz, r1, r1
                      add r4.xyz, -r0, c1.z
                      rcp r3.w, r4.x
                      mul r3.x, r3.w, r3.x
                      min r4.x, r3.x, c1.z
                      cmp r5.x, -r2_abs.y, r0.x, r4.x  // ::result<0>
                      rcp r2.y, r4.y
                      mul r2.y, r2.y, r3.y
                      min r3.x, r2.y, c1.z
                      cmp r5.y, -r2_abs.z, r0.y, r3.x  // ::result<1>
                      rcp r2.y, r4.z
                      mul r2.y, r2.y, r3.z
                      min r3.x, r2.y, c1.z
                      cmp r5.z, -r2_abs.w, r0.z, r3.x  // ::result<2>

#line 247
                      lrp oC0.xyz, r1.w, r5, r0  // ::result<0,1,2>
                      mov oC0.w, r0.w  // ::result<3>
                    else
                      if_eq r2.x, c9.y

#line 253
                        rcp r2.y, r1.w
                        mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 270
                        add r2.yzw, -r1.xxyz, c1.w
                        add r3.xyz, -r0, c1.z
                        add r4.xyz, r1, -c1.w
                        mad r4.xyz, r4, -c9.z, c9.w
                        mad r3.xyz, r3, -r4, c1.z  // ::result<0,1,2>

#line 262
                        dp2add r3.w, r0.x, r1.x, c1.y  // ::result<0>
                        cmp r4.x, r2.y, r3.w, r3.x  // ::result<0>

#line 268
                        dp2add r2.y, r0.y, r1.y, c1.y  // ::result<1>
                        cmp r4.y, r2.z, r2.y, r3.y  // ::result<1>

#line 274
                        dp2add r2.y, r0.z, r1.z, c1.y  // ::result<2>
                        cmp r4.z, r2.w, r2.y, r3.z  // ::result<2>

#line 277
                        lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
                        mov oC0.w, r0.w  // ::result<3>
                      else
                        if_eq r2.x, c10.x

#line 283
                          rcp r2.y, r1.w
                          mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 288
                          add r2.yzw, r1.xxyz, -c1.w
                          add r3.xyz, r1, r1
                          add r4.xyz, -r0, c1.z
                          rcp r3.w, r3.x
                          mad r3.w, r4.x, -r3.w, c1.z
                          max r4.x, r3.w, c1.y
                          cmp r3.x, -r3.x, r3.x, r4.x
                          add r5.xyz, r2.yzww, r2.yzww
                          mad r6.xyz, r2.yzww, c10.y, c10.z
                          mad r7.xyz, r2.yzww, -c9.z, c9.w
                          rcp r3.w, r7.x
                          mul r3.w, r0.x, r3.w
                          min r4.x, r3.w, c1.z
                          cmp r3.w, r6.x, r5.x, r4.x
                          cmp r2.y, r2.y, r3.w, r3.x
                          add r2.y, r2.y, -c1.w
                          cmp r8.x, r2.y, c1.z, c1.y  // ::result<0>
                          rcp r2.y, r3.y
                          mad r2.y, r4.y, -r2.y, c1.z
                          max r3.x, r2.y, c1.y
                          cmp r2.y, -r3.y, r3.y, r3.x
                          rcp r3.x, r7.y
                          mul r3.x, r0.y, r3.x
                          min r4.x, r3.x, c1.z
                          cmp r3.x, r6.y, r5.y, r4.x
                          cmp r2.y, r2.z, r3.x, r2.y
                          add r2.y, r2.y, -c1.w
                          cmp r8.y, r2.y, c1.z, c1.y  // ::result<1>
                          rcp r2.y, r3.z
                          mad r2.y, r4.z, -r2.y, c1.z
                          max r3.x, r2.y, c1.y
                          cmp r2.y, -r3.z, r3.z, r3.x
                          rcp r2.z, r7.z
                          mul r2.z, r0.z, r2.z
                          min r3.x, r2.z, c1.z
                          cmp r2.z, r6.z, r5.z, r3.x
                          cmp r2.y, r2.w, r2.z, r2.y
                          add r2.y, r2.y, -c1.w
                          cmp r8.z, r2.y, c1.z, c1.y  // ::result<2>

#line 291
                          lrp oC0.xyz, r1.w, r8, r0  // ::result<0,1,2>
                          mov oC0.w, r0.w  // ::result<3>
                        else
                          if_eq r2.x, c10.w

#line 297
                            rcp r2.y, r1.w
                            mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 52
                            add r2.y, -r0.y, r0.x
                            cmp r2.yz, r2.y, r0.xyxw, r0.xxyw
                            min r3.x, r0.z, r2.y  // ::fmin<0>
                            max r3.y, r2.z, r0.z  // ::fmax<0>
                            add r2.y, -r3.x, r3.y  // ::delta<0>
                            add r2.z, r3.x, r3.y  // ::maxplusmin<0>

#line 58
                            mul r3.xyz, r2.z, c1.w  // ::hsl<2,2,2>

#line 71
                            add r2.w, r2.z, -c1.z
                            rcp r3.w, r2.z
                            mul r3.w, r2.y, r3.w  // ::hsl<1>
                            add r4.x, -r2.z, c2.x
                            rcp r4.x, r4.x
                            mul r4.x, r2.y, r4.x  // ::hsl<1>
                            cmp r3.w, r2.w, r4.x, r3.w  // ::hsl<1>

#line 87
                            cmp r2.y, -r2_abs.y, c1.y, r3.w  // ::hsl<1>

#line 96
                            if_eq r2.y, c1.y

#line 99
                            else

#line 79
                              add r4.xyz, -r1.xzyw, r1.zyxw

#line 53
                              cmp r5.xy, r4.z, r1.yxzw, r1
                              min r3.w, r1.z, r5.x  // ::fmin<0>
                              max r4.w, r5.y, r1.z  // ::fmax<0>
                              add r3.w, -r3.w, r4.w  // ::delta<0>

#line 78
                              add r5.xy, r1, -r4.w
                              rcp r4.w, r3.w

#line 81
                              mul r4.y, r4.w, r4.y  // ::hsl<0>
                              mad r4.xz, r4, r4.w, c2  // ::hsl<0,0>
                              cmp r4.x, -r5_abs.y, r4.x, r4.z  // ::hsl<0>
                              cmp r4.x, -r5_abs.x, r4.y, r4.x  // ::hsl<0>
                              mul r4.y, r4.x, c2.w  // ::hsl<0>

#line 86
                              mad r4.z, r4.x, c5.x, c5.y  // ::hsl<0>
                              cmp r4.x, r4.x, r4.y, r4.z  // ::hsl<0>
                              cmp r3.w, -r3_abs.w, c1.y, r4.x  // ::hsl<0>

#line 104
                              add r4.x, r2.y, c1.z
                              mul r4.x, r3.z, r4.x  // ::temp2<0>
                              mad r4.y, r2.z, c1.w, r2.y
                              mad r2.y, r2.y, -r3.z, r4.y  // ::temp2<0>
                              cmp r2.y, r2.w, r2.y, r4.x  // ::temp2<0>
                              add r2.z, -r2.y, r2.z  // ::temp1<0>

#line 28
                              add r4, r3.w, c4.yzwx  // GetHue::temp3<0,0,0,0>
                              add r2.w, -r4.x, c1.z
                              cmp r2.w, r2.w, r4.x, r4.z  // GetHue::temp3<0>
                              cmp r2.w, r4.x, r2.w, r4.y  // GetHue::temp3<0>

#line 35
                              add r4.x, -r2.z, r2.y
                              mul r4.y, r4.x, c5.z
                              mad r4.z, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 38
                              add r5.xyz, r2.w, c8
                              add r2.w, -r2.w, c5.w
                              mul r2.w, r2.w, r4.x
                              mad r2.w, r2.w, c5.z, r2.z  // ::rgbComponent<0>
                              cmp r2.w, r5.z, r2.z, r2.w  // ::rgbComponent<0>
                              cmp r2.w, r5.y, r2.w, r2.y  // ::rgbComponent<0>
                              cmp r3.x, r5.x, r2.w, r4.z  // ::rgbComponent<0>

#line 29
                              add r2.w, -r3.w, c1.z
                              add r5, r3.w, -c4.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r2.w, r2.w, r3.w, r5.x  // GetHue::temp3<0>
                              cmp r2.w, r3.w, r2.w, r4.w  // GetHue::temp3<0>

#line 35
                              mad r3.w, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 38
                              add r6.xyz, r2.w, c8
                              add r2.w, -r2.w, c5.w
                              mul r2.w, r2.w, r4.x
                              mad r2.w, r2.w, c5.z, r2.z  // ::rgbComponent<0>
                              cmp r2.w, r6.z, r2.z, r2.w  // ::rgbComponent<0>
                              cmp r2.w, r6.y, r2.w, r2.y  // ::rgbComponent<0>
                              cmp r3.y, r6.x, r2.w, r3.w  // ::rgbComponent<0>

#line 29
                              add r2.w, -r5.y, c1.z
                              cmp r2.w, r2.w, r5.y, r5.w  // GetHue::temp3<0>
                              cmp r2.w, r5.y, r2.w, r5.z  // GetHue::temp3<0>

#line 35
                              mad r3.w, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 38
                              add r4.yzw, r2.w, c8.xxyz
                              add r2.w, -r2.w, c5.w
                              mul r2.w, r2.w, r4.x
                              mad r2.w, r2.w, c5.z, r2.z  // ::rgbComponent<0>
                              cmp r2.z, r4.w, r2.z, r2.w  // ::rgbComponent<0>
                              cmp r2.y, r4.z, r2.z, r2.y  // ::rgbComponent<0>
                              cmp r3.z, r4.y, r2.y, r3.w  // ::rgbComponent<0>

#line 113
                            endif

#line 304
                            lrp oC0.xyz, r1.w, r3, r0  // ::result<0,1,2>
                            mov oC0.w, r0.w  // ::result<3>
                          else
                            if_eq r2.x, c11.x

#line 310
                              rcp r2.y, r1.w
                              mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 329
                              max r2.yzw, r0.xxyz, r1.xxyz  // ::result<0,1,2>

#line 332
                              lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                              mov oC0.w, r0.w  // ::result<3>
                            else
                              if_eq r2.x, c11.y

#line 338
                                rcp r2.y, r1.w
                                mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 342
                                add r2.yzw, r0.xxyz, r1.xxyz
                                add_sat r2.yzw, r2, -c1.z  // ::result<0,1,2>

#line 345
                                lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                mov oC0.w, r0.w  // ::result<3>
                              else
                                if_eq r2.x, c11.z

#line 351
                                  rcp r2.y, r1.w
                                  mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 355
                                  add r2.yzw, r0.xxyz, r1.xxyz  // ::result<0,1,2>

#line 358
                                  lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                  mov oC0.w, r0.w  // ::result<3>
                                else
                                  if_eq r2.x, c11.w

#line 364
                                    rcp r2.y, r1.w
                                    mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 381
                                    add r2.yzw, -r1.xxyz, c1.w
                                    add r3.xyz, r1, -c1.w
                                    mad r3.xyz, r3, c2.x, r0  // ::result<0,1,2>
                                    mad r4.xyz, r1, c2.x, r0
                                    add r4.xyz, r4, -c1.z  // ::result<0,1,2>
                                    cmp r2.yzw, r2, r4.xxyz, r3.xxyz  // ::result<0,1,2>

#line 388
                                    lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                    mov oC0.w, r0.w  // ::result<3>
                                  else
                                    if_eq r2.x, c12.x

#line 394
                                      rcp r2.y, r1.w
                                      mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 79
                                      add r2.yzw, -r0.xxzy, r0.xzyx

#line 53
                                      cmp r3.xy, r2.w, r0.yxzw, r0
                                      min r4.x, r0.z, r3.x  // ::fmin<0>
                                      max r4.y, r3.y, r0.z  // ::fmax<0>
                                      add r3.x, -r4.x, r4.y  // ::delta<0>
                                      add r3.y, r4.x, r4.y  // ::maxplusmin<0>

#line 71
                                      add r3.z, r3.y, -c1.z
                                      rcp r3.w, r3.y
                                      add r3.y, -r3.y, c2.x
                                      rcp r3.y, r3.y
                                      mul r3.yw, r3, r3.x  // ::hsl<1,1>
                                      cmp r5.x, r3.z, r3.y, r3.w  // ::hsl<1>

#line 78
                                      add r3.yz, r0.xxyw, -r4.y
                                      rcp r3.w, r3.x

#line 81
                                      mul r2.z, r2.z, r3.w  // ::hsl<0>
                                      mad r2.yw, r2, r3.w, c2.xxzz  // ::hsl<0,0>
                                      cmp r2.y, -r3_abs.z, r2.y, r2.w  // ::hsl<0>
                                      cmp r2.y, -r3_abs.y, r2.z, r2.y  // ::hsl<0>
                                      mul r2.z, r2.y, c2.w  // ::hsl<0>

#line 86
                                      mad r2.w, r2.y, c5.x, c5.y  // ::hsl<0>
                                      cmp r5.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
                                      cmp r3, -r3_abs.x, c1.y, r5  // ::hsl<1,0,0,0>

#line 52
                                      add r2.y, -r1.y, r1.x
                                      cmp r2.yz, r2.y, r1.xyxw, r1.xxyw
                                      min r4.x, r1.z, r2.y  // ::fmin<0>
                                      max r4.y, r2.z, r1.z  // ::fmax<0>
                                      add r2.y, r4.x, r4.y  // ::maxplusmin<0>

#line 58
                                      mul r4.xyz, r2.y, c1.w  // ::hsl<2,2,2>

#line 96
                                      if_eq r3.x, c1.y

#line 99
                                      else

#line 103
                                        add r2.z, r2.y, -c1.z

#line 30
                                        add r5, r3, c4  // GetHue::temp3<0,0,0>

#line 104
                                        mul r2.w, r4.z, r5.x  // ::temp2<0>
                                        mad r3.y, r2.y, c1.w, r3.x
                                        mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
                                        cmp r2.z, r2.z, r3.x, r2.w  // ::temp2<0>
                                        add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 29
                                        add r2.w, -r5.y, c1.z
                                        cmp r2.w, r2.w, r5.y, r5.w  // GetHue::temp3<0>
                                        cmp r2.w, r5.y, r2.w, r5.z  // GetHue::temp3<0>

#line 35
                                        add r3.x, -r2.y, r2.z
                                        mul r3.y, r3.x, c5.z
                                        mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                                        add r5.xyz, r2.w, c8
                                        add r2.w, -r2.w, c5.w
                                        mul r2.w, r2.w, r3.x
                                        mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                                        cmp r2.w, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                                        cmp r2.w, r5.y, r2.w, r2.z  // ::rgbComponent<0>
                                        cmp r4.x, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 29
                                        add r2.w, -r3.w, c1.z
                                        add r5, r3.w, c7  // GetHue::temp3<0,0,0,0>
                                        cmp r2.w, r2.w, r3.w, r5.y  // GetHue::temp3<0>
                                        cmp r2.w, r3.w, r2.w, r5.x  // GetHue::temp3<0>

#line 35
                                        mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                                        add r6.xyz, r2.w, c8
                                        add r2.w, -r2.w, c5.w
                                        mul r2.w, r2.w, r3.x
                                        mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                                        cmp r2.w, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                                        cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
                                        cmp r4.y, r6.x, r2.w, r3.z  // ::rgbComponent<0>

#line 29
                                        add r2.w, -r5.z, c1.z
                                        add r3.z, r3.w, -c4.z  // GetHue::temp3<0>
                                        cmp r2.w, r2.w, r5.z, r3.z  // GetHue::temp3<0>
                                        cmp r2.w, r5.z, r2.w, r5.w  // GetHue::temp3<0>

#line 35
                                        mad r3.y, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 38
                                        add r5.xyz, r2.w, c8
                                        add r2.w, -r2.w, c5.w
                                        mul r2.w, r2.w, r3.x
                                        mad r2.w, r2.w, c5.z, r2.y  // ::rgbComponent<0>
                                        cmp r2.y, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                                        cmp r2.y, r5.y, r2.y, r2.z  // ::rgbComponent<0>
                                        cmp r4.z, r5.x, r2.y, r3.y  // ::rgbComponent<0>

#line 113
                                      endif

#line 401
                                      lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
                                      mov oC0.w, r0.w  // ::result<3>
                                    else
                                      if_eq r2.x, c12.y

#line 407
                                        rcp r2.y, r1.w
                                        mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 411
                                        mul r2.yzw, r0.xxyz, r1.xxyz  // ::result<0,1,2>

#line 414
                                        lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                        mov oC0.w, r0.w  // ::result<3>
                                      else
                                        if_eq r2.x, c12.z

#line 420
                                          rcp r2.y, r1.w
                                          mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 423
                                          add r2.yzw, -r0.xxyz, c1.z
                                          add_sat r2.yzw, -r1.xxyz, r2
                                          add r2.yzw, -r2, c1.z  // ::result<0,1,2>

#line 426
                                          lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                          mov oC0.w, r0.w  // ::result<3>
                                        else
                                          if_eq r2.x, c12.w
                                            add r2.y, -r1.w, c1.z
                                            add r2.z, -r0.w, c1.z
                                            mad r2.z, r2.y, -r2.z, c1.z  // ::result<3>

#line 434
                                            mul r3.xyz, r1.w, r1
                                            rcp r2.w, r2.z
                                            mul r4.xyz, r0.w, r0
                                            mul r4.xyz, r2.y, r4
                                            mul r4.xyz, r2.w, r4
                                            mad oC0.xyz, r3, r2.w, r4  // ::result<0,1,2>
                                            mov oC0.w, r2.z  // ::result<3>
                                          else
                                            if_eq r2.x, c6.x

#line 440
                                              rcp r2.y, r1.w
                                              mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 458
                                              add r2.yzw, -r0.xxyz, c1.w
                                              add r3.xyz, r0, -c1.w
                                              mad r3.xyz, r3, -c9.z, c9.w
                                              add r4.xyz, -r1, c1.z
                                              mad r3.xyz, r3, -r4, c1.z  // ::result<0,1,2>

#line 450
                                              dp2add r3.w, r1.x, r0.x, c1.y  // ::result<0>
                                              cmp r4.x, r2.y, r3.w, r3.x  // ::result<0>

#line 456
                                              dp2add r2.y, r1.y, r0.y, c1.y  // ::result<1>
                                              cmp r4.y, r2.z, r2.y, r3.y  // ::result<1>

#line 462
                                              dp2add r2.y, r1.z, r0.z, c1.y  // ::result<2>
                                              cmp r4.z, r2.w, r2.y, r3.z  // ::result<2>

#line 465
                                              lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
                                            else
                                              if_eq r2.x, c6.y

#line 471
                                                rcp r2.y, r1.w
                                                mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 474
                                                min r2.yzw, r1.xxyz, r0.xxyz
                                                max r3.xyz, r0, r1
                                                add r2.yzw, r2, -r3.xxyz
                                                add r2.yzw, r2, c1.z  // ::result<0,1,2>

#line 477
                                                lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                              else
                                                if_eq r2.x, c6.z

#line 483
                                                  rcp r2.y, r1.w
                                                  mul_sat r1.xyz, r1, r2.y  // Blend::blendColor<0,1,2>

#line 500
                                                  add r2.yzw, -r1.xxyz, c1.w
                                                  add r3.xyz, r1, -c1.w
                                                  add r3.xyz, r3, r3
                                                  max r4.xyz, r0, r3  // ::result<0,1,2>
                                                  add r3.xyz, r1, r1
                                                  min r5.xyz, r3, r0  // ::result<0,1,2>
                                                  cmp r2.yzw, r2, r5.xxyz, r4.xxyz  // ::result<0,1,2>

#line 507
                                                  lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
                                                else
                                                  add r2.x, r2.x, c6.w

#line 513
                                                  rcp r2.y, r1.w
                                                  mul_sat r2.yzw, r1.xxyz, r2.y  // Blend::blendColor<0,1,2>

#line 518
                                                  add r3.xyz, r2.yzww, -c1.z
                                                  mul r4.xyz, r0, r0
                                                  add r5.xyz, -r2.yzww, c1.z
                                                  rcp r3.w, r5.x
                                                  mul r3.w, r3.w, r4.x
                                                  min r4.x, r3.w, c1.z
                                                  cmp r6.x, r3.x, r2.y, r4.x  // ::result<0>
                                                  rcp r3.x, r5.y
                                                  mul r3.x, r3.x, r4.y
                                                  min r4.x, r3.x, c1.z
                                                  cmp r6.y, r3.y, r2.z, r4.x  // ::result<1>
                                                  rcp r3.x, r5.z
                                                  mul r3.x, r3.x, r4.z
                                                  min r4.x, r3.x, c1.z
                                                  cmp r6.z, r3.z, r2.w, r4.x  // ::result<2>

#line 521
                                                  lrp oC0.xyz, r1.w, r6, r0  // ::result<0,1,2>
                                                  cmp r1.xyz, -r2_abs.x, r2.yzww, r1  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                            mov oC0.w, r0.w  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 527
      mov r2.x, c0.x  // ::BlendMode<0>
      if_eq r2.x, c13.x

#line 530
        rcp r0.w, r1.w
        mul_sat r2.yzw, r0.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 52
        add r0.w, -r0.y, r0.x
        cmp r3.xy, r0.w, r0.yxzw, r0
        min r4.x, r0.z, r3.x  // ::fmin<0>
        max r4.y, r3.y, r0.z  // ::fmax<0>
        add r3.x, r4.x, r4.y  // ::maxplusmin<0>

#line 58
        mul r3.yzw, r3.x, c1.w  // ::hsl<2,2,2>

#line 52
        add r4.z, -r2.z, r2.y
        cmp r2.yz, r4.z, r2.xzyw, r2
        min r4.z, r2.w, r2.y  // ::fmin<0>
        max r4.w, r2.z, r2.w  // ::fmax<0>
        add r2.y, -r4.z, r4.w  // ::delta<0>
        add r2.z, r4.z, r4.w  // ::maxplusmin<0>

#line 71
        add r2.w, r2.z, -c1.z
        rcp r4.z, r2.z
        mul r4.z, r2.y, r4.z  // ::hsl<1>
        add r2.z, -r2.z, c2.x
        rcp r2.z, r2.z
        mul r2.z, r2.z, r2.y  // ::hsl<1>
        cmp r2.z, r2.w, r2.z, r4.z  // ::hsl<1>

#line 87
        cmp r2.y, -r2_abs.y, c1.y, r2.z  // ::hsl<1>

#line 96
        if_eq r2.y, c1.y

#line 99
        else

#line 54
          add r2.z, -r4.x, r4.y  // ::delta<0>

#line 78
          add r4.xy, r0, -r4.y
          add r2.w, -r0.z, r0.y
          rcp r4.z, r2.z
          mul r2.w, r2.w, r4.z  // ::hsl<0>
          add r4.w, -r0.x, r0.z
          mad r4.w, r4.w, r4.z, c2.x  // ::hsl<0>
          mad r0.w, r0.w, r4.z, c2.z  // ::hsl<0>
          cmp r0.w, -r4_abs.y, r4.w, r0.w  // ::hsl<0>
          cmp r0.w, -r4_abs.x, r2.w, r0.w  // ::hsl<0>
          mul r2.w, r0.w, c2.w  // ::hsl<0>

#line 86
          mad r4.x, r0.w, c5.x, c5.y  // ::hsl<0>
          cmp r0.w, r0.w, r2.w, r4.x  // ::hsl<0>
          cmp r0.w, -r2_abs.z, c1.y, r0.w  // ::hsl<0>

#line 103
          add r2.z, r3.x, -c1.z
          add r2.w, r2.y, c1.z
          mul r2.w, r2.w, r3.w  // ::temp2<0>
          mad r4.x, r3.x, c1.w, r2.y
          mad r2.y, r2.y, -r3.w, r4.x  // ::temp2<0>
          cmp r2.y, r2.z, r2.y, r2.w  // ::temp2<0>
          add r2.z, -r2.y, r3.x  // ::temp1<0>

#line 28
          add r4, r0.w, c4.yzwx  // GetHue::temp3<0,0,0,0>
          add r2.w, -r4.x, c1.z
          cmp r2.w, r2.w, r4.x, r4.z  // GetHue::temp3<0>
          cmp r2.w, r4.x, r2.w, r4.y  // GetHue::temp3<0>

#line 35
          add r3.x, -r2.z, r2.y
          mul r4.x, r3.x, c5.z
          mad r4.y, r4.x, r2.w, r2.z  // ::rgbComponent<0>

#line 38
          add r5.xyz, r2.w, c8
          add r2.w, -r2.w, c5.w
          mul r2.w, r2.w, r3.x
          mad r2.w, r2.w, c5.z, r2.z  // ::rgbComponent<0>
          cmp r2.w, r5.z, r2.z, r2.w  // ::rgbComponent<0>
          cmp r2.w, r5.y, r2.w, r2.y  // ::rgbComponent<0>
          cmp r3.y, r5.x, r2.w, r4.y  // ::rgbComponent<0>

#line 29
          add r2.w, -r0.w, c1.z
          add r5, r0.w, -c4.xywz  // GetHue::temp3<0,0,0,0>
          cmp r2.w, r2.w, r0.w, r5.x  // GetHue::temp3<0>
          cmp r0.w, r0.w, r2.w, r4.w  // GetHue::temp3<0>

#line 35
          mad r2.w, r4.x, r0.w, r2.z  // ::rgbComponent<0>

#line 38
          add r4.yzw, r0.w, c8.xxyz
          add r0.w, -r0.w, c5.w
          mul r0.w, r0.w, r3.x
          mad r0.w, r0.w, c5.z, r2.z  // ::rgbComponent<0>
          cmp r0.w, r4.w, r2.z, r0.w  // ::rgbComponent<0>
          cmp r0.w, r4.z, r0.w, r2.y  // ::rgbComponent<0>
          cmp r3.z, r4.y, r0.w, r2.w  // ::rgbComponent<0>

#line 29
          add r0.w, -r5.y, c1.z
          cmp r0.w, r0.w, r5.y, r5.w  // GetHue::temp3<0>
          cmp r0.w, r5.y, r0.w, r5.z  // GetHue::temp3<0>

#line 35
          mad r2.w, r4.x, r0.w, r2.z  // ::rgbComponent<0>

#line 38
          add r4.xyz, r0.w, c8
          add r0.w, -r0.w, c5.w
          mul r0.w, r0.w, r3.x
          mad r0.w, r0.w, c5.z, r2.z  // ::rgbComponent<0>
          cmp r0.w, r4.z, r2.z, r0.w  // ::rgbComponent<0>
          cmp r0.w, r4.y, r0.w, r2.y  // ::rgbComponent<0>
          cmp r3.w, r4.x, r0.w, r2.w  // ::rgbComponent<0>

#line 113
        endif

#line 537
        lrp oC0.xyz, r1.w, r3.yzww, r0  // ::result<0,1,2>
      else
        if_eq r2.x, c13.y

#line 543
          rcp r0.w, r1.w
          mul_sat r2.yzw, r0.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 547
          add r3.xyz, -r0, c1.z
          add r2.yzw, -r2, c1.z
          mad r2.yzw, r3.xxyz, -r2, c1.z  // ::result<0,1,2>

#line 550
          lrp oC0.xyz, r1.w, r2.yzww, r0  // ::result<0,1,2>
        else
          if_eq r2.x, c13.z

#line 556
            rcp r0.w, r1.w
            mul_sat r2.yzw, r0.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 561
            add r3.xyz, r2.yzww, -c1.w
            add r4.xyz, r0, r0
            mul r5.xyz, r0, r0
            mad r6.xyz, r2.yzww, -c9.z, c9.w
            mul r5.xyz, r5, r6
            mad r5.xyz, r4, r2.yzww, r5
            rsq r0.w, r0.x
            rcp r0.w, r0.w
            mad r6.xyz, r2.yzww, c10.y, c10.z
            add r2.yzw, -r2, c1.z
            mul r2.yzw, r2, r4.xxyz
            mad r0.w, r0.w, r6.x, r2.y
            cmp r4.x, r3.x, r0.w, r5.x  // ::result<0>
            rsq r0.w, r0.y
            rcp r0.w, r0.w
            mad r0.w, r0.w, r6.y, r2.z
            cmp r4.y, r3.y, r0.w, r5.y  // ::result<1>
            rsq r0.w, r0.z
            rcp r0.w, r0.w
            mad r0.w, r0.w, r6.z, r2.w
            cmp r4.z, r3.z, r0.w, r5.z  // ::result<2>

#line 564
            lrp oC0.xyz, r1.w, r4, r0  // ::result<0,1,2>
          else
            if_eq r2.x, c13.w

#line 570
              rcp r0.w, r1.w
              mul_sat r1.xyz, r0.w, r1  // Blend::blendColor<0,1,2>

#line 575
              add r2.xyz, r1, -c1.w
              add r1.xyz, r1, r1
              add r3.xyz, -r0, c1.z
              rcp r0.w, r1.x
              mad r0.w, r3.x, -r0.w, c1.z
              max r2.w, r0.w, c1.y
              cmp r0.w, -r1.x, r1.x, r2.w
              add r4.xyz, r2, r2
              mad r5.xyz, r2, c10.y, c10.z
              mad r6.xyz, r2, -c9.z, c9.w
              rcp r1.x, r6.x
              mul r1.x, r0.x, r1.x
              min r2.w, r1.x, c1.z
              cmp r1.x, r5.x, r4.x, r2.w
              cmp r7.x, r2.x, r1.x, r0.w  // ::result<0>
              rcp r0.w, r1.y
              mad r0.w, r3.y, -r0.w, c1.z
              max r1.x, r0.w, c1.y
              cmp r0.w, -r1.y, r1.y, r1.x
              rcp r1.x, r6.y
              mul r1.x, r0.y, r1.x
              min r2.x, r1.x, c1.z
              cmp r1.x, r5.y, r4.y, r2.x
              cmp r7.y, r2.y, r1.x, r0.w  // ::result<1>
              rcp r0.w, r1.z
              mad r0.w, r3.z, -r0.w, c1.z
              max r1.x, r0.w, c1.y
              cmp r0.w, -r1.z, r1.z, r1.x
              rcp r1.x, r6.z
              mul r1.x, r0.z, r1.x
              min r2.x, r1.x, c1.z
              cmp r1.x, r5.z, r4.z, r2.x
              cmp r7.z, r2.z, r1.x, r0.w  // ::result<2>

#line 578
              lrp oC0.xyz, r1.w, r7, r0  // ::result<0,1,2>
            endif
          endif
        endif
      endif

#line 623
    endif

// approximately 1538 instruction slots used (2 texture, 1536 arithmetic)
