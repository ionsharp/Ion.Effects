//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Angle;
//   float BlendMode;
//   float4 Color1;
//   float4 Color10;
//   float4 Color11;
//   float4 Color12;
//   float4 Color13;
//   float4 Color14;
//   float4 Color15;
//   float4 Color16;
//   float4 Color2;
//   float4 Color3;
//   float4 Color4;
//   float4 Color5;
//   float4 Color6;
//   float4 Color7;
//   float4 Color8;
//   float4 Color9;
//   float Length;
//   float Offset1;
//   float Offset10;
//   float Offset11;
//   float Offset12;
//   float Offset13;
//   float Offset14;
//   float Offset15;
//   float Offset16;
//   float Offset2;
//   float Offset3;
//   float Offset4;
//   float Offset5;
//   float Offset6;
//   float Offset7;
//   float Offset8;
//   float Offset9;
//   float Opacity;
//   float Progress;
//   float Scale;
//   float Thickness;
//   float TypeIndex;
//   sampler2D input;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlendMode    c0       1
//   Opacity      c1       1
//   Angle        c2       1
//   Scale        c7       1
//   TypeIndex    c8       1
//   Color1       c9       1
//   Offset1      c10      1
//   Color2       c11      1
//   Offset2      c12      1
//   Color3       c13      1
//   Offset3      c14      1
//   Color4       c15      1
//   Offset4      c16      1
//   Color5       c17      1
//   Offset5      c18      1
//   Color6       c19      1
//   Offset6      c20      1
//   Color7       c21      1
//   Offset7      c22      1
//   Color8       c23      1
//   Offset8      c24      1
//   Color9       c25      1
//   Offset9      c26      1
//   Color10      c27      1
//   Offset10     c28      1
//   Color11      c29      1
//   Offset11     c30      1
//   Color12      c31      1
//   Offset12     c32      1
//   Color13      c33      1
//   Offset13     c34      1
//   Color14      c35      1
//   Offset14     c36      1
//   Color15      c37      1
//   Offset15     c38      1
//   Color16      c39      1
//   Offset16     c40      1
//   Length       c41      1
//   Progress     c42      1
//   Thickness    c43      1
//   input        s0       1
//

    ps_3_0
    def c3, 0, 0.5, -0.5, 0.180141002
    def c4, 0, 1, -2, 1.57079637
    def c5, -0, -3.14159274, 0.0174532942, 3.14159274
    def c6, 6.28318548, 0.159154937, 0.00100000005, 3
    def c44, 0.0208350997, -0.0851330012, -0.330299497, 0.999866009
    def c45, 2, 4, 0.166666672, 1
    def c46, 1, 0.333333343, 1.33333337, -0.666666627
    def c47, 6, -0.166666672, -0.5, -0.666666687
    def c48, 26, 1.41421354, 0, 0
    def c49, 18, -19, 20, 21
    def c50, 1, -1, -0.333333343, 0.666666627
    def c51, 5, 7, 8, 9
    def c52, 10, 11, 12, 13
    def c53, 14, 15, 16, 17
    def c54, 22, 23, 24, 25
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 897 "C:\Users\james\OneDrive\Code\GitHub\Core.WPF\Core.WPF\Effects\-Image\Blend\GradientOverlay.fx"
    texld r0, v0, s0  // ::color1<0,1,2,3>
    if_lt -r0.w, c3.x

#line 105
      add r1.xy, c3.y, -v0
      mul r1.zw, r1_abs.xyxy, r1_abs.xyxy
      add r1.z, r1.w, r1.z
      rsq r1.z, r1.z
      rcp r1.z, r1.z  // ::GetDistance<0>

#line 905
      mov r2.xy, c3
      mad r1.w, c43.x, -r2.y, r2.y
      add r1.w, -r1.w, r1.z
      add r2.y, -r1.z, c3.y

#line 884
      add r2.zw, c3.z, v0.xyyx
      add r3.xy, -r2_abs.wzzw, r2_abs.zwzw
      cmp r3.xz, r3.x, r2_abs.wyzw, r2_abs.zyww
      rcp r3.z, r3.z
      mul r3.x, r3.z, r3.x
      mul r3.z, r3.x, r3.x
      mad r3.w, r3.z, c44.x, c44.y
      mad r3.w, r3.z, r3.w, c3.w
      mad r3.w, r3.z, r3.w, c44.z
      mad r3.z, r3.z, r3.w, c44.w
      mul r3.x, r3.z, r3.x
      cmp r3.y, r3.y, c4.x, c4.y
      mad r3.z, r3.x, c4.z, c4.w
      mad r3.x, r3.z, r3.y, r3.x
      cmp r3.y, r2.w, c5.x, c5.y
      add r3.x, r3.y, r3.x
      add r3.y, -r2.w, r2.z
      cmp r3.yz, r3.y, r2.xwzw, r2.xzww
      cmp r3.z, r3.z, c4.y, c4.x
      cmp r3.y, r3.y, c3.x, r3.z
      add r3.z, r3.x, r3.x
      mad r3.x, r3.y, -r3.z, r3.x
      mov r3.z, c5.z
      mad r3.x, c2.x, r3.z, r3.x  // ::t<0>

#line 887
      add r3.xy, r3.x, c5.wyzw  // ::t<0,0>
      add r3.z, -r3.x, c6.x
      cmp r3.x, r3.z, r3.x, r3.y  // ::t<0>
      mul r3.y, r3.x, c6.y  // ::t<0>

#line 908
      mov r4.yw, c6
      mad r3.x, r3.x, -r4.y, c42.x
      cmp r3.x, r3.x, c4.x, c4.y

#line 913
      cmp r2.y, r2.y, -c4.y, -c4.x
      cmp r1.w, r1.w, r2.y, c3.x
      cmp r1.w, r1.w, c4.y, r3.x
      cmp r1.w, -c43.x, r2.x, r1.w
      if_ne r1.w, -r1.w

#line 929
        mov r5, c3.x  // ::main<0,1,2,3>
      else

#line 917
        if_eq c8.x, r2.x

#line 686
          mov r4.yz, c4
          add r1.w, r4.y, -c7.x

#line 699
          if_eq c41.x, r2.x

#line 706
            mov r6, c3.x  // ::color1<0,1,2,3>
            mov r3.xzw, c3.x  // ::color2<0,1,2>
            mov r7.x, c3.x  // ::offset1<0>
            mov r7.y, c4.y  // ::offset2<0>
          else
            if_eq c41.x, r4.y

#line 714
              mov r6, c9  // ::color1<0,1,2,3>
              mov r3.xzw, c9.xyyz  // ::color2<0,1,2>
              mov r7.x, c3.x  // ::offset1<0>
              mov r7.y, c4.y  // ::offset2<0>
            else
              if_eq c41.x, -r4.z

#line 722
                mov r6, c9  // ::color1<0,1,2,3>
                mov r3.xzw, c11.xyyz  // ::color2<0,1,2>
                mov r7.x, c3.x  // ::offset1<0>
                mov r7.y, c4.y  // ::offset2<0>
              else

#line 725
                mad r2.y, r3.y, r1.w, -c10.x
                mad r4.x, r3.y, r1.w, -c12.x
                cmp r7.z, r4.x, c4.x, c4.y
                cmp r2.y, r2.y, r7.z, c3.x
                if_ne r2.y, -r2.y

#line 729
                  mov r6, c9  // ::color1<0,1,2,3>
                  mov r3.xzw, c11.xyyz  // ::color2<0,1,2>
                  mov r7.x, c10.x  // ::offset1<0>
                  mov r7.y, c12.x  // ::offset2<0>
                else
                  mad r2.y, r3.y, r1.w, -c14.x
                  cmp r7.z, r2.y, c4.x, c4.y
                  cmp r4.x, r4.x, r7.z, c3.x
                  if_ne r4.x, -r4.x

#line 734
                    mov r6, c11  // ::color1<0,1,2,3>
                    mov r3.xzw, c13.xyyz  // ::color2<0,1,2>
                    mov r7.x, c12.x  // ::offset1<0>
                    mov r7.y, c14.x  // ::offset2<0>
                  else
                    mad r4.x, r3.y, r1.w, -c16.x
                    cmp r7.z, r4.x, c4.x, c4.y
                    cmp r2.y, r2.y, r7.z, c3.x
                    if_ne r2.y, -r2.y

#line 739
                      mov r6, c13  // ::color1<0,1,2,3>
                      mov r3.xzw, c15.xyyz  // ::color2<0,1,2>
                      mov r7.x, c14.x  // ::offset1<0>
                      mov r7.y, c16.x  // ::offset2<0>
                    else
                      mad r2.y, r3.y, r1.w, -c18.x
                      cmp r7.z, r2.y, c4.x, c4.y
                      cmp r4.x, r4.x, r7.z, c3.x
                      if_ne r4.x, -r4.x

#line 744
                        mov r6, c15  // ::color1<0,1,2,3>
                        mov r3.xzw, c17.xyyz  // ::color2<0,1,2>
                        mov r7.x, c16.x  // ::offset1<0>
                        mov r7.y, c18.x  // ::offset2<0>
                      else
                        mad r4.x, r3.y, r1.w, -c20.x
                        cmp r7.z, r4.x, c4.x, c4.y
                        cmp r2.y, r2.y, r7.z, c3.x
                        if_ne r2.y, -r2.y

#line 749
                          mov r6, c17  // ::color1<0,1,2,3>
                          mov r3.xzw, c19.xyyz  // ::color2<0,1,2>
                          mov r7.x, c18.x  // ::offset1<0>
                          mov r7.y, c20.x  // ::offset2<0>
                        else
                          mad r2.y, r3.y, r1.w, -c22.x
                          cmp r7.z, r2.y, c4.x, c4.y
                          cmp r4.x, r4.x, r7.z, c3.x
                          if_ne r4.x, -r4.x

#line 754
                            mov r6, c19  // ::color1<0,1,2,3>
                            mov r3.xzw, c21.xyyz  // ::color2<0,1,2>
                            mov r7.x, c20.x  // ::offset1<0>
                            mov r7.y, c22.x  // ::offset2<0>
                          else
                            mad r4.x, r3.y, r1.w, -c24.x
                            cmp r7.z, r4.x, c4.x, c4.y
                            cmp r2.y, r2.y, r7.z, c3.x
                            if_ne r2.y, -r2.y

#line 759
                              mov r6, c21  // ::color1<0,1,2,3>
                              mov r3.xzw, c23.xyyz  // ::color2<0,1,2>
                              mov r7.x, c22.x  // ::offset1<0>
                              mov r7.y, c24.x  // ::offset2<0>
                            else
                              mad r2.y, r3.y, r1.w, -c26.x

#line 765
                              mad r7.z, r3.y, r1.w, -c28.x

#line 770
                              mad r7.w, r3.y, r1.w, -c30.x

#line 775
                              mad r8.x, r3.y, r1.w, -c32.x

#line 780
                              mad r8.y, r3.y, r1.w, -c34.x

#line 785
                              mad r8.z, r3.y, r1.w, -c36.x

#line 790
                              mad r8.w, r3.y, r1.w, -c38.x

#line 799
                              cmp r8.w, r8.w, -c4.x, -c4.y
                              cmp r8.w, r8.z, r8.w, c3.x
                              mov r9, c37  // ::Color15<0,1,2,3>
                              cmp r10, r8.w, r9, c35  // ::color1<0,1,2,3>
                              cmp r9.xyz, r8.w, c39, r9  // ::color2<0,1,2>
                              mov r11.y, c40.x
                              mov r11.z, c36.x
                              mov r11.xw, c38.x
                              cmp r11.xy, r8.w, r11, r11.zwzw  // ::offset1<0>, ::offset2<0>
                              cmp r8.z, r8.z, -c4.x, -c4.y
                              cmp r8.z, r8.y, r8.z, c3.x
                              cmp r10, r8.z, r10, c33  // ::color1<0,1,2,3>
                              cmp r9.xyz, r8.z, r9, c35  // ::color2<0,1,2>
                              mov r12.xw, c34.x
                              mov r12.y, c36.x
                              cmp r8.zw, r8.z, r11.xyxy, r12.xyxy  // ::offset1<0>, ::offset2<0>
                              cmp r8.y, r8.y, -c4.x, -c4.y
                              cmp r8.y, r8.x, r8.y, c3.x
                              cmp r10, r8.y, r10, c31  // ::color1<0,1,2,3>
                              cmp r9.xyz, r8.y, r9, c33  // ::color2<0,1,2>
                              mov r12.z, c32.x
                              cmp r8.yz, r8.y, r8.xzww, r12.xzww  // ::offset1<0>, ::offset2<0>
                              cmp r8.x, r8.x, -c4.x, -c4.y
                              cmp r8.x, r7.w, r8.x, c3.x
                              cmp r10, r8.x, r10, c29  // ::color1<0,1,2,3>
                              cmp r9.xyz, r8.x, r9, c31  // ::color2<0,1,2>
                              mov r11.xw, c30.x
                              mov r11.y, c32.x
                              cmp r8.xy, r8.x, r8.yzzw, r11  // ::offset1<0>, ::offset2<0>
                              cmp r7.w, r7.w, -c4.x, -c4.y
                              cmp r7.w, r7.z, r7.w, c3.x
                              cmp r10, r7.w, r10, c27  // ::color1<0,1,2,3>
                              cmp r9.xyz, r7.w, r9, c29  // ::color2<0,1,2>
                              mov r11.yz, c28.x
                              cmp r8.xy, r7.w, r8, r11.zwzw  // ::offset1<0>, ::offset2<0>
                              cmp r7.z, r7.z, -c4.x, -c4.y
                              cmp r7.z, r2.y, r7.z, c3.x
                              cmp r10, r7.z, r10, c25  // ::color1<0,1,2,3>
                              cmp r9.xyz, r7.z, r9, c27  // ::color2<0,1,2>
                              mov r11.xw, c26.x
                              cmp r7.zw, r7.z, r8.xyxy, r11.xyxy  // ::offset1<0>, ::offset2<0>
                              cmp r2.y, r2.y, -c4.x, -c4.y
                              cmp r2.y, r4.x, r2.y, c3.x
                              cmp r6, r2.y, r10, c23  // ::color1<0,1,2,3>
                              cmp r3.xzw, r2.y, r9.xyyz, c25.xyyz  // ::color2<0,1,2>
                              mov r11.z, c24.x
                              cmp r7.xy, r2.y, r7.zwzw, r11.zwzw  // ::offset1<0>, ::offset2<0>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          add r2.y, -r7.x, r7.y  // ::q<0>
          mad r1.w, r3.y, r1.w, -r7.x
          rcp r3.y, r2.y
          mul r1.w, r1.w, r3.y
          cmp r1.w, -r2_abs.y, c3.x, r1.w  // ::p<0>

#line 221
          cmp r7.xyz, -r3_abs.xzww, c6.z, r3.xzww  // Blend::blendColor<0,1,2>

#line 229
          if_eq c0.x, r2.x

#line 232
            rcp r2.y, r1.w
            mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 235
            add r3.xyz, r6, r7
            mul r3.xyz, r1.w, r3

#line 238
            add r2.y, -r1.w, c4.y
            mul r3.xyz, r3, c3.y
            mad r3.xyz, r2.y, r6, r3  // ::result<0,1,2>
          else
            if_eq c0.x, r4.y

#line 244
              rcp r2.y, r1.w
              mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 248
              add r8.xyz, -r6, c4.y
              rcp r9.x, r7.x
              rcp r9.y, r7.y
              rcp r9.z, r7.z
              mad_sat r8.xyz, r8, -r9, c4.y  // ::result<0,1,2>

#line 251
              lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
            else
              if_eq c0.x, -r4.z

#line 257
                rcp r2.y, r1.w
                mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 263
                add r4.xyz, r7, -c4.y
                add r8.xyz, -r7, c4.y
                rcp r2.y, r8.x
                mul r2.y, r2.y, r6.x
                min r3.w, r2.y, c4.y
                cmp r9.x, r4.x, r7.x, r3.w  // ::result<0>
                rcp r2.y, r8.y
                mul r2.y, r2.y, r6.y
                min r3.w, r2.y, c4.y
                cmp r9.y, r4.y, r7.y, r3.w  // ::result<1>
                rcp r2.y, r8.z
                mul r2.y, r2.y, r6.z
                min r3.w, r2.y, c4.y
                cmp r9.z, r4.z, r7.z, r3.w  // ::result<2>

#line 266
                lrp r3.xyz, r1.w, r9, r6  // ::result<0,1,2>
              else
                if_eq c0.x, r4.w

#line 272
                  rcp r2.y, r1.w
                  mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 178
                  add r4.xyz, -r7.xzyw, r7.zyxw

#line 152
                  cmp r8.xy, r4.z, r7.yxzw, r7
                  min r2.y, r7.z, r8.x  // ::fmin<0>
                  max r3.w, r8.y, r7.z  // ::fmax<0>
                  add r7.w, -r2.y, r3.w  // ::delta<0>
                  add r2.y, r2.y, r3.w  // ::maxplusmin<0>

#line 170
                  add r8.x, r2.y, -c4.y
                  rcp r8.y, r2.y
                  mul r8.y, r7.w, r8.y  // ::hsl<1>
                  add r2.y, -r2.y, -c4.z
                  rcp r2.y, r2.y
                  mul r2.y, r2.y, r7.w  // ::hsl<1>
                  cmp r8.x, r8.x, r2.y, r8.y  // ::hsl<1>

#line 177
                  add r9.xy, -r3.w, r7
                  rcp r2.y, r7.w

#line 180
                  mul r3.w, r2.y, r4.y  // ::hsl<0>
                  mad r4.xy, r4.xzzw, r2.y, c45  // ::hsl<0,0>
                  cmp r2.y, -r9_abs.y, r4.x, r4.y  // ::hsl<0>
                  cmp r2.y, -r9_abs.x, r3.w, r2.y  // ::hsl<0>
                  mul r3.w, r2.y, c45.z  // ::hsl<0>

#line 185
                  mad r4.x, r2.y, c45.z, c45.w  // ::hsl<0>
                  cmp r8.yzw, r2.y, r3.w, r4.x  // ::hsl<0,0,0>
                  cmp r8, -r7_abs.w, c3.x, r8  // ::hsl<1,0,0,0>

#line 151
                  add r2.y, -r6.y, r6.x
                  cmp r4.xy, r2.y, r6.yxzw, r6
                  min r2.y, r6.z, r4.x  // ::fmin<0>
                  max r3.w, r4.y, r6.z  // ::fmax<0>
                  add r2.y, r2.y, r3.w  // ::maxplusmin<0>

#line 157
                  mul r4.xyz, r2.y, c3.y  // ::hsl<2,2,2>

#line 195
                  if_eq r8.x, c3.x

#line 198
                  else

#line 202
                    add r3.w, r2.y, -c4.y

#line 129
                    add r9, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                    mul r7.w, r4.z, r9.x  // ::temp2<0>
                    mad r8.y, r2.y, c3.y, r8.x
                    mad r8.x, r8.x, -r4.z, r8.y  // ::temp2<0>
                    cmp r3.w, r3.w, r8.x, r7.w  // ::temp2<0>
                    add r2.y, r2.y, -r3.w  // ::temp1<0>

#line 128
                    add r7.w, -r9.y, c4.y
                    cmp r7.w, r7.w, r9.y, r9.w  // GetHue::temp3<0>
                    cmp r7.w, r9.y, r7.w, r9.z  // GetHue::temp3<0>

#line 134
                    add r8.x, -r2.y, r3.w
                    mul r8.y, r8.x, c47.x
                    mad r8.z, r8.y, r7.w, r2.y  // ::rgbComponent<0>

#line 137
                    add r9.xyz, r7.w, c47.yzww
                    add r7.w, -r7.w, -c47.w
                    mul r7.w, r7.w, r8.x
                    mad r7.w, r7.w, c47.x, r2.y  // ::rgbComponent<0>
                    cmp r7.w, r9.z, r2.y, r7.w  // ::rgbComponent<0>
                    cmp r7.w, r9.y, r7.w, r3.w  // ::rgbComponent<0>
                    cmp r4.x, r9.x, r7.w, r8.z  // ::rgbComponent<0>

#line 128
                    add r7.w, -r8.w, c4.y
                    add r9, r8.w, c50  // GetHue::temp3<0,0,0,0>
                    cmp r7.w, r7.w, r8.w, r9.y  // GetHue::temp3<0>
                    cmp r7.w, r8.w, r7.w, r9.x  // GetHue::temp3<0>

#line 134
                    mad r8.z, r8.y, r7.w, r2.y  // ::rgbComponent<0>

#line 137
                    add r10.xyz, r7.w, c47.yzww
                    add r7.w, -r7.w, -c47.w
                    mul r7.w, r7.w, r8.x
                    mad r7.w, r7.w, c47.x, r2.y  // ::rgbComponent<0>
                    cmp r7.w, r10.z, r2.y, r7.w  // ::rgbComponent<0>
                    cmp r7.w, r10.y, r7.w, r3.w  // ::rgbComponent<0>
                    cmp r4.y, r10.x, r7.w, r8.z  // ::rgbComponent<0>

#line 128
                    add r7.w, -r9.z, c4.y
                    add r8.z, r8.w, -c46.z  // GetHue::temp3<0>
                    cmp r7.w, r7.w, r9.z, r8.z  // GetHue::temp3<0>
                    cmp r7.w, r9.z, r7.w, r9.w  // GetHue::temp3<0>

#line 134
                    mad r8.y, r8.y, r7.w, r2.y  // ::rgbComponent<0>

#line 137
                    add r9.xyz, r7.w, c47.yzww
                    add r7.w, -r7.w, -c47.w
                    mul r7.w, r7.w, r8.x
                    mad r7.w, r7.w, c47.x, r2.y  // ::rgbComponent<0>
                    cmp r2.y, r9.z, r2.y, r7.w  // ::rgbComponent<0>
                    cmp r2.y, r9.y, r2.y, r3.w  // ::rgbComponent<0>
                    cmp r4.z, r9.x, r2.y, r8.y  // ::rgbComponent<0>

#line 212
                  endif

#line 279
                  lrp r3.xyz, r1.w, r4, r6  // ::result<0,1,2>
                else
                  mov r4.x, c0.x  // ::BlendMode<0>
                  if_eq r4.x, c45.y

#line 285
                    rcp r2.y, r1.w
                    mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 303
                    min r8.xyz, r6, r7  // ::result<0,1,2>

#line 306
                    lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                  else
                    if_eq r4.x, c51.x

#line 312
                      rcp r2.y, r1.w
                      mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 316
                      add r8.xyz, r6, -r7

#line 319
                      lrp r3.xyz, r1.w, r8_abs, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c47.x

#line 325
                        rcp r2.y, r1.w
                        mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 329
                        add r8.xyz, r6, c3.z
                        add r8.xyz, r8, r8
                        add r9.xyz, r7, c3.z
                        mad r8.xyz, r8, -r9, c3.y  // ::result<0,1,2>

#line 332
                        lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c51.y

#line 338
                          rcp r2.y, r1.w
                          mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 343
                          add r8.xyz, r6, -c4.y
                          mul r9.xyz, r7, r7
                          add r10.xyz, -r6, c4.y
                          rcp r2.y, r10.x
                          mul r2.y, r2.y, r9.x
                          min r3.w, r2.y, c4.y
                          cmp r11.x, -r8_abs.x, r6.x, r3.w  // ::result<0>
                          rcp r2.y, r10.y
                          mul r2.y, r2.y, r9.y
                          min r3.w, r2.y, c4.y
                          cmp r11.y, -r8_abs.y, r6.y, r3.w  // ::result<1>
                          rcp r2.y, r10.z
                          mul r2.y, r2.y, r9.z
                          min r3.w, r2.y, c4.y
                          cmp r11.z, -r8_abs.z, r6.z, r3.w  // ::result<2>

#line 346
                          lrp r3.xyz, r1.w, r11, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c51.z

#line 352
                            rcp r2.y, r1.w
                            mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 369
                            add r8.xyz, -r7, c3.y
                            add r9.xyz, -r6, c4.y
                            add r10.xyz, r7, c3.z
                            mad r10.xyz, r10, -c4_abs.z, c4_abs.y
                            mad r9.xyz, r9, -r10, c4.y  // ::result<0,1,2>

#line 361
                            dp2add r2.y, r6.x, r7.x, c3.x  // ::result<0>
                            cmp r10.x, r8.x, r2.y, r9.x  // ::result<0>

#line 367
                            dp2add r2.y, r6.y, r7.y, c3.x  // ::result<1>
                            cmp r10.y, r8.y, r2.y, r9.y  // ::result<1>

#line 373
                            dp2add r2.y, r6.z, r7.z, c3.x  // ::result<2>
                            cmp r10.z, r8.z, r2.y, r9.z  // ::result<2>

#line 376
                            lrp r3.xyz, r1.w, r10, r6  // ::result<0,1,2>
                          else
                            if_eq r4.x, c51.w

#line 382
                              rcp r2.y, r1.w
                              mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 387
                              add r8.xyz, r7, c3.z
                              add r9.xyz, r7, r7
                              add r10.xyz, -r6, c4.y
                              rcp r2.y, r9.x
                              mad r2.y, r10.x, -r2.y, c4.y
                              max r3.w, r2.y, c3.x
                              cmp r2.y, -r9.x, r9.x, r3.w
                              add r11.xyz, r8, r8
                              mad r12.xyz, r8, -c4.z, -c4.y
                              mad r13.xyz, r8, -c4_abs.z, c4_abs.y
                              rcp r3.w, r13.x
                              mul r3.w, r3.w, r6.x
                              min r4.y, r3.w, c4.y
                              cmp r3.w, r12.x, r11.x, r4.y
                              cmp r2.y, r8.x, r3.w, r2.y
                              add r2.y, r2.y, c3.z
                              cmp r14.x, r2.y, c4.y, c4.x  // ::result<0>
                              rcp r2.y, r9.y
                              mad r2.y, r10.y, -r2.y, c4.y
                              max r3.w, r2.y, c3.x
                              cmp r2.y, -r9.y, r9.y, r3.w
                              rcp r3.w, r13.y
                              mul r3.w, r3.w, r6.y
                              min r4.y, r3.w, c4.y
                              cmp r3.w, r12.y, r11.y, r4.y
                              cmp r2.y, r8.y, r3.w, r2.y
                              add r2.y, r2.y, c3.z
                              cmp r14.y, r2.y, c4.y, c4.x  // ::result<1>
                              rcp r2.y, r9.z
                              mad r2.y, r10.z, -r2.y, c4.y
                              max r3.w, r2.y, c3.x
                              cmp r2.y, -r9.z, r9.z, r3.w
                              rcp r3.w, r13.z
                              mul r3.w, r3.w, r6.z
                              min r4.y, r3.w, c4.y
                              cmp r3.w, r12.z, r11.z, r4.y
                              cmp r2.y, r8.z, r3.w, r2.y
                              add r2.y, r2.y, c3.z
                              cmp r14.z, r2.y, c4.y, c4.x  // ::result<2>

#line 390
                              lrp r3.xyz, r1.w, r14, r6  // ::result<0,1,2>
                            else
                              if_eq r4.x, c52.x

#line 396
                                rcp r2.y, r1.w
                                mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 151
                                add r2.y, -r6.y, r6.x
                                cmp r4.yz, r2.y, r6.xyxw, r6.xxyw
                                min r2.y, r6.z, r4.y  // ::fmin<0>
                                max r3.w, r4.z, r6.z  // ::fmax<0>
                                add r4.y, -r2.y, r3.w  // ::delta<0>
                                add r2.y, r2.y, r3.w  // ::maxplusmin<0>

#line 157
                                mul r8.xyz, r2.y, c3.y  // ::hsl<2,2,2>

#line 170
                                add r3.w, r2.y, -c4.y
                                rcp r4.z, r2.y
                                mul r4.z, r4.z, r4.y  // ::hsl<1>
                                add r7.w, -r2.y, -c4.z
                                rcp r7.w, r7.w
                                mul r7.w, r4.y, r7.w  // ::hsl<1>
                                cmp r4.z, r3.w, r7.w, r4.z  // ::hsl<1>

#line 186
                                cmp r4.y, -r4_abs.y, c3.x, r4.z  // ::hsl<1>

#line 195
                                if_eq r4.y, c3.x

#line 198
                                else

#line 178
                                  add r9.xyz, -r7.xzyw, r7.zyxw

#line 152
                                  cmp r10.xy, r9.z, r7.yxzw, r7
                                  min r4.z, r7.z, r10.x  // ::fmin<0>
                                  max r8.w, r10.y, r7.z  // ::fmax<0>
                                  add r4.z, -r4.z, r8.w  // ::delta<0>

#line 177
                                  add r10.xy, r7, -r8.w
                                  rcp r7.w, r4.z

#line 180
                                  mul r8.w, r7.w, r9.y  // ::hsl<0>
                                  mad r9.xy, r9.xzzw, r7.w, c45  // ::hsl<0,0>
                                  cmp r7.w, -r10_abs.y, r9.x, r9.y  // ::hsl<0>
                                  cmp r7.w, -r10_abs.x, r8.w, r7.w  // ::hsl<0>
                                  mul r8.w, r7.w, c45.z  // ::hsl<0>

#line 185
                                  mad r9.x, r7.w, c45.z, c45.w  // ::hsl<0>
                                  cmp r7.w, r7.w, r8.w, r9.x  // ::hsl<0>
                                  cmp r4.z, -r4_abs.z, c3.x, r7.w  // ::hsl<0>

#line 203
                                  add r7.w, r4.y, c4.y
                                  mul r7.w, r7.w, r8.z  // ::temp2<0>
                                  mad r8.w, r2.y, c3.y, r4.y
                                  mad r4.y, r4.y, -r8.z, r8.w  // ::temp2<0>
                                  cmp r3.w, r3.w, r4.y, r7.w  // ::temp2<0>
                                  add r2.y, r2.y, -r3.w  // ::temp1<0>

#line 127
                                  add r9, r4.z, c46.yzwx  // GetHue::temp3<0,0,0,0>
                                  add r4.y, -r9.x, c4.y
                                  cmp r4.y, r4.y, r9.x, r9.z  // GetHue::temp3<0>
                                  cmp r4.y, r9.x, r4.y, r9.y  // GetHue::temp3<0>

#line 134
                                  add r7.w, -r2.y, r3.w
                                  mul r8.w, r7.w, c47.x
                                  mad r9.x, r8.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                  add r10.xyz, r4.y, c47.yzww
                                  add r4.y, -r4.y, -c47.w
                                  mul r4.y, r4.y, r7.w
                                  mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                  cmp r4.y, r10.z, r2.y, r4.y  // ::rgbComponent<0>
                                  cmp r4.y, r10.y, r4.y, r3.w  // ::rgbComponent<0>
                                  cmp r8.x, r10.x, r4.y, r9.x  // ::rgbComponent<0>

#line 128
                                  add r4.y, -r4.z, c4.y
                                  add r10, r4.z, -c46.xywz  // GetHue::temp3<0,0,0,0>
                                  cmp r4.y, r4.y, r4.z, r10.x  // GetHue::temp3<0>
                                  cmp r4.y, r4.z, r4.y, r9.w  // GetHue::temp3<0>

#line 134
                                  mad r4.z, r8.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                  add r9.xyz, r4.y, c47.yzww
                                  add r4.y, -r4.y, -c47.w
                                  mul r4.y, r4.y, r7.w
                                  mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                  cmp r4.y, r9.z, r2.y, r4.y  // ::rgbComponent<0>
                                  cmp r4.y, r9.y, r4.y, r3.w  // ::rgbComponent<0>
                                  cmp r8.y, r9.x, r4.y, r4.z  // ::rgbComponent<0>

#line 128
                                  add r4.y, -r10.y, c4.y
                                  cmp r4.y, r4.y, r10.y, r10.w  // GetHue::temp3<0>
                                  cmp r4.y, r10.y, r4.y, r10.z  // GetHue::temp3<0>

#line 134
                                  mad r4.z, r8.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                  add r9.xyz, r4.y, c47.yzww
                                  add r4.y, -r4.y, -c47.w
                                  mul r4.y, r4.y, r7.w
                                  mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                  cmp r2.y, r9.z, r2.y, r4.y  // ::rgbComponent<0>
                                  cmp r2.y, r9.y, r2.y, r3.w  // ::rgbComponent<0>
                                  cmp r8.z, r9.x, r2.y, r4.z  // ::rgbComponent<0>

#line 212
                                endif

#line 403
                                lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                              else
                                if_eq r4.x, c52.y

#line 409
                                  rcp r2.y, r1.w
                                  mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 428
                                  max r8.xyz, r6, r7  // ::result<0,1,2>

#line 431
                                  lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                else
                                  if_eq r4.x, c52.z

#line 437
                                    rcp r2.y, r1.w
                                    mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 441
                                    add r8.xyz, r6, r7
                                    add_sat r8.xyz, r8, -c4.y  // ::result<0,1,2>

#line 444
                                    lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                  else
                                    if_eq r4.x, c52.w

#line 450
                                      rcp r2.y, r1.w
                                      mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 454
                                      add r8.xyz, r6, r7  // ::result<0,1,2>

#line 457
                                      lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                    else
                                      if_eq r4.x, c53.x

#line 463
                                        rcp r2.y, r1.w
                                        mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 480
                                        add r8.xyz, -r7, c3.y
                                        add r9.xyz, r7, c3.z
                                        mad r9.xyz, r9, -c4.z, r6  // ::result<0,1,2>
                                        mad r10.xyz, r7, -c4.z, r6
                                        add r10.xyz, r10, -c4.y  // ::result<0,1,2>
                                        cmp r8.xyz, r8, r10, r9  // ::result<0,1,2>

#line 487
                                        lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                      else
                                        if_eq r4.x, c53.y

#line 493
                                          rcp r2.y, r1.w
                                          mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 178
                                          add r8.xyz, -r6.xzyw, r6.zyxw

#line 152
                                          cmp r4.yz, r8.z, r6.xyxw, r6.xxyw
                                          min r2.y, r6.z, r4.y  // ::fmin<0>
                                          max r3.w, r4.z, r6.z  // ::fmax<0>
                                          add r4.y, -r2.y, r3.w  // ::delta<0>
                                          add r2.y, r2.y, r3.w  // ::maxplusmin<0>

#line 170
                                          add r4.z, r2.y, -c4.y
                                          rcp r7.w, r2.y
                                          mul r7.w, r4.y, r7.w  // ::hsl<1>
                                          add r2.y, -r2.y, -c4.z
                                          rcp r2.y, r2.y
                                          mul r2.y, r2.y, r4.y  // ::hsl<1>
                                          cmp r9.x, r4.z, r2.y, r7.w  // ::hsl<1>

#line 177
                                          add r10.xy, -r3.w, r6
                                          rcp r2.y, r4.y

#line 180
                                          mul r3.w, r2.y, r8.y  // ::hsl<0>
                                          mad r8.xy, r8.xzzw, r2.y, c45  // ::hsl<0,0>
                                          cmp r2.y, -r10_abs.y, r8.x, r8.y  // ::hsl<0>
                                          cmp r2.y, -r10_abs.x, r3.w, r2.y  // ::hsl<0>
                                          mul r3.w, r2.y, c45.z  // ::hsl<0>

#line 185
                                          mad r4.z, r2.y, c45.z, c45.w  // ::hsl<0>
                                          cmp r9.yzw, r2.y, r3.w, r4.z  // ::hsl<0,0,0>
                                          cmp r8, -r4_abs.y, c3.x, r9  // ::hsl<1,0,0,0>

#line 151
                                          add r2.y, -r7.y, r7.x
                                          cmp r4.yz, r2.y, r7.xyxw, r7.xxyw
                                          min r2.y, r7.z, r4.y  // ::fmin<0>
                                          max r3.w, r4.z, r7.z  // ::fmax<0>
                                          add r2.y, r2.y, r3.w  // ::maxplusmin<0>

#line 157
                                          mul r9.xyz, r2.y, c3.y  // ::hsl<2,2,2>

#line 195
                                          if_eq r8.x, c3.x

#line 198
                                          else

#line 202
                                            add r3.w, r2.y, -c4.y

#line 129
                                            add r10, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                                            mul r4.y, r9.z, r10.x  // ::temp2<0>
                                            mad r4.z, r2.y, c3.y, r8.x
                                            mad r4.z, r8.x, -r9.z, r4.z  // ::temp2<0>
                                            cmp r3.w, r3.w, r4.z, r4.y  // ::temp2<0>
                                            add r2.y, r2.y, -r3.w  // ::temp1<0>

#line 128
                                            add r4.y, -r10.y, c4.y
                                            cmp r4.y, r4.y, r10.y, r10.w  // GetHue::temp3<0>
                                            cmp r4.y, r10.y, r4.y, r10.z  // GetHue::temp3<0>

#line 134
                                            add r4.z, -r2.y, r3.w
                                            mul r7.w, r4.z, c47.x
                                            mad r8.x, r7.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                            add r10.xyz, r4.y, c47.yzww
                                            add r4.y, -r4.y, -c47.w
                                            mul r4.y, r4.y, r4.z
                                            mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                            cmp r4.y, r10.z, r2.y, r4.y  // ::rgbComponent<0>
                                            cmp r4.y, r10.y, r4.y, r3.w  // ::rgbComponent<0>
                                            cmp r9.x, r10.x, r4.y, r8.x  // ::rgbComponent<0>

#line 128
                                            add r4.y, -r8.w, c4.y
                                            add r10, r8.w, c50  // GetHue::temp3<0,0,0,0>
                                            cmp r4.y, r4.y, r8.w, r10.y  // GetHue::temp3<0>
                                            cmp r4.y, r8.w, r4.y, r10.x  // GetHue::temp3<0>

#line 134
                                            mad r8.x, r7.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                            add r11.xyz, r4.y, c47.yzww
                                            add r4.y, -r4.y, -c47.w
                                            mul r4.y, r4.y, r4.z
                                            mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                            cmp r4.y, r11.z, r2.y, r4.y  // ::rgbComponent<0>
                                            cmp r4.y, r11.y, r4.y, r3.w  // ::rgbComponent<0>
                                            cmp r9.y, r11.x, r4.y, r8.x  // ::rgbComponent<0>

#line 128
                                            add r4.y, -r10.z, c4.y
                                            add r8.x, r8.w, -c46.z  // GetHue::temp3<0>
                                            cmp r4.y, r4.y, r10.z, r8.x  // GetHue::temp3<0>
                                            cmp r4.y, r10.z, r4.y, r10.w  // GetHue::temp3<0>

#line 134
                                            mad r7.w, r7.w, r4.y, r2.y  // ::rgbComponent<0>

#line 137
                                            add r8.xyz, r4.y, c47.yzww
                                            add r4.y, -r4.y, -c47.w
                                            mul r4.y, r4.y, r4.z
                                            mad r4.y, r4.y, c47.x, r2.y  // ::rgbComponent<0>
                                            cmp r2.y, r8.z, r2.y, r4.y  // ::rgbComponent<0>
                                            cmp r2.y, r8.y, r2.y, r3.w  // ::rgbComponent<0>
                                            cmp r9.z, r8.x, r2.y, r7.w  // ::rgbComponent<0>

#line 212
                                          endif

#line 500
                                          lrp r3.xyz, r1.w, r9, r6  // ::result<0,1,2>
                                        else
                                          if_eq r4.x, c53.z

#line 506
                                            rcp r2.y, r1.w
                                            mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 510
                                            mul r8.xyz, r6, r7  // ::result<0,1,2>

#line 513
                                            lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c53.w

#line 519
                                              rcp r2.y, r1.w
                                              mul_sat r7.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 522
                                              add r8.xyz, -r6, c4.y
                                              add r8.xyz, -r7, r8
                                              add r8.xyz, -r8_abs, c4.y  // ::result<0,1,2>

#line 525
                                              lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c49.x
                                                add r2.y, -r1.w, c4.y
                                                add r3.w, -r6.w, c4.y
                                                mad r3.w, r2.y, -r3.w, c4.y  // ::result<3>

#line 533
                                                mul r8.xyz, r1.w, r7
                                                rcp r3.w, r3.w
                                                mul r9.xyz, r6.w, r6
                                                mul r9.xyz, r2.y, r9
                                                mul r9.xyz, r3.w, r9
                                                mad r3.xyz, r8, r3.w, r9  // ::result<0,1,2>
                                              else
                                                add r2.y, r4.x, c49.y

#line 539
                                                rcp r3.w, r1.w
                                                mul_sat r4.xyz, r3.w, r7  // Blend::blendColor<0,1,2>

#line 557
                                                add r8.xyz, -r6, c3.y
                                                add r9.xyz, r6, c3.z
                                                mad r9.xyz, r9, -c4_abs.z, c4_abs.y
                                                add r10.xyz, -r4, c4.y
                                                mad r9.xyz, r9, -r10, c4.y  // ::result<0,1,2>

#line 549
                                                dp2add r3.w, r4.x, r6.x, c3.x  // ::result<0>
                                                cmp r10.x, r8.x, r3.w, r9.x  // ::result<0>

#line 555
                                                dp2add r3.w, r4.y, r6.y, c3.x  // ::result<1>
                                                cmp r10.y, r8.y, r3.w, r9.y  // ::result<1>

#line 561
                                                dp2add r3.w, r4.z, r6.z, c3.x  // ::result<2>
                                                cmp r10.z, r8.z, r3.w, r9.z  // ::result<2>

#line 564
                                                lrp r3.xyz, r1.w, r10, r6  // ::result<0,1,2>
                                                cmp r7.xyz, -r2_abs.y, r4, r7  // Blend::blendColor<0,1,2>
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          mov r4.x, c0.x  // ::BlendMode<0>
          if_eq r4.x, c49.z

#line 570
            rcp r2.y, r1.w
            mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 573
            min r9.xyz, r8, r6
            max r10.xyz, r6, r8
            add r8.xyz, r9, -r10
            add r8.xyz, r8, c4.y  // ::result<0,1,2>

#line 576
            lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
          else
            if_eq r4.x, c49.w

#line 582
              rcp r2.y, r1.w
              mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 599
              add r9.xyz, -r8, c3.y
              add r10.xyz, r8, c3.z
              add r10.xyz, r10, r10
              max r11.xyz, r6, r10  // ::result<0,1,2>
              add r8.xyz, r8, r8
              min r10.xyz, r8, r6  // ::result<0,1,2>
              cmp r8.xyz, r9, r10, r11  // ::result<0,1,2>

#line 606
              lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
            else
              if_eq r4.x, c54.x

#line 612
                rcp r2.y, r1.w
                mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 617
                add r9.xyz, r8, -c4.y
                mul r10.xyz, r6, r6
                add r11.xyz, -r8, c4.y
                rcp r2.y, r11.x
                mul r2.y, r2.y, r10.x
                min r3.w, r2.y, c4.y
                cmp r12.x, r9.x, r8.x, r3.w  // ::result<0>
                rcp r2.y, r11.y
                mul r2.y, r2.y, r10.y
                min r3.w, r2.y, c4.y
                cmp r12.y, r9.y, r8.y, r3.w  // ::result<1>
                rcp r2.y, r11.z
                mul r2.y, r2.y, r10.z
                min r3.w, r2.y, c4.y
                cmp r12.z, r9.z, r8.z, r3.w  // ::result<2>

#line 620
                lrp r3.xyz, r1.w, r12, r6  // ::result<0,1,2>
              else

#line 626
                if_eq r4.x, c54.y

#line 629
                  rcp r2.y, r1.w
                  mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 151
                  add r2.y, -r6.y, r6.x
                  cmp r4.yz, r2.y, r6.xyxw, r6.xxyw
                  min r3.w, r6.z, r4.y  // ::fmin<0>
                  max r7.w, r4.z, r6.z  // ::fmax<0>
                  add r4.y, r3.w, r7.w  // ::maxplusmin<0>

#line 157
                  mul r9.xyz, r4.y, c3.y  // ::hsl<2,2,2>

#line 151
                  add r4.z, -r8.y, r8.x
                  cmp r8.xy, r4.z, r8.yxzw, r8
                  min r4.z, r8.z, r8.x  // ::fmin<0>
                  max r6.w, r8.y, r8.z  // ::fmax<0>
                  add r8.x, -r4.z, r6.w  // ::delta<0>
                  add r4.z, r4.z, r6.w  // ::maxplusmin<0>

#line 170
                  add r6.w, r4.z, -c4.y
                  rcp r8.y, r4.z
                  mul r8.y, r8.y, r8.x  // ::hsl<1>
                  add r4.z, -r4.z, -c4.z
                  rcp r4.z, r4.z
                  mul r4.z, r4.z, r8.x  // ::hsl<1>
                  cmp r4.z, r6.w, r4.z, r8.y  // ::hsl<1>

#line 186
                  cmp r4.z, -r8_abs.x, c3.x, r4.z  // ::hsl<1>

#line 195
                  if_eq r4.z, c3.x

#line 198
                  else

#line 153
                    add r3.w, -r3.w, r7.w  // ::delta<0>

#line 177
                    add r8.xy, r6, -r7.w
                    add r6.w, -r6.z, r6.y
                    rcp r7.w, r3.w
                    mul r6.w, r6.w, r7.w  // ::hsl<0>
                    add r8.z, -r6.x, r6.z
                    mad r8.z, r8.z, r7.w, -c4.z  // ::hsl<0>
                    mad r2.y, r2.y, r7.w, c45.y  // ::hsl<0>
                    cmp r2.y, -r8_abs.y, r8.z, r2.y  // ::hsl<0>
                    cmp r2.y, -r8_abs.x, r6.w, r2.y  // ::hsl<0>
                    mul r6.w, r2.y, c45.z  // ::hsl<0>

#line 185
                    mad r7.w, r2.y, c45.z, c45.w  // ::hsl<0>
                    cmp r2.y, r2.y, r6.w, r7.w  // ::hsl<0>
                    cmp r2.y, -r3_abs.w, c3.x, r2.y  // ::hsl<0>

#line 202
                    add r3.w, r4.y, -c4.y
                    add r6.w, r4.z, c4.y
                    mul r6.w, r6.w, r9.z  // ::temp2<0>
                    mad r7.w, r4.y, c3.y, r4.z
                    mad r4.z, r4.z, -r9.z, r7.w  // ::temp2<0>
                    cmp r3.w, r3.w, r4.z, r6.w  // ::temp2<0>
                    add r4.y, -r3.w, r4.y  // ::temp1<0>

#line 127
                    add r8, r2.y, c46.yzwx  // GetHue::temp3<0,0,0,0>
                    add r4.z, -r8.x, c4.y
                    cmp r4.z, r4.z, r8.x, r8.z  // GetHue::temp3<0>
                    cmp r4.z, r8.x, r4.z, r8.y  // GetHue::temp3<0>

#line 134
                    add r6.w, r3.w, -r4.y
                    mul r7.w, r6.w, c47.x
                    mad r8.x, r7.w, r4.z, r4.y  // ::rgbComponent<0>

#line 137
                    add r10.xyz, r4.z, c47.yzww
                    add r4.z, -r4.z, -c47.w
                    mul r4.z, r4.z, r6.w
                    mad r4.z, r4.z, c47.x, r4.y  // ::rgbComponent<0>
                    cmp r4.z, r10.z, r4.y, r4.z  // ::rgbComponent<0>
                    cmp r4.z, r10.y, r4.z, r3.w  // ::rgbComponent<0>
                    cmp r9.x, r10.x, r4.z, r8.x  // ::rgbComponent<0>

#line 128
                    add r4.z, -r2.y, c4.y
                    add r10, r2.y, -c46.xywz  // GetHue::temp3<0,0,0,0>
                    cmp r4.z, r4.z, r2.y, r10.x  // GetHue::temp3<0>
                    cmp r2.y, r2.y, r4.z, r8.w  // GetHue::temp3<0>

#line 134
                    mad r4.z, r7.w, r2.y, r4.y  // ::rgbComponent<0>

#line 137
                    add r8.xyz, r2.y, c47.yzww
                    add r2.y, -r2.y, -c47.w
                    mul r2.y, r2.y, r6.w
                    mad r2.y, r2.y, c47.x, r4.y  // ::rgbComponent<0>
                    cmp r2.y, r8.z, r4.y, r2.y  // ::rgbComponent<0>
                    cmp r2.y, r8.y, r2.y, r3.w  // ::rgbComponent<0>
                    cmp r9.y, r8.x, r2.y, r4.z  // ::rgbComponent<0>

#line 128
                    add r2.y, -r10.y, c4.y
                    cmp r2.y, r2.y, r10.y, r10.w  // GetHue::temp3<0>
                    cmp r2.y, r10.y, r2.y, r10.z  // GetHue::temp3<0>

#line 134
                    mad r4.z, r7.w, r2.y, r4.y  // ::rgbComponent<0>

#line 137
                    add r8.xyz, r2.y, c47.yzww
                    add r2.y, -r2.y, -c47.w
                    mul r2.y, r2.y, r6.w
                    mad r2.y, r2.y, c47.x, r4.y  // ::rgbComponent<0>
                    cmp r2.y, r8.z, r4.y, r2.y  // ::rgbComponent<0>
                    cmp r2.y, r8.y, r2.y, r3.w  // ::rgbComponent<0>
                    cmp r9.z, r8.x, r2.y, r4.z  // ::rgbComponent<0>

#line 212
                  endif

#line 636
                  lrp r3.xyz, r1.w, r9, r6  // ::result<0,1,2>
                else
                  if_eq r4.x, c54.z

#line 642
                    rcp r2.y, r1.w
                    mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 646
                    add r9.xyz, -r6, c4.y
                    add r8.xyz, -r8, c4.y
                    mad r8.xyz, r9, -r8, c4.y  // ::result<0,1,2>

#line 649
                    lrp r3.xyz, r1.w, r8, r6  // ::result<0,1,2>
                  else
                    if_eq r4.x, c54.w

#line 655
                      rcp r2.y, r1.w
                      mul_sat r8.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 660
                      add r9.xyz, r8, c3.z
                      add r10.xyz, r6, r6
                      mul r11.xyz, r6, r6
                      mad r12.xyz, r8, -c4_abs.z, c4_abs.y
                      mul r11.xyz, r11, r12
                      mad r11.xyz, r10, r8, r11
                      rsq r2.y, r6.x
                      rcp r2.y, r2.y
                      mad r12.xyz, r8, -c4.z, -c4.y
                      add r8.xyz, -r8, c4.y
                      mul r8.xyz, r8, r10
                      mad r2.y, r2.y, r12.x, r8.x
                      cmp r10.x, r9.x, r2.y, r11.x  // ::result<0>
                      rsq r2.y, r6.y
                      rcp r2.y, r2.y
                      mad r2.y, r2.y, r12.y, r8.y
                      cmp r10.y, r9.y, r2.y, r11.y  // ::result<1>
                      rsq r2.y, r6.z
                      rcp r2.y, r2.y
                      mad r2.y, r2.y, r12.z, r8.z
                      cmp r10.z, r9.z, r2.y, r11.z  // ::result<2>

#line 663
                      lrp r3.xyz, r1.w, r10, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c48.x

#line 669
                        rcp r2.y, r1.w
                        mul_sat r4.xyz, r2.y, r7  // Blend::blendColor<0,1,2>

#line 674
                        add r7.xyz, r4, c3.z
                        add r4.xyz, r4, r4
                        add r8.xyz, -r6, c4.y
                        rcp r2.y, r4.x
                        mad r2.y, r8.x, -r2.y, c4.y
                        max r3.w, r2.y, c3.x
                        cmp r2.y, -r4.x, r4.x, r3.w
                        add r9.xyz, r7, r7
                        mad r10.xyz, r7, -c4.z, -c4.y
                        mad r11.xyz, r7, -c4_abs.z, c4_abs.y
                        rcp r3.w, r11.x
                        mul r3.w, r3.w, r6.x
                        min r4.x, r3.w, c4.y
                        cmp r3.w, r10.x, r9.x, r4.x
                        cmp r12.x, r7.x, r3.w, r2.y  // ::result<0>
                        rcp r2.y, r4.y
                        mad r2.y, r8.y, -r2.y, c4.y
                        max r3.w, r2.y, c3.x
                        cmp r2.y, -r4.y, r4.y, r3.w
                        rcp r3.w, r11.y
                        mul r3.w, r3.w, r6.y
                        min r4.x, r3.w, c4.y
                        cmp r3.w, r10.y, r9.y, r4.x
                        cmp r12.y, r7.y, r3.w, r2.y  // ::result<1>
                        rcp r2.y, r4.z
                        mad r2.y, r8.z, -r2.y, c4.y
                        max r3.w, r2.y, c3.x
                        cmp r2.y, -r4.z, r4.z, r3.w
                        rcp r3.w, r11.z
                        mul r3.w, r3.w, r6.z
                        min r4.x, r3.w, c4.y
                        cmp r3.w, r10.z, r9.z, r4.x
                        cmp r12.z, r7.z, r3.w, r2.y  // ::result<2>

#line 677
                        lrp r3.xyz, r1.w, r12, r6  // ::result<0,1,2>
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif

#line 918
        else
          mov r4.yz, c4
          if_eq c8.x, r4.y

#line 831
            mul_sat r1.z, r1.z, c48.y  // ::nd<0>

#line 686
            add r1.w, r4.y, -c7.x

#line 699
            if_eq c41.x, r2.x

#line 706
              mov r6, c3.x  // ::color1<0,1,2,3>
              mov r7.xyz, c3.x  // ::color2<0,1,2>
              mov r8.x, c3.x  // ::offset1<0>
              mov r8.y, c4.y  // ::offset2<0>
            else
              if_eq c41.x, r4.y

#line 714
                mov r6, c9  // ::color1<0,1,2,3>
                mov r7.xyz, c9  // ::color2<0,1,2>
                mov r8.x, c3.x  // ::offset1<0>
                mov r8.y, c4.y  // ::offset2<0>
              else
                if_eq c41.x, -r4.z

#line 722
                  mov r6, c9  // ::color1<0,1,2,3>
                  mov r7.xyz, c11  // ::color2<0,1,2>
                  mov r8.x, c3.x  // ::offset1<0>
                  mov r8.y, c4.y  // ::offset2<0>
                else

#line 725
                  mad r2.y, r1.z, r1.w, -c10.x
                  mad r3.w, r1.z, r1.w, -c12.x
                  cmp r4.x, r3.w, c4.x, c4.y
                  cmp r2.y, r2.y, r4.x, c3.x
                  if_ne r2.y, -r2.y

#line 729
                    mov r6, c9  // ::color1<0,1,2,3>
                    mov r7.xyz, c11  // ::color2<0,1,2>
                    mov r8.x, c10.x  // ::offset1<0>
                    mov r8.y, c12.x  // ::offset2<0>
                  else
                    mad r2.y, r1.z, r1.w, -c14.x
                    cmp r4.x, r2.y, c4.x, c4.y
                    cmp r3.w, r3.w, r4.x, c3.x
                    if_ne r3.w, -r3.w

#line 734
                      mov r6, c11  // ::color1<0,1,2,3>
                      mov r7.xyz, c13  // ::color2<0,1,2>
                      mov r8.x, c12.x  // ::offset1<0>
                      mov r8.y, c14.x  // ::offset2<0>
                    else
                      mad r3.w, r1.z, r1.w, -c16.x
                      cmp r4.x, r3.w, c4.x, c4.y
                      cmp r2.y, r2.y, r4.x, c3.x
                      if_ne r2.y, -r2.y

#line 739
                        mov r6, c13  // ::color1<0,1,2,3>
                        mov r7.xyz, c15  // ::color2<0,1,2>
                        mov r8.x, c14.x  // ::offset1<0>
                        mov r8.y, c16.x  // ::offset2<0>
                      else
                        mad r2.y, r1.z, r1.w, -c18.x
                        cmp r4.x, r2.y, c4.x, c4.y
                        cmp r3.w, r3.w, r4.x, c3.x
                        if_ne r3.w, -r3.w

#line 744
                          mov r6, c15  // ::color1<0,1,2,3>
                          mov r7.xyz, c17  // ::color2<0,1,2>
                          mov r8.x, c16.x  // ::offset1<0>
                          mov r8.y, c18.x  // ::offset2<0>
                        else
                          mad r3.w, r1.z, r1.w, -c20.x
                          cmp r4.x, r3.w, c4.x, c4.y
                          cmp r2.y, r2.y, r4.x, c3.x
                          if_ne r2.y, -r2.y

#line 749
                            mov r6, c17  // ::color1<0,1,2,3>
                            mov r7.xyz, c19  // ::color2<0,1,2>
                            mov r8.x, c18.x  // ::offset1<0>
                            mov r8.y, c20.x  // ::offset2<0>
                          else
                            mad r2.y, r1.z, r1.w, -c22.x
                            cmp r4.x, r2.y, c4.x, c4.y
                            cmp r3.w, r3.w, r4.x, c3.x
                            if_ne r3.w, -r3.w

#line 754
                              mov r6, c19  // ::color1<0,1,2,3>
                              mov r7.xyz, c21  // ::color2<0,1,2>
                              mov r8.x, c20.x  // ::offset1<0>
                              mov r8.y, c22.x  // ::offset2<0>
                            else
                              mad r3.w, r1.z, r1.w, -c24.x
                              cmp r4.x, r3.w, c4.x, c4.y
                              cmp r2.y, r2.y, r4.x, c3.x
                              if_ne r2.y, -r2.y

#line 759
                                mov r6, c21  // ::color1<0,1,2,3>
                                mov r7.xyz, c23  // ::color2<0,1,2>
                                mov r8.x, c22.x  // ::offset1<0>
                                mov r8.y, c24.x  // ::offset2<0>
                              else
                                mad r2.y, r1.z, r1.w, -c26.x

#line 765
                                mad r4.x, r1.z, r1.w, -c28.x

#line 770
                                mad r7.w, r1.z, r1.w, -c30.x

#line 775
                                mad r8.z, r1.z, r1.w, -c32.x

#line 780
                                mad r8.w, r1.z, r1.w, -c34.x

#line 785
                                mad r9.x, r1.z, r1.w, -c36.x

#line 790
                                mad r9.y, r1.z, r1.w, -c38.x

#line 799
                                cmp r9.y, r9.y, -c4.x, -c4.y
                                cmp r9.y, r9.x, r9.y, c3.x
                                mov r10, c37  // ::Color15<0,1,2,3>
                                cmp r11, r9.y, r10, c35  // ::color1<0,1,2,3>
                                cmp r10.xyz, r9.y, c39, r10  // ::color2<0,1,2>
                                mov r12.y, c40.x
                                mov r12.z, c36.x
                                mov r12.xw, c38.x
                                cmp r9.yz, r9.y, r12.xxyw, r12.xzww  // ::offset1<0>, ::offset2<0>
                                cmp r9.x, r9.x, -c4.x, -c4.y
                                cmp r9.x, r8.w, r9.x, c3.x
                                cmp r11, r9.x, r11, c33  // ::color1<0,1,2,3>
                                cmp r10.xyz, r9.x, r10, c35  // ::color2<0,1,2>
                                mov r12.xw, c34.x
                                mov r12.y, c36.x
                                cmp r9.xy, r9.x, r9.yzzw, r12  // ::offset1<0>, ::offset2<0>
                                cmp r8.w, r8.w, -c4.x, -c4.y
                                cmp r8.w, r8.z, r8.w, c3.x
                                cmp r11, r8.w, r11, c31  // ::color1<0,1,2,3>
                                cmp r10.xyz, r8.w, r10, c33  // ::color2<0,1,2>
                                mov r12.yz, c32.x
                                cmp r9.xy, r8.w, r9, r12.zwzw  // ::offset1<0>, ::offset2<0>
                                cmp r8.z, r8.z, -c4.x, -c4.y
                                cmp r8.z, r7.w, r8.z, c3.x
                                cmp r11, r8.z, r11, c29  // ::color1<0,1,2,3>
                                cmp r10.xyz, r8.z, r10, c31  // ::color2<0,1,2>
                                mov r12.xw, c30.x
                                cmp r8.zw, r8.z, r9.xyxy, r12.xyxy  // ::offset1<0>, ::offset2<0>
                                cmp r7.w, r7.w, -c4.x, -c4.y
                                cmp r7.w, r4.x, r7.w, c3.x
                                cmp r9, r7.w, r11, c27  // ::color1<0,1,2,3>
                                cmp r10.xyz, r7.w, r10, c29  // ::color2<0,1,2>
                                mov r12.z, c28.x
                                cmp r8.zw, r7.w, r8, r12  // ::offset1<0>, ::offset2<0>
                                cmp r4.x, r4.x, -c4.x, -c4.y
                                cmp r4.x, r2.y, r4.x, c3.x
                                cmp r9, r4.x, r9, c25  // ::color1<0,1,2,3>
                                cmp r10.xyz, r4.x, r10, c27  // ::color2<0,1,2>
                                mov r11.xw, c26.x
                                mov r11.y, c28.x
                                cmp r8.zw, r4.x, r8, r11.xyxy  // ::offset1<0>, ::offset2<0>
                                cmp r2.y, r2.y, -c4.x, -c4.y
                                cmp r2.y, r3.w, r2.y, c3.x
                                cmp r6, r2.y, r9, c23  // ::color1<0,1,2,3>
                                cmp r7.xyz, r2.y, r10, c25  // ::color2<0,1,2>
                                mov r11.z, c24.x
                                cmp r8.xy, r2.y, r8.zwzw, r11.zwzw  // ::offset1<0>, ::offset2<0>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            add r2.y, -r8.x, r8.y  // ::q<0>
            mad r1.z, r1.z, r1.w, -r8.x
            rcp r1.w, r2.y
            mul r1.z, r1.w, r1.z
            cmp r1.z, -r2_abs.y, c3.x, r1.z  // ::p<0>

#line 221
            cmp r8.xyz, -r7_abs, c6.z, r7  // Blend::blendColor<0,1,2>

#line 229
            if_eq c0.x, r2.x

#line 232
              rcp r1.w, r1.z
              mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 235
              add r7.xyz, r6, r8
              mul r7.xyz, r1.z, r7

#line 238
              add r1.w, -r1.z, c4.y
              mul r7.xyz, r7, c3.y
              mad r3.xyz, r1.w, r6, r7  // ::result<0,1,2>
            else
              if_eq c0.x, r4.y

#line 244
                rcp r1.w, r1.z
                mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 248
                add r7.xyz, -r6, c4.y
                rcp r9.x, r8.x
                rcp r9.y, r8.y
                rcp r9.z, r8.z
                mad_sat r7.xyz, r7, -r9, c4.y  // ::result<0,1,2>

#line 251
                lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
              else
                if_eq c0.x, -r4.z

#line 257
                  rcp r1.w, r1.z
                  mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 263
                  add r7.xyz, r8, -c4.y
                  add r9.xyz, -r8, c4.y
                  rcp r1.w, r9.x
                  mul r1.w, r1.w, r6.x
                  min r2.y, r1.w, c4.y
                  cmp r10.x, r7.x, r8.x, r2.y  // ::result<0>
                  rcp r1.w, r9.y
                  mul r1.w, r1.w, r6.y
                  min r2.y, r1.w, c4.y
                  cmp r10.y, r7.y, r8.y, r2.y  // ::result<1>
                  rcp r1.w, r9.z
                  mul r1.w, r1.w, r6.z
                  min r2.y, r1.w, c4.y
                  cmp r10.z, r7.z, r8.z, r2.y  // ::result<2>

#line 266
                  lrp r3.xyz, r1.z, r10, r6  // ::result<0,1,2>
                else
                  if_eq c0.x, r4.w

#line 272
                    rcp r1.w, r1.z
                    mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 178
                    add r7.xyz, -r8.xzyw, r8.zyxw

#line 152
                    cmp r9.xy, r7.z, r8.yxzw, r8
                    min r1.w, r8.z, r9.x  // ::fmin<0>
                    max r2.y, r9.y, r8.z  // ::fmax<0>
                    add r3.w, -r1.w, r2.y  // ::delta<0>
                    add r1.w, r1.w, r2.y  // ::maxplusmin<0>

#line 170
                    add r4.x, r1.w, -c4.y
                    rcp r7.w, r1.w
                    mul r7.w, r3.w, r7.w  // ::hsl<1>
                    add r1.w, -r1.w, -c4.z
                    rcp r1.w, r1.w
                    mul r1.w, r1.w, r3.w  // ::hsl<1>
                    cmp r9.x, r4.x, r1.w, r7.w  // ::hsl<1>

#line 177
                    add r10.xy, -r2.y, r8
                    rcp r1.w, r3.w

#line 180
                    mul r2.y, r1.w, r7.y  // ::hsl<0>
                    mad r7.xy, r7.xzzw, r1.w, c45  // ::hsl<0,0>
                    cmp r1.w, -r10_abs.y, r7.x, r7.y  // ::hsl<0>
                    cmp r1.w, -r10_abs.x, r2.y, r1.w  // ::hsl<0>
                    mul r2.y, r1.w, c45.z  // ::hsl<0>

#line 185
                    mad r4.x, r1.w, c45.z, c45.w  // ::hsl<0>
                    cmp r9.yzw, r1.w, r2.y, r4.x  // ::hsl<0,0,0>
                    cmp r7, -r3_abs.w, c3.x, r9  // ::hsl<1,0,0,0>

#line 151
                    add r1.w, -r6.y, r6.x
                    cmp r9.xy, r1.w, r6.yxzw, r6
                    min r1.w, r6.z, r9.x  // ::fmin<0>
                    max r2.y, r9.y, r6.z  // ::fmax<0>
                    add r1.w, r1.w, r2.y  // ::maxplusmin<0>

#line 157
                    mul r9.xyz, r1.w, c3.y  // ::hsl<2,2,2>

#line 195
                    if_eq r7.x, c3.x

#line 198
                    else

#line 202
                      add r2.y, r1.w, -c4.y

#line 129
                      add r10, r7, c46  // GetHue::temp3<0,0,0>

#line 203
                      mul r3.w, r9.z, r10.x  // ::temp2<0>
                      mad r4.x, r1.w, c3.y, r7.x
                      mad r4.x, r7.x, -r9.z, r4.x  // ::temp2<0>
                      cmp r2.y, r2.y, r4.x, r3.w  // ::temp2<0>
                      add r1.w, r1.w, -r2.y  // ::temp1<0>

#line 128
                      add r3.w, -r10.y, c4.y
                      cmp r3.w, r3.w, r10.y, r10.w  // GetHue::temp3<0>
                      cmp r3.w, r10.y, r3.w, r10.z  // GetHue::temp3<0>

#line 134
                      add r4.x, -r1.w, r2.y
                      mul r7.x, r4.x, c47.x
                      mad r7.y, r7.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                      add r10.xyz, r3.w, c47.yzww
                      add r3.w, -r3.w, -c47.w
                      mul r3.w, r3.w, r4.x
                      mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                      cmp r3.w, r10.z, r1.w, r3.w  // ::rgbComponent<0>
                      cmp r3.w, r10.y, r3.w, r2.y  // ::rgbComponent<0>
                      cmp r9.x, r10.x, r3.w, r7.y  // ::rgbComponent<0>

#line 128
                      add r3.w, -r7.w, c4.y
                      add r10, r7.w, c50  // GetHue::temp3<0,0,0,0>
                      cmp r3.w, r3.w, r7.w, r10.y  // GetHue::temp3<0>
                      cmp r3.w, r7.w, r3.w, r10.x  // GetHue::temp3<0>

#line 134
                      mad r7.y, r7.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                      add r11.xyz, r3.w, c47.yzww
                      add r3.w, -r3.w, -c47.w
                      mul r3.w, r3.w, r4.x
                      mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                      cmp r3.w, r11.z, r1.w, r3.w  // ::rgbComponent<0>
                      cmp r3.w, r11.y, r3.w, r2.y  // ::rgbComponent<0>
                      cmp r9.y, r11.x, r3.w, r7.y  // ::rgbComponent<0>

#line 128
                      add r3.w, -r10.z, c4.y
                      add r7.y, r7.w, -c46.z  // GetHue::temp3<0>
                      cmp r3.w, r3.w, r10.z, r7.y  // GetHue::temp3<0>
                      cmp r3.w, r10.z, r3.w, r10.w  // GetHue::temp3<0>

#line 134
                      mad r7.x, r7.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                      add r7.yzw, r3.w, c47
                      add r3.w, -r3.w, -c47.w
                      mul r3.w, r3.w, r4.x
                      mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                      cmp r1.w, r7.w, r1.w, r3.w  // ::rgbComponent<0>
                      cmp r1.w, r7.z, r1.w, r2.y  // ::rgbComponent<0>
                      cmp r9.z, r7.y, r1.w, r7.x  // ::rgbComponent<0>

#line 212
                    endif

#line 279
                    lrp r3.xyz, r1.z, r9, r6  // ::result<0,1,2>
                  else
                    mov r4.x, c0.x  // ::BlendMode<0>
                    if_eq r4.x, c45.y

#line 285
                      rcp r1.w, r1.z
                      mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 303
                      min r7.xyz, r6, r8  // ::result<0,1,2>

#line 306
                      lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c51.x

#line 312
                        rcp r1.w, r1.z
                        mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 316
                        add r7.xyz, r6, -r8

#line 319
                        lrp r3.xyz, r1.z, r7_abs, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c47.x

#line 325
                          rcp r1.w, r1.z
                          mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 329
                          add r7.xyz, r6, c3.z
                          add r7.xyz, r7, r7
                          add r9.xyz, r8, c3.z
                          mad r7.xyz, r7, -r9, c3.y  // ::result<0,1,2>

#line 332
                          lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c51.y

#line 338
                            rcp r1.w, r1.z
                            mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 343
                            add r7.xyz, r6, -c4.y
                            mul r9.xyz, r8, r8
                            add r10.xyz, -r6, c4.y
                            rcp r1.w, r10.x
                            mul r1.w, r1.w, r9.x
                            min r2.y, r1.w, c4.y
                            cmp r11.x, -r7_abs.x, r6.x, r2.y  // ::result<0>
                            rcp r1.w, r10.y
                            mul r1.w, r1.w, r9.y
                            min r2.y, r1.w, c4.y
                            cmp r11.y, -r7_abs.y, r6.y, r2.y  // ::result<1>
                            rcp r1.w, r10.z
                            mul r1.w, r1.w, r9.z
                            min r2.y, r1.w, c4.y
                            cmp r11.z, -r7_abs.z, r6.z, r2.y  // ::result<2>

#line 346
                            lrp r3.xyz, r1.z, r11, r6  // ::result<0,1,2>
                          else
                            if_eq r4.x, c51.z

#line 352
                              rcp r1.w, r1.z
                              mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 369
                              add r7.xyz, -r8, c3.y
                              add r9.xyz, -r6, c4.y
                              add r10.xyz, r8, c3.z
                              mad r10.xyz, r10, -c4_abs.z, c4_abs.y
                              mad r9.xyz, r9, -r10, c4.y  // ::result<0,1,2>

#line 361
                              dp2add r1.w, r6.x, r8.x, c3.x  // ::result<0>
                              cmp r10.x, r7.x, r1.w, r9.x  // ::result<0>

#line 367
                              dp2add r1.w, r6.y, r8.y, c3.x  // ::result<1>
                              cmp r10.y, r7.y, r1.w, r9.y  // ::result<1>

#line 373
                              dp2add r1.w, r6.z, r8.z, c3.x  // ::result<2>
                              cmp r10.z, r7.z, r1.w, r9.z  // ::result<2>

#line 376
                              lrp r3.xyz, r1.z, r10, r6  // ::result<0,1,2>
                            else
                              if_eq r4.x, c51.w

#line 382
                                rcp r1.w, r1.z
                                mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 387
                                add r7.xyz, r8, c3.z
                                add r9.xyz, r8, r8
                                add r10.xyz, -r6, c4.y
                                rcp r1.w, r9.x
                                mad r1.w, r10.x, -r1.w, c4.y
                                max r2.y, r1.w, c3.x
                                cmp r1.w, -r9.x, r9.x, r2.y
                                add r11.xyz, r7, r7
                                mad r12.xyz, r7, -c4.z, -c4.y
                                mad r13.xyz, r7, -c4_abs.z, c4_abs.y
                                rcp r2.y, r13.x
                                mul r2.y, r2.y, r6.x
                                min r3.w, r2.y, c4.y
                                cmp r2.y, r12.x, r11.x, r3.w
                                cmp r1.w, r7.x, r2.y, r1.w
                                add r1.w, r1.w, c3.z
                                cmp r14.x, r1.w, c4.y, c4.x  // ::result<0>
                                rcp r1.w, r9.y
                                mad r1.w, r10.y, -r1.w, c4.y
                                max r2.y, r1.w, c3.x
                                cmp r1.w, -r9.y, r9.y, r2.y
                                rcp r2.y, r13.y
                                mul r2.y, r2.y, r6.y
                                min r3.w, r2.y, c4.y
                                cmp r2.y, r12.y, r11.y, r3.w
                                cmp r1.w, r7.y, r2.y, r1.w
                                add r1.w, r1.w, c3.z
                                cmp r14.y, r1.w, c4.y, c4.x  // ::result<1>
                                rcp r1.w, r9.z
                                mad r1.w, r10.z, -r1.w, c4.y
                                max r2.y, r1.w, c3.x
                                cmp r1.w, -r9.z, r9.z, r2.y
                                rcp r2.y, r13.z
                                mul r2.y, r2.y, r6.z
                                min r3.w, r2.y, c4.y
                                cmp r2.y, r12.z, r11.z, r3.w
                                cmp r1.w, r7.z, r2.y, r1.w
                                add r1.w, r1.w, c3.z
                                cmp r14.z, r1.w, c4.y, c4.x  // ::result<2>

#line 390
                                lrp r3.xyz, r1.z, r14, r6  // ::result<0,1,2>
                              else
                                if_eq r4.x, c52.x

#line 396
                                  rcp r1.w, r1.z
                                  mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 151
                                  add r1.w, -r6.y, r6.x
                                  cmp r7.xy, r1.w, r6.yxzw, r6
                                  min r1.w, r6.z, r7.x  // ::fmin<0>
                                  max r2.y, r7.y, r6.z  // ::fmax<0>
                                  add r3.w, -r1.w, r2.y  // ::delta<0>
                                  add r1.w, r1.w, r2.y  // ::maxplusmin<0>

#line 157
                                  mul r7.xyz, r1.w, c3.y  // ::hsl<2,2,2>

#line 170
                                  add r2.y, r1.w, -c4.y
                                  rcp r7.w, r1.w
                                  mul r7.w, r3.w, r7.w  // ::hsl<1>
                                  add r8.w, -r1.w, -c4.z
                                  rcp r8.w, r8.w
                                  mul r8.w, r3.w, r8.w  // ::hsl<1>
                                  cmp r7.w, r2.y, r8.w, r7.w  // ::hsl<1>

#line 186
                                  cmp r3.w, -r3_abs.w, c3.x, r7.w  // ::hsl<1>

#line 195
                                  if_eq r3.w, c3.x

#line 198
                                  else

#line 178
                                    add r9.xyz, -r8.xzyw, r8.zyxw

#line 152
                                    cmp r10.xy, r9.z, r8.yxzw, r8
                                    min r7.w, r8.z, r10.x  // ::fmin<0>
                                    max r9.w, r10.y, r8.z  // ::fmax<0>
                                    add r7.w, -r7.w, r9.w  // ::delta<0>

#line 177
                                    add r10.xy, r8, -r9.w
                                    rcp r8.w, r7.w

#line 180
                                    mul r9.y, r8.w, r9.y  // ::hsl<0>
                                    mad r9.xz, r9, r8.w, c45.xyyw  // ::hsl<0,0>
                                    cmp r8.w, -r10_abs.y, r9.x, r9.z  // ::hsl<0>
                                    cmp r8.w, -r10_abs.x, r9.y, r8.w  // ::hsl<0>
                                    mul r9.x, r8.w, c45.z  // ::hsl<0>

#line 185
                                    mad r9.y, r8.w, c45.z, c45.w  // ::hsl<0>
                                    cmp r8.w, r8.w, r9.x, r9.y  // ::hsl<0>
                                    cmp r7.w, -r7_abs.w, c3.x, r8.w  // ::hsl<0>

#line 203
                                    add r8.w, r3.w, c4.y
                                    mul r8.w, r7.z, r8.w  // ::temp2<0>
                                    mad r9.x, r1.w, c3.y, r3.w
                                    mad r3.w, r3.w, -r7.z, r9.x  // ::temp2<0>
                                    cmp r2.y, r2.y, r3.w, r8.w  // ::temp2<0>
                                    add r1.w, r1.w, -r2.y  // ::temp1<0>

#line 127
                                    add r9, r7.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                                    add r3.w, -r9.x, c4.y
                                    cmp r3.w, r3.w, r9.x, r9.z  // GetHue::temp3<0>
                                    cmp r3.w, r9.x, r3.w, r9.y  // GetHue::temp3<0>

#line 134
                                    add r8.w, -r1.w, r2.y
                                    mul r9.x, r8.w, c47.x
                                    mad r9.y, r9.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                    add r10.xyz, r3.w, c47.yzww
                                    add r3.w, -r3.w, -c47.w
                                    mul r3.w, r3.w, r8.w
                                    mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                    cmp r3.w, r10.z, r1.w, r3.w  // ::rgbComponent<0>
                                    cmp r3.w, r10.y, r3.w, r2.y  // ::rgbComponent<0>
                                    cmp r7.x, r10.x, r3.w, r9.y  // ::rgbComponent<0>

#line 128
                                    add r3.w, -r7.w, c4.y
                                    add r10, r7.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                                    cmp r3.w, r3.w, r7.w, r10.x  // GetHue::temp3<0>
                                    cmp r3.w, r7.w, r3.w, r9.w  // GetHue::temp3<0>

#line 134
                                    mad r7.w, r9.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                    add r9.yzw, r3.w, c47
                                    add r3.w, -r3.w, -c47.w
                                    mul r3.w, r3.w, r8.w
                                    mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                    cmp r3.w, r9.w, r1.w, r3.w  // ::rgbComponent<0>
                                    cmp r3.w, r9.z, r3.w, r2.y  // ::rgbComponent<0>
                                    cmp r7.y, r9.y, r3.w, r7.w  // ::rgbComponent<0>

#line 128
                                    add r3.w, -r10.y, c4.y
                                    cmp r3.w, r3.w, r10.y, r10.w  // GetHue::temp3<0>
                                    cmp r3.w, r10.y, r3.w, r10.z  // GetHue::temp3<0>

#line 134
                                    mad r7.w, r9.x, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                    add r9.xyz, r3.w, c47.yzww
                                    add r3.w, -r3.w, -c47.w
                                    mul r3.w, r3.w, r8.w
                                    mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                    cmp r1.w, r9.z, r1.w, r3.w  // ::rgbComponent<0>
                                    cmp r1.w, r9.y, r1.w, r2.y  // ::rgbComponent<0>
                                    cmp r7.z, r9.x, r1.w, r7.w  // ::rgbComponent<0>

#line 212
                                  endif

#line 403
                                  lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                else
                                  if_eq r4.x, c52.y

#line 409
                                    rcp r1.w, r1.z
                                    mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 428
                                    max r7.xyz, r6, r8  // ::result<0,1,2>

#line 431
                                    lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                  else
                                    if_eq r4.x, c52.z

#line 437
                                      rcp r1.w, r1.z
                                      mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 441
                                      add r7.xyz, r6, r8
                                      add_sat r7.xyz, r7, -c4.y  // ::result<0,1,2>

#line 444
                                      lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                    else
                                      if_eq r4.x, c52.w

#line 450
                                        rcp r1.w, r1.z
                                        mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 454
                                        add r7.xyz, r6, r8  // ::result<0,1,2>

#line 457
                                        lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                      else
                                        if_eq r4.x, c53.x

#line 463
                                          rcp r1.w, r1.z
                                          mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 480
                                          add r7.xyz, -r8, c3.y
                                          add r9.xyz, r8, c3.z
                                          mad r9.xyz, r9, -c4.z, r6  // ::result<0,1,2>
                                          mad r10.xyz, r8, -c4.z, r6
                                          add r10.xyz, r10, -c4.y  // ::result<0,1,2>
                                          cmp r7.xyz, r7, r10, r9  // ::result<0,1,2>

#line 487
                                          lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                        else
                                          if_eq r4.x, c53.y

#line 493
                                            rcp r1.w, r1.z
                                            mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 178
                                            add r7.xyz, -r6.xzyw, r6.zyxw

#line 152
                                            cmp r9.xy, r7.z, r6.yxzw, r6
                                            min r1.w, r6.z, r9.x  // ::fmin<0>
                                            max r2.y, r9.y, r6.z  // ::fmax<0>
                                            add r3.w, -r1.w, r2.y  // ::delta<0>
                                            add r1.w, r1.w, r2.y  // ::maxplusmin<0>

#line 170
                                            add r7.w, r1.w, -c4.y
                                            rcp r8.w, r1.w
                                            mul r8.w, r3.w, r8.w  // ::hsl<1>
                                            add r1.w, -r1.w, -c4.z
                                            rcp r1.w, r1.w
                                            mul r1.w, r1.w, r3.w  // ::hsl<1>
                                            cmp r9.x, r7.w, r1.w, r8.w  // ::hsl<1>

#line 177
                                            add r10.xy, -r2.y, r6
                                            rcp r1.w, r3.w

#line 180
                                            mul r2.y, r1.w, r7.y  // ::hsl<0>
                                            mad r7.xy, r7.xzzw, r1.w, c45  // ::hsl<0,0>
                                            cmp r1.w, -r10_abs.y, r7.x, r7.y  // ::hsl<0>
                                            cmp r1.w, -r10_abs.x, r2.y, r1.w  // ::hsl<0>
                                            mul r2.y, r1.w, c45.z  // ::hsl<0>

#line 185
                                            mad r7.x, r1.w, c45.z, c45.w  // ::hsl<0>
                                            cmp r9.yzw, r1.w, r2.y, r7.x  // ::hsl<0,0,0>
                                            cmp r7, -r3_abs.w, c3.x, r9  // ::hsl<1,0,0,0>

#line 151
                                            add r1.w, -r8.y, r8.x
                                            cmp r9.xy, r1.w, r8.yxzw, r8
                                            min r1.w, r8.z, r9.x  // ::fmin<0>
                                            max r2.y, r9.y, r8.z  // ::fmax<0>
                                            add r1.w, r1.w, r2.y  // ::maxplusmin<0>

#line 157
                                            mul r9.xyz, r1.w, c3.y  // ::hsl<2,2,2>

#line 195
                                            if_eq r7.x, c3.x

#line 198
                                            else

#line 202
                                              add r2.y, r1.w, -c4.y

#line 129
                                              add r10, r7, c46  // GetHue::temp3<0,0,0>

#line 203
                                              mul r3.w, r9.z, r10.x  // ::temp2<0>
                                              mad r7.y, r1.w, c3.y, r7.x
                                              mad r7.x, r7.x, -r9.z, r7.y  // ::temp2<0>
                                              cmp r2.y, r2.y, r7.x, r3.w  // ::temp2<0>
                                              add r1.w, r1.w, -r2.y  // ::temp1<0>

#line 128
                                              add r3.w, -r10.y, c4.y
                                              cmp r3.w, r3.w, r10.y, r10.w  // GetHue::temp3<0>
                                              cmp r3.w, r10.y, r3.w, r10.z  // GetHue::temp3<0>

#line 134
                                              add r7.x, -r1.w, r2.y
                                              mul r7.y, r7.x, c47.x
                                              mad r7.z, r7.y, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                              add r10.xyz, r3.w, c47.yzww
                                              add r3.w, -r3.w, -c47.w
                                              mul r3.w, r3.w, r7.x
                                              mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                              cmp r3.w, r10.z, r1.w, r3.w  // ::rgbComponent<0>
                                              cmp r3.w, r10.y, r3.w, r2.y  // ::rgbComponent<0>
                                              cmp r9.x, r10.x, r3.w, r7.z  // ::rgbComponent<0>

#line 128
                                              add r3.w, -r7.w, c4.y
                                              add r10, r7.w, c50  // GetHue::temp3<0,0,0,0>
                                              cmp r3.w, r3.w, r7.w, r10.y  // GetHue::temp3<0>
                                              cmp r3.w, r7.w, r3.w, r10.x  // GetHue::temp3<0>

#line 134
                                              mad r7.z, r7.y, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                              add r11.xyz, r3.w, c47.yzww
                                              add r3.w, -r3.w, -c47.w
                                              mul r3.w, r3.w, r7.x
                                              mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                              cmp r3.w, r11.z, r1.w, r3.w  // ::rgbComponent<0>
                                              cmp r3.w, r11.y, r3.w, r2.y  // ::rgbComponent<0>
                                              cmp r9.y, r11.x, r3.w, r7.z  // ::rgbComponent<0>

#line 128
                                              add r3.w, -r10.z, c4.y
                                              add r7.z, r7.w, -c46.z  // GetHue::temp3<0>
                                              cmp r3.w, r3.w, r10.z, r7.z  // GetHue::temp3<0>
                                              cmp r3.w, r10.z, r3.w, r10.w  // GetHue::temp3<0>

#line 134
                                              mad r7.y, r7.y, r3.w, r1.w  // ::rgbComponent<0>

#line 137
                                              add r10.xyz, r3.w, c47.yzww
                                              add r3.w, -r3.w, -c47.w
                                              mul r3.w, r3.w, r7.x
                                              mad r3.w, r3.w, c47.x, r1.w  // ::rgbComponent<0>
                                              cmp r1.w, r10.z, r1.w, r3.w  // ::rgbComponent<0>
                                              cmp r1.w, r10.y, r1.w, r2.y  // ::rgbComponent<0>
                                              cmp r9.z, r10.x, r1.w, r7.y  // ::rgbComponent<0>

#line 212
                                            endif

#line 500
                                            lrp r3.xyz, r1.z, r9, r6  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c53.z

#line 506
                                              rcp r1.w, r1.z
                                              mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 510
                                              mul r7.xyz, r6, r8  // ::result<0,1,2>

#line 513
                                              lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c53.w

#line 519
                                                rcp r1.w, r1.z
                                                mul_sat r8.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 522
                                                add r7.xyz, -r6, c4.y
                                                add r7.xyz, -r8, r7
                                                add r7.xyz, -r7_abs, c4.y  // ::result<0,1,2>

#line 525
                                                lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                                              else
                                                if_eq r4.x, c49.x
                                                  add r1.w, -r1.z, c4.y
                                                  add r2.y, -r6.w, c4.y
                                                  mad r2.y, r1.w, -r2.y, c4.y  // ::result<3>

#line 533
                                                  mul r7.xyz, r1.z, r8
                                                  rcp r2.y, r2.y
                                                  mul r9.xyz, r6.w, r6
                                                  mul r9.xyz, r1.w, r9
                                                  mul r9.xyz, r2.y, r9
                                                  mad r3.xyz, r7, r2.y, r9  // ::result<0,1,2>
                                                else
                                                  add r1.w, r4.x, c49.y

#line 539
                                                  rcp r2.y, r1.z
                                                  mul_sat r7.xyz, r2.y, r8  // Blend::blendColor<0,1,2>

#line 557
                                                  add r9.xyz, -r6, c3.y
                                                  add r10.xyz, r6, c3.z
                                                  mad r10.xyz, r10, -c4_abs.z, c4_abs.y
                                                  add r11.xyz, -r7, c4.y
                                                  mad r10.xyz, r10, -r11, c4.y  // ::result<0,1,2>

#line 549
                                                  dp2add r2.y, r7.x, r6.x, c3.x  // ::result<0>
                                                  cmp r11.x, r9.x, r2.y, r10.x  // ::result<0>

#line 555
                                                  dp2add r2.y, r7.y, r6.y, c3.x  // ::result<1>
                                                  cmp r11.y, r9.y, r2.y, r10.y  // ::result<1>

#line 561
                                                  dp2add r2.y, r7.z, r6.z, c3.x  // ::result<2>
                                                  cmp r11.z, r9.z, r2.y, r10.z  // ::result<2>

#line 564
                                                  lrp r3.xyz, r1.z, r11, r6  // ::result<0,1,2>
                                                  cmp r8.xyz, -r1_abs.w, r7, r8  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            mov r4.x, c0.x  // ::BlendMode<0>
            if_eq r4.x, c49.z

#line 570
              rcp r1.w, r1.z
              mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 573
              min r9.xyz, r7, r6
              max r10.xyz, r6, r7
              add r7.xyz, r9, -r10
              add r7.xyz, r7, c4.y  // ::result<0,1,2>

#line 576
              lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
            else
              if_eq r4.x, c49.w

#line 582
                rcp r1.w, r1.z
                mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 599
                add r9.xyz, -r7, c3.y
                add r10.xyz, r7, c3.z
                add r10.xyz, r10, r10
                max r11.xyz, r6, r10  // ::result<0,1,2>
                add r7.xyz, r7, r7
                min r10.xyz, r7, r6  // ::result<0,1,2>
                cmp r7.xyz, r9, r10, r11  // ::result<0,1,2>

#line 606
                lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
              else
                if_eq r4.x, c54.x

#line 612
                  rcp r1.w, r1.z
                  mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 617
                  add r9.xyz, r7, -c4.y
                  mul r10.xyz, r6, r6
                  add r11.xyz, -r7, c4.y
                  rcp r1.w, r11.x
                  mul r1.w, r1.w, r10.x
                  min r2.y, r1.w, c4.y
                  cmp r12.x, r9.x, r7.x, r2.y  // ::result<0>
                  rcp r1.w, r11.y
                  mul r1.w, r1.w, r10.y
                  min r2.y, r1.w, c4.y
                  cmp r12.y, r9.y, r7.y, r2.y  // ::result<1>
                  rcp r1.w, r11.z
                  mul r1.w, r1.w, r10.z
                  min r2.y, r1.w, c4.y
                  cmp r12.z, r9.z, r7.z, r2.y  // ::result<2>

#line 620
                  lrp r3.xyz, r1.z, r12, r6  // ::result<0,1,2>
                else

#line 626
                  if_eq r4.x, c54.y

#line 629
                    rcp r1.w, r1.z
                    mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 151
                    add r1.w, -r6.y, r6.x
                    cmp r9.xy, r1.w, r6.yxzw, r6
                    min r2.y, r6.z, r9.x  // ::fmin<0>
                    max r3.w, r9.y, r6.z  // ::fmax<0>
                    add r6.w, r2.y, r3.w  // ::maxplusmin<0>

#line 157
                    mul r9.xyz, r6.w, c3.y  // ::hsl<2,2,2>

#line 151
                    add r7.w, -r7.y, r7.x
                    cmp r7.xy, r7.w, r7.yxzw, r7
                    min r8.w, r7.z, r7.x  // ::fmin<0>
                    max r9.w, r7.y, r7.z  // ::fmax<0>
                    add r7.x, -r8.w, r9.w  // ::delta<0>
                    add r7.y, r8.w, r9.w  // ::maxplusmin<0>

#line 170
                    add r7.z, r7.y, -c4.y
                    rcp r7.w, r7.y
                    add r7.y, -r7.y, -c4.z
                    rcp r7.y, r7.y
                    mul r7.yw, r7, r7.x  // ::hsl<1,1>
                    cmp r7.y, r7.z, r7.y, r7.w  // ::hsl<1>

#line 186
                    cmp r7.x, -r7_abs.x, c3.x, r7.y  // ::hsl<1>

#line 195
                    if_eq r7.x, c3.x

#line 198
                    else

#line 153
                      add r2.y, -r2.y, r3.w  // ::delta<0>

#line 177
                      add r7.yz, -r3.w, r6.xxyw
                      add r3.w, -r6.z, r6.y
                      rcp r7.w, r2.y
                      mul r3.w, r3.w, r7.w  // ::hsl<0>
                      add r8.w, -r6.x, r6.z
                      mad r8.w, r8.w, r7.w, -c4.z  // ::hsl<0>
                      mad r1.w, r1.w, r7.w, c45.y  // ::hsl<0>
                      cmp r1.w, -r7_abs.z, r8.w, r1.w  // ::hsl<0>
                      cmp r1.w, -r7_abs.y, r3.w, r1.w  // ::hsl<0>
                      mul r3.w, r1.w, c45.z  // ::hsl<0>

#line 185
                      mad r7.y, r1.w, c45.z, c45.w  // ::hsl<0>
                      cmp r1.w, r1.w, r3.w, r7.y  // ::hsl<0>
                      cmp r1.w, -r2_abs.y, c3.x, r1.w  // ::hsl<0>

#line 202
                      add r2.y, r6.w, -c4.y
                      add r3.w, r7.x, c4.y
                      mul r3.w, r3.w, r9.z  // ::temp2<0>
                      mad r7.y, r6.w, c3.y, r7.x
                      mad r7.x, r7.x, -r9.z, r7.y  // ::temp2<0>
                      cmp r2.y, r2.y, r7.x, r3.w  // ::temp2<0>
                      add r3.w, -r2.y, r6.w  // ::temp1<0>

#line 127
                      add r7, r1.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                      add r6.w, -r7.x, c4.y
                      cmp r6.w, r6.w, r7.x, r7.z  // GetHue::temp3<0>
                      cmp r6.w, r7.x, r6.w, r7.y  // GetHue::temp3<0>

#line 134
                      add r7.x, r2.y, -r3.w
                      mul r7.y, r7.x, c47.x
                      mad r7.z, r7.y, r6.w, r3.w  // ::rgbComponent<0>

#line 137
                      add r10.xyz, r6.w, c47.yzww
                      add r6.w, -r6.w, -c47.w
                      mul r6.w, r6.w, r7.x
                      mad r6.w, r6.w, c47.x, r3.w  // ::rgbComponent<0>
                      cmp r6.w, r10.z, r3.w, r6.w  // ::rgbComponent<0>
                      cmp r6.w, r10.y, r6.w, r2.y  // ::rgbComponent<0>
                      cmp r9.x, r10.x, r6.w, r7.z  // ::rgbComponent<0>

#line 128
                      add r6.w, -r1.w, c4.y
                      add r10, r1.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                      cmp r6.w, r6.w, r1.w, r10.x  // GetHue::temp3<0>
                      cmp r1.w, r1.w, r6.w, r7.w  // GetHue::temp3<0>

#line 134
                      mad r6.w, r7.y, r1.w, r3.w  // ::rgbComponent<0>

#line 137
                      add r11.xyz, r1.w, c47.yzww
                      add r1.w, -r1.w, -c47.w
                      mul r1.w, r1.w, r7.x
                      mad r1.w, r1.w, c47.x, r3.w  // ::rgbComponent<0>
                      cmp r1.w, r11.z, r3.w, r1.w  // ::rgbComponent<0>
                      cmp r1.w, r11.y, r1.w, r2.y  // ::rgbComponent<0>
                      cmp r9.y, r11.x, r1.w, r6.w  // ::rgbComponent<0>

#line 128
                      add r1.w, -r10.y, c4.y
                      cmp r1.w, r1.w, r10.y, r10.w  // GetHue::temp3<0>
                      cmp r1.w, r10.y, r1.w, r10.z  // GetHue::temp3<0>

#line 134
                      mad r6.w, r7.y, r1.w, r3.w  // ::rgbComponent<0>

#line 137
                      add r7.yzw, r1.w, c47
                      add r1.w, -r1.w, -c47.w
                      mul r1.w, r1.w, r7.x
                      mad r1.w, r1.w, c47.x, r3.w  // ::rgbComponent<0>
                      cmp r1.w, r7.w, r3.w, r1.w  // ::rgbComponent<0>
                      cmp r1.w, r7.z, r1.w, r2.y  // ::rgbComponent<0>
                      cmp r9.z, r7.y, r1.w, r6.w  // ::rgbComponent<0>

#line 212
                    endif

#line 636
                    lrp r3.xyz, r1.z, r9, r6  // ::result<0,1,2>
                  else
                    if_eq r4.x, c54.z

#line 642
                      rcp r1.w, r1.z
                      mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 646
                      add r9.xyz, -r6, c4.y
                      add r7.xyz, -r7, c4.y
                      mad r7.xyz, r9, -r7, c4.y  // ::result<0,1,2>

#line 649
                      lrp r3.xyz, r1.z, r7, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c54.w

#line 655
                        rcp r1.w, r1.z
                        mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 660
                        add r9.xyz, r7, c3.z
                        add r10.xyz, r6, r6
                        mul r11.xyz, r6, r6
                        mad r12.xyz, r7, -c4_abs.z, c4_abs.y
                        mul r11.xyz, r11, r12
                        mad r11.xyz, r10, r7, r11
                        rsq r1.w, r6.x
                        rcp r1.w, r1.w
                        mad r12.xyz, r7, -c4.z, -c4.y
                        add r7.xyz, -r7, c4.y
                        mul r7.xyz, r7, r10
                        mad r1.w, r1.w, r12.x, r7.x
                        cmp r10.x, r9.x, r1.w, r11.x  // ::result<0>
                        rsq r1.w, r6.y
                        rcp r1.w, r1.w
                        mad r1.w, r1.w, r12.y, r7.y
                        cmp r10.y, r9.y, r1.w, r11.y  // ::result<1>
                        rsq r1.w, r6.z
                        rcp r1.w, r1.w
                        mad r1.w, r1.w, r12.z, r7.z
                        cmp r10.z, r9.z, r1.w, r11.z  // ::result<2>

#line 663
                        lrp r3.xyz, r1.z, r10, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c48.x

#line 669
                          rcp r1.w, r1.z
                          mul_sat r7.xyz, r1.w, r8  // Blend::blendColor<0,1,2>

#line 674
                          add r8.xyz, r7, c3.z
                          add r7.xyz, r7, r7
                          add r9.xyz, -r6, c4.y
                          rcp r1.w, r7.x
                          mad r1.w, r9.x, -r1.w, c4.y
                          max r2.y, r1.w, c3.x
                          cmp r1.w, -r7.x, r7.x, r2.y
                          add r10.xyz, r8, r8
                          mad r11.xyz, r8, -c4.z, -c4.y
                          mad r12.xyz, r8, -c4_abs.z, c4_abs.y
                          rcp r2.y, r12.x
                          mul r2.y, r2.y, r6.x
                          min r3.w, r2.y, c4.y
                          cmp r2.y, r11.x, r10.x, r3.w
                          cmp r13.x, r8.x, r2.y, r1.w  // ::result<0>
                          rcp r1.w, r7.y
                          mad r1.w, r9.y, -r1.w, c4.y
                          max r2.y, r1.w, c3.x
                          cmp r1.w, -r7.y, r7.y, r2.y
                          rcp r2.y, r12.y
                          mul r2.y, r2.y, r6.y
                          min r3.w, r2.y, c4.y
                          cmp r2.y, r11.y, r10.y, r3.w
                          cmp r13.y, r8.y, r2.y, r1.w  // ::result<1>
                          rcp r1.w, r7.z
                          mad r1.w, r9.z, -r1.w, c4.y
                          max r2.y, r1.w, c3.x
                          cmp r1.w, -r7.z, r7.z, r2.y
                          rcp r2.y, r12.z
                          mul r2.y, r2.y, r6.z
                          min r3.w, r2.y, c4.y
                          cmp r2.y, r11.z, r10.z, r3.w
                          cmp r13.z, r8.z, r2.y, r1.w  // ::result<2>

#line 677
                          lrp r3.xyz, r1.z, r13, r6  // ::result<0,1,2>
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif

#line 921
          else
            if_eq c8.x, -r4.z

#line 851
              add r1.zw, -v0.xyxy, v0.xyyx

#line 858
              add r6.xy, c4.y, -v0.yxzw
              add r6.zw, r6.xyxy, -v0.xyxy
              add r7.xy, v0.yxzw, v0.yxzw  // ::t<0,0>

#line 852
              cmp r1.zw, r1, -c4.y, -c4.x

#line 859
              cmp r6.zw, r6, r1.xywz, c3.x

#line 845
              cmp r2.y, r6.z, c3.x, r7.x  // ::t<0>

#line 865
              add r6.xy, -r6, v0
              mad r2.zw, r2, -c4_abs.z, c4_abs.y  // ::t<0,0>
              cmp r1.zw, r6.xyxy, r1, c3.x

#line 852
              cmp r1.z, r1.z, c3.x, r2.z  // ::t<0>
              cmp r1.y, r1.y, r2.y, r1.z  // ::t<0>

#line 859
              cmp r1.z, r6.w, r1.y, r7.y  // ::t<0>

#line 866
              cmp r1.y, r1.w, r1.y, r2.w  // ::t<0>
              cmp r1.x, r1.x, r1.z, r1.y  // ::t<0>

#line 686
              add r1.y, r4.y, -c7.x

#line 699
              if_eq c41.x, r2.x

#line 706
                mov r6, c3.x  // ::color1<0,1,2,3>
                mov r2.yzw, c3.x  // ::color2<0,1,2>
                mov r1.z, c3.x  // ::offset1<0>
                mov r1.w, c4.y  // ::offset2<0>
              else
                if_eq c41.x, r4.y

#line 714
                  mov r6, c9  // ::color1<0,1,2,3>
                  mov r2.yzw, c9.xxyz  // ::color2<0,1,2>
                  mov r1.z, c3.x  // ::offset1<0>
                  mov r1.w, c4.y  // ::offset2<0>
                else
                  if_eq c41.x, -r4.z

#line 722
                    mov r6, c9  // ::color1<0,1,2,3>
                    mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                    mov r1.z, c3.x  // ::offset1<0>
                    mov r1.w, c4.y  // ::offset2<0>
                  else

#line 725
                    mad r3.w, r1.x, r1.y, -c10.x
                    mad r4.x, r1.x, r1.y, -c12.x
                    cmp r7.x, r4.x, c4.x, c4.y
                    cmp r3.w, r3.w, r7.x, c3.x
                    if_ne r3.w, -r3.w

#line 729
                      mov r6, c9  // ::color1<0,1,2,3>
                      mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                      mov r1.z, c10.x  // ::offset1<0>
                      mov r1.w, c12.x  // ::offset2<0>
                    else
                      mad r3.w, r1.x, r1.y, -c14.x
                      cmp r7.x, r3.w, c4.x, c4.y
                      cmp r4.x, r4.x, r7.x, c3.x
                      if_ne r4.x, -r4.x

#line 734
                        mov r6, c11  // ::color1<0,1,2,3>
                        mov r2.yzw, c13.xxyz  // ::color2<0,1,2>
                        mov r1.z, c12.x  // ::offset1<0>
                        mov r1.w, c14.x  // ::offset2<0>
                      else
                        mad r4.x, r1.x, r1.y, -c16.x
                        cmp r7.x, r4.x, c4.x, c4.y
                        cmp r3.w, r3.w, r7.x, c3.x
                        if_ne r3.w, -r3.w

#line 739
                          mov r6, c13  // ::color1<0,1,2,3>
                          mov r2.yzw, c15.xxyz  // ::color2<0,1,2>
                          mov r1.z, c14.x  // ::offset1<0>
                          mov r1.w, c16.x  // ::offset2<0>
                        else
                          mad r3.w, r1.x, r1.y, -c18.x
                          cmp r7.x, r3.w, c4.x, c4.y
                          cmp r4.x, r4.x, r7.x, c3.x
                          if_ne r4.x, -r4.x

#line 744
                            mov r6, c15  // ::color1<0,1,2,3>
                            mov r2.yzw, c17.xxyz  // ::color2<0,1,2>
                            mov r1.z, c16.x  // ::offset1<0>
                            mov r1.w, c18.x  // ::offset2<0>
                          else
                            mad r4.x, r1.x, r1.y, -c20.x
                            cmp r7.x, r4.x, c4.x, c4.y
                            cmp r3.w, r3.w, r7.x, c3.x
                            if_ne r3.w, -r3.w

#line 749
                              mov r6, c17  // ::color1<0,1,2,3>
                              mov r2.yzw, c19.xxyz  // ::color2<0,1,2>
                              mov r1.z, c18.x  // ::offset1<0>
                              mov r1.w, c20.x  // ::offset2<0>
                            else
                              mad r3.w, r1.x, r1.y, -c22.x
                              cmp r7.x, r3.w, c4.x, c4.y
                              cmp r4.x, r4.x, r7.x, c3.x
                              if_ne r4.x, -r4.x

#line 754
                                mov r6, c19  // ::color1<0,1,2,3>
                                mov r2.yzw, c21.xxyz  // ::color2<0,1,2>
                                mov r1.z, c20.x  // ::offset1<0>
                                mov r1.w, c22.x  // ::offset2<0>
                              else
                                mad r4.x, r1.x, r1.y, -c24.x
                                cmp r7.x, r4.x, c4.x, c4.y
                                cmp r3.w, r3.w, r7.x, c3.x
                                if_ne r3.w, -r3.w

#line 759
                                  mov r6, c21  // ::color1<0,1,2,3>
                                  mov r2.yzw, c23.xxyz  // ::color2<0,1,2>
                                  mov r1.z, c22.x  // ::offset1<0>
                                  mov r1.w, c24.x  // ::offset2<0>
                                else
                                  mad r3.w, r1.x, r1.y, -c26.x

#line 765
                                  mad r7.x, r1.x, r1.y, -c28.x

#line 770
                                  mad r7.y, r1.x, r1.y, -c30.x

#line 775
                                  mad r7.z, r1.x, r1.y, -c32.x

#line 780
                                  mad r7.w, r1.x, r1.y, -c34.x

#line 785
                                  mad r8.x, r1.x, r1.y, -c36.x

#line 790
                                  mad r8.y, r1.x, r1.y, -c38.x

#line 799
                                  cmp r8.y, r8.y, -c4.x, -c4.y
                                  cmp r8.y, r8.x, r8.y, c3.x
                                  mov r9, c37  // ::Color15<0,1,2,3>
                                  cmp r10, r8.y, r9, c35  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r8.y, c39, r9  // ::color2<0,1,2>
                                  mov r11.y, c40.x
                                  mov r11.z, c36.x
                                  mov r11.xw, c38.x
                                  cmp r8.yz, r8.y, r11.xxyw, r11.xzww  // ::offset1<0>, ::offset2<0>
                                  cmp r8.x, r8.x, -c4.x, -c4.y
                                  cmp r8.x, r7.w, r8.x, c3.x
                                  cmp r10, r8.x, r10, c33  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r8.x, r9, c35  // ::color2<0,1,2>
                                  mov r11.xw, c34.x
                                  mov r11.y, c36.x
                                  cmp r8.xy, r8.x, r8.yzzw, r11  // ::offset1<0>, ::offset2<0>
                                  cmp r7.w, r7.w, -c4.x, -c4.y
                                  cmp r7.w, r7.z, r7.w, c3.x
                                  cmp r10, r7.w, r10, c31  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r7.w, r9, c33  // ::color2<0,1,2>
                                  mov r11.yz, c32.x
                                  cmp r8.xy, r7.w, r8, r11.zwzw  // ::offset1<0>, ::offset2<0>
                                  cmp r7.z, r7.z, -c4.x, -c4.y
                                  cmp r7.z, r7.y, r7.z, c3.x
                                  cmp r10, r7.z, r10, c29  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r7.z, r9, c31  // ::color2<0,1,2>
                                  mov r11.xw, c30.x
                                  cmp r7.zw, r7.z, r8.xyxy, r11.xyxy  // ::offset1<0>, ::offset2<0>
                                  cmp r7.y, r7.y, -c4.x, -c4.y
                                  cmp r7.y, r7.x, r7.y, c3.x
                                  cmp r8, r7.y, r10, c27  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r7.y, r9, c29  // ::color2<0,1,2>
                                  mov r11.z, c28.x
                                  cmp r7.yz, r7.y, r7.xzww, r11.xzww  // ::offset1<0>, ::offset2<0>
                                  cmp r7.x, r7.x, -c4.x, -c4.y
                                  cmp r7.x, r3.w, r7.x, c3.x
                                  cmp r8, r7.x, r8, c25  // ::color1<0,1,2,3>
                                  cmp r9.xyz, r7.x, r9, c27  // ::color2<0,1,2>
                                  mov r10.xw, c26.x
                                  mov r10.y, c28.x
                                  cmp r7.xy, r7.x, r7.yzzw, r10  // ::offset1<0>, ::offset2<0>
                                  cmp r3.w, r3.w, -c4.x, -c4.y
                                  cmp r3.w, r4.x, r3.w, c3.x
                                  cmp r6, r3.w, r8, c23  // ::color1<0,1,2,3>
                                  cmp r2.yzw, r3.w, r9.xxyz, c25.xxyz  // ::color2<0,1,2>
                                  mov r10.z, c24.x
                                  cmp r1.zw, r3.w, r7.xyxy, r10  // ::offset1<0>, ::offset2<0>
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              add r1.w, -r1.z, r1.w  // ::q<0>
              mad r1.x, r1.x, r1.y, -r1.z
              rcp r1.y, r1.w
              mul r1.x, r1.y, r1.x
              cmp r1.x, -r1_abs.w, c3.x, r1.x  // ::p<0>

#line 221
              cmp r7.xyz, -r2_abs.yzww, c6.z, r2.yzww  // Blend::blendColor<0,1,2>

#line 229
              if_eq c0.x, r2.x

#line 232
                rcp r1.y, r1.x
                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 235
                add r1.yzw, r6.xxyz, r7.xxyz
                mul r1.yzw, r1.x, r1

#line 238
                add r2.y, -r1.x, c4.y
                mul r1.yzw, r1, c3.y
                mad r3.xyz, r2.y, r6, r1.yzww  // ::result<0,1,2>
              else
                if_eq c0.x, r4.y

#line 244
                  rcp r1.y, r1.x
                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 248
                  add r1.yzw, -r6.xxyz, c4.y
                  rcp r8.x, r7.x
                  rcp r8.y, r7.y
                  rcp r8.z, r7.z
                  mad_sat r1.yzw, r1, -r8.xxyz, c4.y  // ::result<0,1,2>

#line 251
                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                else
                  if_eq c0.x, -r4.z

#line 257
                    rcp r1.y, r1.x
                    mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 263
                    add r1.yzw, r7.xxyz, -c4.y
                    add r2.yzw, -r7.xxyz, c4.y
                    rcp r2.y, r2.y
                    mul r2.y, r2.y, r6.x
                    min r3.w, r2.y, c4.y
                    cmp r8.x, r1.y, r7.x, r3.w  // ::result<0>
                    rcp r1.y, r2.z
                    mul r1.y, r1.y, r6.y
                    min r2.y, r1.y, c4.y
                    cmp r8.y, r1.z, r7.y, r2.y  // ::result<1>
                    rcp r1.y, r2.w
                    mul r1.y, r1.y, r6.z
                    min r2.y, r1.y, c4.y
                    cmp r8.z, r1.w, r7.z, r2.y  // ::result<2>

#line 266
                    lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                  else
                    if_eq c0.x, r4.w

#line 272
                      rcp r1.y, r1.x
                      mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 178
                      add r1.yzw, -r7.xxzy, r7.xzyx

#line 152
                      cmp r2.yz, r1.w, r7.xyxw, r7.xxyw
                      min r3.w, r7.z, r2.y  // ::fmin<0>
                      max r4.x, r2.z, r7.z  // ::fmax<0>
                      add r2.y, -r3.w, r4.x  // ::delta<0>
                      add r2.z, r3.w, r4.x  // ::maxplusmin<0>

#line 170
                      add r2.w, r2.z, -c4.y
                      rcp r3.w, r2.z
                      mul r3.w, r2.y, r3.w  // ::hsl<1>
                      add r2.z, -r2.z, -c4.z
                      rcp r2.z, r2.z
                      mul r2.z, r2.z, r2.y  // ::hsl<1>
                      cmp r8.x, r2.w, r2.z, r3.w  // ::hsl<1>

#line 177
                      add r2.zw, -r4.x, r7.xyxy
                      rcp r3.w, r2.y

#line 180
                      mul r1.z, r1.z, r3.w  // ::hsl<0>
                      mad r1.yw, r1, r3.w, c45.xxzy  // ::hsl<0,0>
                      cmp r1.y, -r2_abs.w, r1.y, r1.w  // ::hsl<0>
                      cmp r1.y, -r2_abs.z, r1.z, r1.y  // ::hsl<0>
                      mul r1.z, r1.y, c45.z  // ::hsl<0>

#line 185
                      mad r1.w, r1.y, c45.z, c45.w  // ::hsl<0>
                      cmp r8.yzw, r1.y, r1.z, r1.w  // ::hsl<0,0,0>
                      cmp r8, -r2_abs.y, c3.x, r8  // ::hsl<1,0,0,0>

#line 151
                      add r1.y, -r6.y, r6.x
                      cmp r1.yz, r1.y, r6.xyxw, r6.xxyw
                      min r2.y, r6.z, r1.y  // ::fmin<0>
                      max r2.z, r1.z, r6.z  // ::fmax<0>
                      add r1.y, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                      mul r2.yzw, r1.y, c3.y  // ::hsl<2,2,2>

#line 195
                      if_eq r8.x, c3.x

#line 198
                      else

#line 202
                        add r1.z, r1.y, -c4.y

#line 129
                        add r9, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                        mul r1.w, r2.w, r9.x  // ::temp2<0>
                        mad r3.w, r1.y, c3.y, r8.x
                        mad r3.w, r8.x, -r2.w, r3.w  // ::temp2<0>
                        cmp r1.z, r1.z, r3.w, r1.w  // ::temp2<0>
                        add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 128
                        add r1.w, -r9.y, c4.y
                        cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                        cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                        add r3.w, -r1.y, r1.z
                        mul r4.x, r3.w, c47.x
                        mad r7.w, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r2.y, r8.x, r1.w, r7.w  // ::rgbComponent<0>

#line 128
                        add r1.w, -r8.w, c4.y
                        add r9, r8.w, c50  // GetHue::temp3<0,0,0,0>
                        cmp r1.w, r1.w, r8.w, r9.y  // GetHue::temp3<0>
                        cmp r1.w, r8.w, r1.w, r9.x  // GetHue::temp3<0>

#line 134
                        mad r7.w, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r2.z, r8.x, r1.w, r7.w  // ::rgbComponent<0>

#line 128
                        add r1.w, -r9.z, c4.y
                        add r7.w, r8.w, -c46.z  // GetHue::temp3<0>
                        cmp r1.w, r1.w, r9.z, r7.w  // GetHue::temp3<0>
                        cmp r1.w, r9.z, r1.w, r9.w  // GetHue::temp3<0>

#line 134
                        mad r4.x, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.y, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.y, r8.y, r1.y, r1.z  // ::rgbComponent<0>
                        cmp r2.w, r8.x, r1.y, r4.x  // ::rgbComponent<0>

#line 212
                      endif

#line 279
                      lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                    else
                      mov r4.x, c0.x  // ::BlendMode<0>
                      if_eq r4.x, c45.y

#line 285
                        rcp r1.y, r1.x
                        mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 303
                        min r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 306
                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c51.x

#line 312
                          rcp r1.y, r1.x
                          mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 316
                          add r1.yzw, r6.xxyz, -r7.xxyz

#line 319
                          lrp r3.xyz, r1.x, r1_abs.yzww, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c47.x

#line 325
                            rcp r1.y, r1.x
                            mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 329
                            add r1.yzw, r6.xxyz, c3.z
                            add r1.yzw, r1, r1
                            add r2.yzw, r7.xxyz, c3.z
                            mad r1.yzw, r1, -r2, c3.y  // ::result<0,1,2>

#line 332
                            lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                          else
                            if_eq r4.x, c51.y

#line 338
                              rcp r1.y, r1.x
                              mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 343
                              add r1.yzw, r6.xxyz, -c4.y
                              mul r2.yzw, r7.xxyz, r7.xxyz
                              add r8.xyz, -r6, c4.y
                              rcp r3.w, r8.x
                              mul r2.y, r2.y, r3.w
                              min r3.w, r2.y, c4.y
                              cmp r9.x, -r1_abs.y, r6.x, r3.w  // ::result<0>
                              rcp r1.y, r8.y
                              mul r1.y, r1.y, r2.z
                              min r2.y, r1.y, c4.y
                              cmp r9.y, -r1_abs.z, r6.y, r2.y  // ::result<1>
                              rcp r1.y, r8.z
                              mul r1.y, r1.y, r2.w
                              min r2.y, r1.y, c4.y
                              cmp r9.z, -r1_abs.w, r6.z, r2.y  // ::result<2>

#line 346
                              lrp r3.xyz, r1.x, r9, r6  // ::result<0,1,2>
                            else
                              if_eq r4.x, c51.z

#line 352
                                rcp r1.y, r1.x
                                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 369
                                add r1.yzw, -r7.xxyz, c3.y
                                add r2.yzw, -r6.xxyz, c4.y
                                add r8.xyz, r7, c3.z
                                mad r8.xyz, r8, -c4_abs.z, c4_abs.y
                                mad r2.yzw, r2, -r8.xxyz, c4.y  // ::result<0,1,2>

#line 361
                                dp2add r3.w, r6.x, r7.x, c3.x  // ::result<0>
                                cmp r8.x, r1.y, r3.w, r2.y  // ::result<0>

#line 367
                                dp2add r1.y, r6.y, r7.y, c3.x  // ::result<1>
                                cmp r8.y, r1.z, r1.y, r2.z  // ::result<1>

#line 373
                                dp2add r1.y, r6.z, r7.z, c3.x  // ::result<2>
                                cmp r8.z, r1.w, r1.y, r2.w  // ::result<2>

#line 376
                                lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                              else
                                if_eq r4.x, c51.w

#line 382
                                  rcp r1.y, r1.x
                                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 387
                                  add r1.yzw, r7.xxyz, c3.z
                                  add r2.yzw, r7.xxyz, r7.xxyz
                                  add r8.xyz, -r6, c4.y
                                  rcp r3.w, r2.y
                                  mad r3.w, r8.x, -r3.w, c4.y
                                  max r7.w, r3.w, c3.x
                                  cmp r2.y, -r2.y, r2.y, r7.w
                                  add r9.xyz, r1.yzww, r1.yzww
                                  mad r10.xyz, r1.yzww, -c4.z, -c4.y
                                  mad r11.xyz, r1.yzww, -c4_abs.z, c4_abs.y
                                  rcp r3.w, r11.x
                                  mul r3.w, r3.w, r6.x
                                  min r7.w, r3.w, c4.y
                                  cmp r3.w, r10.x, r9.x, r7.w
                                  cmp r1.y, r1.y, r3.w, r2.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.x, r1.y, c4.y, c4.x  // ::result<0>
                                  rcp r1.y, r2.z
                                  mad r1.y, r8.y, -r1.y, c4.y
                                  max r2.y, r1.y, c3.x
                                  cmp r1.y, -r2.z, r2.z, r2.y
                                  rcp r2.y, r11.y
                                  mul r2.y, r2.y, r6.y
                                  min r3.w, r2.y, c4.y
                                  cmp r2.y, r10.y, r9.y, r3.w
                                  cmp r1.y, r1.z, r2.y, r1.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.y, r1.y, c4.y, c4.x  // ::result<1>
                                  rcp r1.y, r2.w
                                  mad r1.y, r8.z, -r1.y, c4.y
                                  max r2.y, r1.y, c3.x
                                  cmp r1.y, -r2.w, r2.w, r2.y
                                  rcp r1.z, r11.z
                                  mul r1.z, r1.z, r6.z
                                  min r2.y, r1.z, c4.y
                                  cmp r1.z, r10.z, r9.z, r2.y
                                  cmp r1.y, r1.w, r1.z, r1.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.z, r1.y, c4.y, c4.x  // ::result<2>

#line 390
                                  lrp r3.xyz, r1.x, r12, r6  // ::result<0,1,2>
                                else
                                  if_eq r4.x, c52.x

#line 396
                                    rcp r1.y, r1.x
                                    mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 151
                                    add r1.y, -r6.y, r6.x
                                    cmp r1.yz, r1.y, r6.xyxw, r6.xxyw
                                    min r2.y, r6.z, r1.y  // ::fmin<0>
                                    max r2.z, r1.z, r6.z  // ::fmax<0>
                                    add r1.y, -r2.y, r2.z  // ::delta<0>
                                    add r1.z, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                                    mul r2.yzw, r1.z, c3.y  // ::hsl<2,2,2>

#line 170
                                    add r1.w, r1.z, -c4.y
                                    rcp r3.w, r1.z
                                    mul r3.w, r1.y, r3.w  // ::hsl<1>
                                    add r7.w, -r1.z, -c4.z
                                    rcp r7.w, r7.w
                                    mul r7.w, r1.y, r7.w  // ::hsl<1>
                                    cmp r3.w, r1.w, r7.w, r3.w  // ::hsl<1>

#line 186
                                    cmp r1.y, -r1_abs.y, c3.x, r3.w  // ::hsl<1>

#line 195
                                    if_eq r1.y, c3.x

#line 198
                                    else

#line 178
                                      add r8.xyz, -r7.xzyw, r7.zyxw

#line 152
                                      cmp r9.xy, r8.z, r7.yxzw, r7
                                      min r3.w, r7.z, r9.x  // ::fmin<0>
                                      max r8.w, r9.y, r7.z  // ::fmax<0>
                                      add r3.w, -r3.w, r8.w  // ::delta<0>

#line 177
                                      add r9.xy, r7, -r8.w
                                      rcp r7.w, r3.w

#line 180
                                      mul r8.y, r7.w, r8.y  // ::hsl<0>
                                      mad r8.xz, r8, r7.w, c45.xyyw  // ::hsl<0,0>
                                      cmp r7.w, -r9_abs.y, r8.x, r8.z  // ::hsl<0>
                                      cmp r7.w, -r9_abs.x, r8.y, r7.w  // ::hsl<0>
                                      mul r8.x, r7.w, c45.z  // ::hsl<0>

#line 185
                                      mad r8.y, r7.w, c45.z, c45.w  // ::hsl<0>
                                      cmp r7.w, r7.w, r8.x, r8.y  // ::hsl<0>
                                      cmp r3.w, -r3_abs.w, c3.x, r7.w  // ::hsl<0>

#line 203
                                      add r7.w, r1.y, c4.y
                                      mul r7.w, r2.w, r7.w  // ::temp2<0>
                                      mad r8.x, r1.z, c3.y, r1.y
                                      mad r1.y, r1.y, -r2.w, r8.x  // ::temp2<0>
                                      cmp r1.y, r1.w, r1.y, r7.w  // ::temp2<0>
                                      add r1.z, -r1.y, r1.z  // ::temp1<0>

#line 127
                                      add r8, r3.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                                      add r1.w, -r8.x, c4.y
                                      cmp r1.w, r1.w, r8.x, r8.z  // GetHue::temp3<0>
                                      cmp r1.w, r8.x, r1.w, r8.y  // GetHue::temp3<0>

#line 134
                                      add r7.w, -r1.z, r1.y
                                      mul r8.x, r7.w, c47.x
                                      mad r8.y, r8.x, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r9.xyz, r1.w, c47.yzww
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r7.w
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.w, r9.z, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.w, r9.y, r1.w, r1.y  // ::rgbComponent<0>
                                      cmp r2.y, r9.x, r1.w, r8.y  // ::rgbComponent<0>

#line 128
                                      add r1.w, -r3.w, c4.y
                                      add r9, r3.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                                      cmp r1.w, r1.w, r3.w, r9.x  // GetHue::temp3<0>
                                      cmp r1.w, r3.w, r1.w, r8.w  // GetHue::temp3<0>

#line 134
                                      mad r3.w, r8.x, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r8.yzw, r1.w, c47
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r7.w
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.w, r8.w, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.w, r8.z, r1.w, r1.y  // ::rgbComponent<0>
                                      cmp r2.z, r8.y, r1.w, r3.w  // ::rgbComponent<0>

#line 128
                                      add r1.w, -r9.y, c4.y
                                      cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                                      cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                                      mad r3.w, r8.x, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r8.xyz, r1.w, c47.yzww
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r7.w
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.z, r8.z, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.y, r8.y, r1.z, r1.y  // ::rgbComponent<0>
                                      cmp r2.w, r8.x, r1.y, r3.w  // ::rgbComponent<0>

#line 212
                                    endif

#line 403
                                    lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                                  else
                                    if_eq r4.x, c52.y

#line 409
                                      rcp r1.y, r1.x
                                      mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 428
                                      max r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 431
                                      lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                    else
                                      if_eq r4.x, c52.z

#line 437
                                        rcp r1.y, r1.x
                                        mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 441
                                        add r1.yzw, r6.xxyz, r7.xxyz
                                        add_sat r1.yzw, r1, -c4.y  // ::result<0,1,2>

#line 444
                                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                      else
                                        if_eq r4.x, c52.w

#line 450
                                          rcp r1.y, r1.x
                                          mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 454
                                          add r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 457
                                          lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                        else
                                          if_eq r4.x, c53.x

#line 463
                                            rcp r1.y, r1.x
                                            mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 480
                                            add r1.yzw, -r7.xxyz, c3.y
                                            add r2.yzw, r7.xxyz, c3.z
                                            mad r2.yzw, r2, -c4.z, r6.xxyz  // ::result<0,1,2>
                                            mad r8.xyz, r7, -c4.z, r6
                                            add r8.xyz, r8, -c4.y  // ::result<0,1,2>
                                            cmp r1.yzw, r1, r8.xxyz, r2  // ::result<0,1,2>

#line 487
                                            lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c53.y

#line 493
                                              rcp r1.y, r1.x
                                              mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 178
                                              add r1.yzw, -r6.xxzy, r6.xzyx

#line 152
                                              cmp r2.yz, r1.w, r6.xyxw, r6.xxyw
                                              min r3.w, r6.z, r2.y  // ::fmin<0>
                                              max r7.w, r2.z, r6.z  // ::fmax<0>
                                              add r2.y, -r3.w, r7.w  // ::delta<0>
                                              add r2.z, r3.w, r7.w  // ::maxplusmin<0>

#line 170
                                              add r2.w, r2.z, -c4.y
                                              rcp r3.w, r2.z
                                              mul r3.w, r2.y, r3.w  // ::hsl<1>
                                              add r2.z, -r2.z, -c4.z
                                              rcp r2.z, r2.z
                                              mul r2.z, r2.z, r2.y  // ::hsl<1>
                                              cmp r8.x, r2.w, r2.z, r3.w  // ::hsl<1>

#line 177
                                              add r2.zw, r6.xyxy, -r7.w
                                              rcp r3.w, r2.y

#line 180
                                              mul r1.z, r1.z, r3.w  // ::hsl<0>
                                              mad r1.yw, r1, r3.w, c45.xxzy  // ::hsl<0,0>
                                              cmp r1.y, -r2_abs.w, r1.y, r1.w  // ::hsl<0>
                                              cmp r1.y, -r2_abs.z, r1.z, r1.y  // ::hsl<0>
                                              mul r1.z, r1.y, c45.z  // ::hsl<0>

#line 185
                                              mad r1.w, r1.y, c45.z, c45.w  // ::hsl<0>
                                              cmp r8.yzw, r1.y, r1.z, r1.w  // ::hsl<0,0,0>
                                              cmp r8, -r2_abs.y, c3.x, r8  // ::hsl<1,0,0,0>

#line 151
                                              add r1.y, -r7.y, r7.x
                                              cmp r1.yz, r1.y, r7.xyxw, r7.xxyw
                                              min r2.y, r7.z, r1.y  // ::fmin<0>
                                              max r2.z, r1.z, r7.z  // ::fmax<0>
                                              add r1.y, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                                              mul r2.yzw, r1.y, c3.y  // ::hsl<2,2,2>

#line 195
                                              if_eq r8.x, c3.x

#line 198
                                              else

#line 202
                                                add r1.z, r1.y, -c4.y

#line 129
                                                add r9, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                                                mul r1.w, r2.w, r9.x  // ::temp2<0>
                                                mad r3.w, r1.y, c3.y, r8.x
                                                mad r3.w, r8.x, -r2.w, r3.w  // ::temp2<0>
                                                cmp r1.z, r1.z, r3.w, r1.w  // ::temp2<0>
                                                add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 128
                                                add r1.w, -r9.y, c4.y
                                                cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                                                cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                                                add r3.w, -r1.y, r1.z
                                                mul r7.w, r3.w, c47.x
                                                mad r8.x, r7.w, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r9.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.w, r9.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.w, r9.y, r1.w, r1.z  // ::rgbComponent<0>
                                                cmp r2.y, r9.x, r1.w, r8.x  // ::rgbComponent<0>

#line 128
                                                add r1.w, -r8.w, c4.y
                                                add r9, r8.w, c50  // GetHue::temp3<0,0,0,0>
                                                cmp r1.w, r1.w, r8.w, r9.y  // GetHue::temp3<0>
                                                cmp r1.w, r8.w, r1.w, r9.x  // GetHue::temp3<0>

#line 134
                                                mad r8.x, r7.w, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r10.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.w, r10.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.w, r10.y, r1.w, r1.z  // ::rgbComponent<0>
                                                cmp r2.z, r10.x, r1.w, r8.x  // ::rgbComponent<0>

#line 128
                                                add r1.w, -r9.z, c4.y
                                                add r8.x, r8.w, -c46.z  // GetHue::temp3<0>
                                                cmp r1.w, r1.w, r9.z, r8.x  // GetHue::temp3<0>
                                                cmp r1.w, r9.z, r1.w, r9.w  // GetHue::temp3<0>

#line 134
                                                mad r7.w, r7.w, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r8.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.y, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.y, r8.y, r1.y, r1.z  // ::rgbComponent<0>
                                                cmp r2.w, r8.x, r1.y, r7.w  // ::rgbComponent<0>

#line 212
                                              endif

#line 500
                                              lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c53.z

#line 506
                                                rcp r1.y, r1.x
                                                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 510
                                                mul r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 513
                                                lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                              else
                                                if_eq r4.x, c53.w

#line 519
                                                  rcp r1.y, r1.x
                                                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 522
                                                  add r1.yzw, -r6.xxyz, c4.y
                                                  add r1.yzw, -r7.xxyz, r1
                                                  add r1.yzw, -r1_abs, c4.y  // ::result<0,1,2>

#line 525
                                                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                                else
                                                  if_eq r4.x, c49.x
                                                    add r1.y, -r1.x, c4.y
                                                    add r1.z, -r6.w, c4.y
                                                    mad r1.z, r1.y, -r1.z, c4.y  // ::result<3>

#line 533
                                                    mul r2.yzw, r1.x, r7.xxyz
                                                    rcp r1.z, r1.z
                                                    mul r8.xyz, r6.w, r6
                                                    mul r8.xyz, r1.y, r8
                                                    mul r8.xyz, r1.z, r8
                                                    mad r3.xyz, r2.yzww, r1.z, r8  // ::result<0,1,2>
                                                  else
                                                    add r1.y, r4.x, c49.y

#line 539
                                                    rcp r1.z, r1.x
                                                    mul_sat r2.yzw, r1.z, r7.xxyz  // Blend::blendColor<0,1,2>

#line 557
                                                    add r8.xyz, -r6, c3.y
                                                    add r9.xyz, r6, c3.z
                                                    mad r9.xyz, r9, -c4_abs.z, c4_abs.y
                                                    add r10.xyz, -r2.yzww, c4.y
                                                    mad r9.xyz, r9, -r10, c4.y  // ::result<0,1,2>

#line 549
                                                    dp2add r1.z, r2.y, r6.x, c3.x  // ::result<0>
                                                    cmp r10.x, r8.x, r1.z, r9.x  // ::result<0>

#line 555
                                                    dp2add r1.z, r2.z, r6.y, c3.x  // ::result<1>
                                                    cmp r10.y, r8.y, r1.z, r9.y  // ::result<1>

#line 561
                                                    dp2add r1.z, r2.w, r6.z, c3.x  // ::result<2>
                                                    cmp r10.z, r8.z, r1.z, r9.z  // ::result<2>

#line 564
                                                    lrp r3.xyz, r1.x, r10, r6  // ::result<0,1,2>
                                                    cmp r7.xyz, -r1_abs.y, r2.yzww, r7  // Blend::blendColor<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              mov r4.x, c0.x  // ::BlendMode<0>
              if_eq r4.x, c49.z

#line 570
                rcp r1.y, r1.x
                mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 573
                min r2.yzw, r1, r6.xxyz
                max r8.xyz, r6, r1.yzww
                add r1.yzw, r2, -r8.xxyz
                add r1.yzw, r1, c4.y  // ::result<0,1,2>

#line 576
                lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
              else
                if_eq r4.x, c49.w

#line 582
                  rcp r1.y, r1.x
                  mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 599
                  add r2.yzw, -r1, c3.y
                  add r8.xyz, r1.yzww, c3.z
                  add r8.xyz, r8, r8
                  max r9.xyz, r6, r8  // ::result<0,1,2>
                  add r1.yzw, r1, r1
                  min r8.xyz, r1.yzww, r6  // ::result<0,1,2>
                  cmp r1.yzw, r2, r8.xxyz, r9.xxyz  // ::result<0,1,2>

#line 606
                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                else
                  if_eq r4.x, c54.x

#line 612
                    rcp r1.y, r1.x
                    mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 617
                    add r2.yzw, r1, -c4.y
                    mul r8.xyz, r6, r6
                    add r9.xyz, -r1.yzww, c4.y
                    rcp r3.w, r9.x
                    mul r3.w, r3.w, r8.x
                    min r6.w, r3.w, c4.y
                    cmp r10.x, r2.y, r1.y, r6.w  // ::result<0>
                    rcp r1.y, r9.y
                    mul r1.y, r1.y, r8.y
                    min r2.y, r1.y, c4.y
                    cmp r10.y, r2.z, r1.z, r2.y  // ::result<1>
                    rcp r1.y, r9.z
                    mul r1.y, r1.y, r8.z
                    min r2.y, r1.y, c4.y
                    cmp r10.z, r2.w, r1.w, r2.y  // ::result<2>

#line 620
                    lrp r3.xyz, r1.x, r10, r6  // ::result<0,1,2>
                  else

#line 626
                    if_eq r4.x, c54.y

#line 629
                      rcp r1.y, r1.x
                      mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 151
                      add r2.y, -r6.y, r6.x
                      cmp r2.zw, r2.y, r6.xyyx, r6.xyxy
                      min r3.w, r6.z, r2.z  // ::fmin<0>
                      max r7.w, r2.w, r6.z  // ::fmax<0>
                      add r2.z, r3.w, r7.w  // ::maxplusmin<0>

#line 157
                      mul r8.xyz, r2.z, c3.y  // ::hsl<2,2,2>

#line 151
                      add r2.w, -r1.z, r1.y
                      cmp r1.yz, r2.w, r1.xzyw, r1
                      min r2.w, r1.w, r1.y  // ::fmin<0>
                      max r6.w, r1.z, r1.w  // ::fmax<0>
                      add r1.y, -r2.w, r6.w  // ::delta<0>
                      add r1.z, r2.w, r6.w  // ::maxplusmin<0>

#line 170
                      add r1.w, r1.z, -c4.y
                      rcp r2.w, r1.z
                      mul r2.w, r1.y, r2.w  // ::hsl<1>
                      add r1.z, -r1.z, -c4.z
                      rcp r1.z, r1.z
                      mul r1.z, r1.z, r1.y  // ::hsl<1>
                      cmp r1.z, r1.w, r1.z, r2.w  // ::hsl<1>

#line 186
                      cmp r1.y, -r1_abs.y, c3.x, r1.z  // ::hsl<1>

#line 195
                      if_eq r1.y, c3.x

#line 198
                      else

#line 153
                        add r1.z, -r3.w, r7.w  // ::delta<0>

#line 177
                        add r9.xy, r6, -r7.w
                        add r1.w, -r6.z, r6.y
                        rcp r2.w, r1.z
                        mul r1.w, r1.w, r2.w  // ::hsl<0>
                        add r3.w, -r6.x, r6.z
                        mad r3.w, r3.w, r2.w, -c4.z  // ::hsl<0>
                        mad r2.y, r2.y, r2.w, c45.y  // ::hsl<0>
                        cmp r2.y, -r9_abs.y, r3.w, r2.y  // ::hsl<0>
                        cmp r1.w, -r9_abs.x, r1.w, r2.y  // ::hsl<0>
                        mul r2.y, r1.w, c45.z  // ::hsl<0>

#line 185
                        mad r2.w, r1.w, c45.z, c45.w  // ::hsl<0>
                        cmp r1.w, r1.w, r2.y, r2.w  // ::hsl<0>
                        cmp r1.z, -r1_abs.z, c3.x, r1.w  // ::hsl<0>

#line 202
                        add r1.w, r2.z, -c4.y
                        add r2.y, r1.y, c4.y
                        mul r2.y, r2.y, r8.z  // ::temp2<0>
                        mad r2.w, r2.z, c3.y, r1.y
                        mad r1.y, r1.y, -r8.z, r2.w  // ::temp2<0>
                        cmp r1.y, r1.w, r1.y, r2.y  // ::temp2<0>
                        add r1.w, -r1.y, r2.z  // ::temp1<0>

#line 127
                        add r9, r1.z, c46.yzwx  // GetHue::temp3<0,0,0,0>
                        add r2.y, -r9.x, c4.y
                        cmp r2.y, r2.y, r9.x, r9.z  // GetHue::temp3<0>
                        cmp r2.y, r9.x, r2.y, r9.y  // GetHue::temp3<0>

#line 134
                        add r2.z, -r1.w, r1.y
                        mul r2.w, r2.z, c47.x
                        mad r3.w, r2.w, r2.y, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r2.y, c47.yzww
                        add r2.y, -r2.y, -c47.w
                        mul r2.y, r2.y, r2.z
                        mad r2.y, r2.y, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r2.y, r9.z, r1.w, r2.y  // ::rgbComponent<0>
                        cmp r2.y, r9.y, r2.y, r1.y  // ::rgbComponent<0>
                        cmp r8.x, r9.x, r2.y, r3.w  // ::rgbComponent<0>

#line 128
                        add r2.y, -r1.z, c4.y
                        add r10, r1.z, -c46.xywz  // GetHue::temp3<0,0,0,0>
                        cmp r2.y, r2.y, r1.z, r10.x  // GetHue::temp3<0>
                        cmp r1.z, r1.z, r2.y, r9.w  // GetHue::temp3<0>

#line 134
                        mad r2.y, r2.w, r1.z, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r1.z, c47.yzww
                        add r1.z, -r1.z, -c47.w
                        mul r1.z, r1.z, r2.z
                        mad r1.z, r1.z, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r1.z, r9.z, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r1.z, r9.y, r1.z, r1.y  // ::rgbComponent<0>
                        cmp r8.y, r9.x, r1.z, r2.y  // ::rgbComponent<0>

#line 128
                        add r1.z, -r10.y, c4.y
                        cmp r1.z, r1.z, r10.y, r10.w  // GetHue::temp3<0>
                        cmp r1.z, r10.y, r1.z, r10.z  // GetHue::temp3<0>

#line 134
                        mad r2.y, r2.w, r1.z, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r1.z, c47.yzww
                        add r1.z, -r1.z, -c47.w
                        mul r1.z, r1.z, r2.z
                        mad r1.z, r1.z, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r1.z, r9.z, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r1.y, r9.y, r1.z, r1.y  // ::rgbComponent<0>
                        cmp r8.z, r9.x, r1.y, r2.y  // ::rgbComponent<0>

#line 212
                      endif

#line 636
                      lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c54.z

#line 642
                        rcp r1.y, r1.x
                        mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 646
                        add r2.yzw, -r6.xxyz, c4.y
                        add r1.yzw, -r1, c4.y
                        mad r1.yzw, r2, -r1, c4.y  // ::result<0,1,2>

#line 649
                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c54.w

#line 655
                          rcp r1.y, r1.x
                          mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 660
                          add r2.yzw, r1, c3.z
                          add r8.xyz, r6, r6
                          mul r9.xyz, r6, r6
                          mad r10.xyz, r1.yzww, -c4_abs.z, c4_abs.y
                          mul r9.xyz, r9, r10
                          mad r9.xyz, r8, r1.yzww, r9
                          rsq r3.w, r6.x
                          rcp r3.w, r3.w
                          mad r10.xyz, r1.yzww, -c4.z, -c4.y
                          add r1.yzw, -r1, c4.y
                          mul r1.yzw, r1, r8.xxyz
                          mad r1.y, r3.w, r10.x, r1.y
                          cmp r8.x, r2.y, r1.y, r9.x  // ::result<0>
                          rsq r1.y, r6.y
                          rcp r1.y, r1.y
                          mad r1.y, r1.y, r10.y, r1.z
                          cmp r8.y, r2.z, r1.y, r9.y  // ::result<1>
                          rsq r1.y, r6.z
                          rcp r1.y, r1.y
                          mad r1.y, r1.y, r10.z, r1.w
                          cmp r8.z, r2.w, r1.y, r9.z  // ::result<2>

#line 663
                          lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c48.x

#line 669
                            rcp r1.y, r1.x
                            mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 674
                            add r2.yzw, r1, c3.z
                            add r1.yzw, r1, r1
                            add r7.xyz, -r6, c4.y
                            rcp r3.w, r1.y
                            mad r3.w, r7.x, -r3.w, c4.y
                            max r4.x, r3.w, c3.x
                            cmp r1.y, -r1.y, r1.y, r4.x
                            add r8.xyz, r2.yzww, r2.yzww
                            mad r9.xyz, r2.yzww, -c4.z, -c4.y
                            mad r10.xyz, r2.yzww, -c4_abs.z, c4_abs.y
                            rcp r3.w, r10.x
                            mul r3.w, r3.w, r6.x
                            min r4.x, r3.w, c4.y
                            cmp r3.w, r9.x, r8.x, r4.x
                            cmp r11.x, r2.y, r3.w, r1.y  // ::result<0>
                            rcp r1.y, r1.z
                            mad r1.y, r7.y, -r1.y, c4.y
                            max r2.y, r1.y, c3.x
                            cmp r1.y, -r1.z, r1.z, r2.y
                            rcp r1.z, r10.y
                            mul r1.z, r1.z, r6.y
                            min r2.y, r1.z, c4.y
                            cmp r1.z, r9.y, r8.y, r2.y
                            cmp r11.y, r2.z, r1.z, r1.y  // ::result<1>
                            rcp r1.y, r1.w
                            mad r1.y, r7.z, -r1.y, c4.y
                            max r2.y, r1.y, c3.x
                            cmp r1.y, -r1.w, r1.w, r2.y
                            rcp r1.z, r10.z
                            mul r1.z, r1.z, r6.z
                            min r2.y, r1.z, c4.y
                            cmp r1.z, r9.z, r8.z, r2.y
                            cmp r11.z, r2.w, r1.z, r1.y  // ::result<2>

#line 677
                            lrp r3.xyz, r1.x, r11, r6  // ::result<0,1,2>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif

#line 924
            else

#line 686
              add r1.x, r4.y, -c7.x

#line 699
              if_eq c41.x, r2.x

#line 706
                mov r6, c3.x  // ::color1<0,1,2,3>
                mov r1.yzw, c3.x  // ::color2<0,1,2>
                mov r2.y, c3.x  // ::offset1<0>
                mov r2.z, c4.y  // ::offset2<0>
              else
                if_eq c41.x, r4.y

#line 714
                  mov r6, c9  // ::color1<0,1,2,3>
                  mov r1.yzw, c9.xxyz  // ::color2<0,1,2>
                  mov r2.y, c3.x  // ::offset1<0>
                  mov r2.z, c4.y  // ::offset2<0>
                else
                  if_eq c41.x, -r4.z

#line 722
                    mov r6, c9  // ::color1<0,1,2,3>
                    mov r1.yzw, c11.xxyz  // ::color2<0,1,2>
                    mov r2.y, c3.x  // ::offset1<0>
                    mov r2.z, c4.y  // ::offset2<0>
                  else

#line 725
                    mad r2.w, v0.x, r1.x, -c10.x
                    mad r3.w, v0.x, r1.x, -c12.x
                    cmp r4.x, r3.w, c4.x, c4.y
                    cmp r2.w, r2.w, r4.x, c3.x
                    if_ne r2.w, -r2.w

#line 729
                      mov r6, c9  // ::color1<0,1,2,3>
                      mov r1.yzw, c11.xxyz  // ::color2<0,1,2>
                      mov r2.y, c10.x  // ::offset1<0>
                      mov r2.z, c12.x  // ::offset2<0>
                    else
                      mad r2.w, v0.x, r1.x, -c14.x
                      cmp r4.x, r2.w, c4.x, c4.y
                      cmp r3.w, r3.w, r4.x, c3.x
                      if_ne r3.w, -r3.w

#line 734
                        mov r6, c11  // ::color1<0,1,2,3>
                        mov r1.yzw, c13.xxyz  // ::color2<0,1,2>
                        mov r2.y, c12.x  // ::offset1<0>
                        mov r2.z, c14.x  // ::offset2<0>
                      else
                        mad r3.w, v0.x, r1.x, -c16.x
                        cmp r4.x, r3.w, c4.x, c4.y
                        cmp r2.w, r2.w, r4.x, c3.x
                        if_ne r2.w, -r2.w

#line 739
                          mov r6, c13  // ::color1<0,1,2,3>
                          mov r1.yzw, c15.xxyz  // ::color2<0,1,2>
                          mov r2.y, c14.x  // ::offset1<0>
                          mov r2.z, c16.x  // ::offset2<0>
                        else
                          mad r2.w, v0.x, r1.x, -c18.x
                          cmp r4.x, r2.w, c4.x, c4.y
                          cmp r3.w, r3.w, r4.x, c3.x
                          if_ne r3.w, -r3.w

#line 744
                            mov r6, c15  // ::color1<0,1,2,3>
                            mov r1.yzw, c17.xxyz  // ::color2<0,1,2>
                            mov r2.y, c16.x  // ::offset1<0>
                            mov r2.z, c18.x  // ::offset2<0>
                          else
                            mad r3.w, v0.x, r1.x, -c20.x
                            cmp r4.x, r3.w, c4.x, c4.y
                            cmp r2.w, r2.w, r4.x, c3.x
                            if_ne r2.w, -r2.w

#line 749
                              mov r6, c17  // ::color1<0,1,2,3>
                              mov r1.yzw, c19.xxyz  // ::color2<0,1,2>
                              mov r2.y, c18.x  // ::offset1<0>
                              mov r2.z, c20.x  // ::offset2<0>
                            else
                              mad r2.w, v0.x, r1.x, -c22.x
                              cmp r4.x, r2.w, c4.x, c4.y
                              cmp r3.w, r3.w, r4.x, c3.x
                              if_ne r3.w, -r3.w

#line 754
                                mov r6, c19  // ::color1<0,1,2,3>
                                mov r1.yzw, c21.xxyz  // ::color2<0,1,2>
                                mov r2.y, c20.x  // ::offset1<0>
                                mov r2.z, c22.x  // ::offset2<0>
                              else
                                mad r3.w, v0.x, r1.x, -c24.x
                                cmp r4.x, r3.w, c4.x, c4.y
                                cmp r2.w, r2.w, r4.x, c3.x
                                if_ne r2.w, -r2.w

#line 759
                                  mov r6, c21  // ::color1<0,1,2,3>
                                  mov r1.yzw, c23.xxyz  // ::color2<0,1,2>
                                  mov r2.y, c22.x  // ::offset1<0>
                                  mov r2.z, c24.x  // ::offset2<0>
                                else
                                  mad r2.w, v0.x, r1.x, -c26.x

#line 765
                                  mad r4.x, v0.x, r1.x, -c28.x

#line 770
                                  mad r7.x, v0.x, r1.x, -c30.x

#line 775
                                  mad r7.y, v0.x, r1.x, -c32.x

#line 780
                                  mad r7.z, v0.x, r1.x, -c34.x

#line 785
                                  mad r7.w, v0.x, r1.x, -c36.x

#line 790
                                  mad r8.x, v0.x, r1.x, -c38.x

#line 799
                                  cmp r8.x, r8.x, -c4.x, -c4.y
                                  cmp r8.x, r7.w, r8.x, c3.x
                                  mov r9, c37  // ::Color15<0,1,2,3>
                                  cmp r10, r8.x, r9, c35  // ::color1<0,1,2,3>
                                  cmp r8.yzw, r8.x, c39.xxyz, r9.xxyz  // ::color2<0,1,2>
                                  mov r9.y, c40.x
                                  mov r9.z, c36.x
                                  mov r9.xw, c38.x
                                  cmp r9.xy, r8.x, r9, r9.zwzw  // ::offset1<0>, ::offset2<0>
                                  cmp r7.w, r7.w, -c4.x, -c4.y
                                  cmp r7.w, r7.z, r7.w, c3.x
                                  cmp r10, r7.w, r10, c33  // ::color1<0,1,2,3>
                                  cmp r8.xyz, r7.w, r8.yzww, c35  // ::color2<0,1,2>
                                  mov r11.xw, c34.x
                                  mov r11.y, c36.x
                                  cmp r9.xy, r7.w, r9, r11  // ::offset1<0>, ::offset2<0>
                                  cmp r7.z, r7.z, -c4.x, -c4.y
                                  cmp r7.z, r7.y, r7.z, c3.x
                                  cmp r10, r7.z, r10, c31  // ::color1<0,1,2,3>
                                  cmp r8.xyz, r7.z, r8, c33  // ::color2<0,1,2>
                                  mov r11.z, c32.x
                                  cmp r7.zw, r7.z, r9.xyxy, r11  // ::offset1<0>, ::offset2<0>
                                  cmp r7.y, r7.y, -c4.x, -c4.y
                                  cmp r7.y, r7.x, r7.y, c3.x
                                  cmp r9, r7.y, r10, c29  // ::color1<0,1,2,3>
                                  cmp r8.xyz, r7.y, r8, c31  // ::color2<0,1,2>
                                  mov r10.xw, c30.x
                                  mov r10.y, c32.x
                                  cmp r7.yz, r7.y, r7.xzww, r10.xxyw  // ::offset1<0>, ::offset2<0>
                                  cmp r7.x, r7.x, -c4.x, -c4.y
                                  cmp r7.x, r4.x, r7.x, c3.x
                                  cmp r9, r7.x, r9, c27  // ::color1<0,1,2,3>
                                  cmp r8.xyz, r7.x, r8, c29  // ::color2<0,1,2>
                                  mov r10.yz, c28.x
                                  cmp r7.xy, r7.x, r7.yzzw, r10.zwzw  // ::offset1<0>, ::offset2<0>
                                  cmp r4.x, r4.x, -c4.x, -c4.y
                                  cmp r4.x, r2.w, r4.x, c3.x
                                  cmp r9, r4.x, r9, c25  // ::color1<0,1,2,3>
                                  cmp r8.xyz, r4.x, r8, c27  // ::color2<0,1,2>
                                  mov r10.xw, c26.x
                                  cmp r7.xy, r4.x, r7, r10  // ::offset1<0>, ::offset2<0>
                                  cmp r2.w, r2.w, -c4.x, -c4.y
                                  cmp r2.w, r3.w, r2.w, c3.x
                                  cmp r6, r2.w, r9, c23  // ::color1<0,1,2,3>
                                  cmp r1.yzw, r2.w, r8.xxyz, c25.xxyz  // ::color2<0,1,2>
                                  mov r10.z, c24.x
                                  cmp r2.yz, r2.w, r7.xxyw, r10.xzww  // ::offset1<0>, ::offset2<0>
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              add r2.z, -r2.y, r2.z  // ::q<0>
              mad r1.x, v0.x, r1.x, -r2.y
              rcp r2.y, r2.z
              mul r1.x, r1.x, r2.y
              cmp r1.x, -r2_abs.z, c3.x, r1.x  // ::p<0>

#line 221
              cmp r7.xyz, -r1_abs.yzww, c6.z, r1.yzww  // Blend::blendColor<0,1,2>

#line 229
              if_eq c0.x, r2.x

#line 232
                rcp r1.y, r1.x
                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 235
                add r1.yzw, r6.xxyz, r7.xxyz
                mul r1.yzw, r1.x, r1

#line 238
                add r2.y, -r1.x, c4.y
                mul r1.yzw, r1, c3.y
                mad r3.xyz, r2.y, r6, r1.yzww  // ::result<0,1,2>
              else
                if_eq c0.x, r4.y

#line 244
                  rcp r1.y, r1.x
                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 248
                  add r1.yzw, -r6.xxyz, c4.y
                  rcp r8.x, r7.x
                  rcp r8.y, r7.y
                  rcp r8.z, r7.z
                  mad_sat r1.yzw, r1, -r8.xxyz, c4.y  // ::result<0,1,2>

#line 251
                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                else
                  if_eq c0.x, -r4.z

#line 257
                    rcp r1.y, r1.x
                    mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 263
                    add r1.yzw, r7.xxyz, -c4.y
                    add r2.yzw, -r7.xxyz, c4.y
                    rcp r2.y, r2.y
                    mul r2.y, r2.y, r6.x
                    min r3.w, r2.y, c4.y
                    cmp r4.x, r1.y, r7.x, r3.w  // ::result<0>
                    rcp r1.y, r2.z
                    mul r1.y, r1.y, r6.y
                    min r2.y, r1.y, c4.y
                    cmp r4.y, r1.z, r7.y, r2.y  // ::result<1>
                    rcp r1.y, r2.w
                    mul r1.y, r1.y, r6.z
                    min r2.y, r1.y, c4.y
                    cmp r4.z, r1.w, r7.z, r2.y  // ::result<2>

#line 266
                    lrp r3.xyz, r1.x, r4, r6  // ::result<0,1,2>
                  else
                    if_eq c0.x, r4.w

#line 272
                      rcp r1.y, r1.x
                      mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 178
                      add r1.yzw, -r7.xxzy, r7.xzyx

#line 152
                      cmp r2.yz, r1.w, r7.xyxw, r7.xxyw
                      min r3.w, r7.z, r2.y  // ::fmin<0>
                      max r4.x, r2.z, r7.z  // ::fmax<0>
                      add r2.y, -r3.w, r4.x  // ::delta<0>
                      add r2.z, r3.w, r4.x  // ::maxplusmin<0>

#line 170
                      add r2.w, r2.z, -c4.y
                      rcp r3.w, r2.z
                      mul r3.w, r2.y, r3.w  // ::hsl<1>
                      add r2.z, -r2.z, -c4.z
                      rcp r2.z, r2.z
                      mul r2.z, r2.z, r2.y  // ::hsl<1>
                      cmp r8.x, r2.w, r2.z, r3.w  // ::hsl<1>

#line 177
                      add r2.zw, -r4.x, r7.xyxy
                      rcp r3.w, r2.y

#line 180
                      mul r1.z, r1.z, r3.w  // ::hsl<0>
                      mad r1.yw, r1, r3.w, c45.xxzy  // ::hsl<0,0>
                      cmp r1.y, -r2_abs.w, r1.y, r1.w  // ::hsl<0>
                      cmp r1.y, -r2_abs.z, r1.z, r1.y  // ::hsl<0>
                      mul r1.z, r1.y, c45.z  // ::hsl<0>

#line 185
                      mad r1.w, r1.y, c45.z, c45.w  // ::hsl<0>
                      cmp r8.yzw, r1.y, r1.z, r1.w  // ::hsl<0,0,0>
                      cmp r8, -r2_abs.y, c3.x, r8  // ::hsl<1,0,0,0>

#line 151
                      add r1.y, -r6.y, r6.x
                      cmp r1.yz, r1.y, r6.xyxw, r6.xxyw
                      min r2.y, r6.z, r1.y  // ::fmin<0>
                      max r2.z, r1.z, r6.z  // ::fmax<0>
                      add r1.y, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                      mul r2.yzw, r1.y, c3.y  // ::hsl<2,2,2>

#line 195
                      if_eq r8.x, c3.x

#line 198
                      else

#line 202
                        add r1.z, r1.y, -c4.y

#line 129
                        add r9, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                        mul r1.w, r2.w, r9.x  // ::temp2<0>
                        mad r3.w, r1.y, c3.y, r8.x
                        mad r3.w, r8.x, -r2.w, r3.w  // ::temp2<0>
                        cmp r1.z, r1.z, r3.w, r1.w  // ::temp2<0>
                        add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 128
                        add r1.w, -r9.y, c4.y
                        cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                        cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                        add r3.w, -r1.y, r1.z
                        mul r4.x, r3.w, c47.x
                        mad r4.y, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r2.y, r8.x, r1.w, r4.y  // ::rgbComponent<0>

#line 128
                        add r1.w, -r8.w, c4.y
                        add r9, r8.w, c50  // GetHue::temp3<0,0,0,0>
                        cmp r1.w, r1.w, r8.w, r9.y  // GetHue::temp3<0>
                        cmp r1.w, r8.w, r1.w, r9.x  // GetHue::temp3<0>

#line 134
                        mad r4.y, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r2.z, r8.x, r1.w, r4.y  // ::rgbComponent<0>

#line 128
                        add r1.w, -r9.z, c4.y
                        add r4.y, r8.w, -c46.z  // GetHue::temp3<0>
                        cmp r1.w, r1.w, r9.z, r4.y  // GetHue::temp3<0>
                        cmp r1.w, r9.z, r1.w, r9.w  // GetHue::temp3<0>

#line 134
                        mad r4.x, r4.x, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                        add r8.xyz, r1.w, c47.yzww
                        add r1.w, -r1.w, -c47.w
                        mul r1.w, r1.w, r3.w
                        mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                        cmp r1.y, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                        cmp r1.y, r8.y, r1.y, r1.z  // ::rgbComponent<0>
                        cmp r2.w, r8.x, r1.y, r4.x  // ::rgbComponent<0>

#line 212
                      endif

#line 279
                      lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                    else
                      mov r4.x, c0.x  // ::BlendMode<0>
                      if_eq r4.x, c45.y

#line 285
                        rcp r1.y, r1.x
                        mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 303
                        min r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 306
                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c51.x

#line 312
                          rcp r1.y, r1.x
                          mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 316
                          add r1.yzw, r6.xxyz, -r7.xxyz

#line 319
                          lrp r3.xyz, r1.x, r1_abs.yzww, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c47.x

#line 325
                            rcp r1.y, r1.x
                            mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 329
                            add r1.yzw, r6.xxyz, c3.z
                            add r1.yzw, r1, r1
                            add r2.yzw, r7.xxyz, c3.z
                            mad r1.yzw, r1, -r2, c3.y  // ::result<0,1,2>

#line 332
                            lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                          else
                            if_eq r4.x, c51.y

#line 338
                              rcp r1.y, r1.x
                              mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 343
                              add r1.yzw, r6.xxyz, -c4.y
                              mul r2.yzw, r7.xxyz, r7.xxyz
                              add r8.xyz, -r6, c4.y
                              rcp r3.w, r8.x
                              mul r2.y, r2.y, r3.w
                              min r3.w, r2.y, c4.y
                              cmp r9.x, -r1_abs.y, r6.x, r3.w  // ::result<0>
                              rcp r1.y, r8.y
                              mul r1.y, r1.y, r2.z
                              min r2.y, r1.y, c4.y
                              cmp r9.y, -r1_abs.z, r6.y, r2.y  // ::result<1>
                              rcp r1.y, r8.z
                              mul r1.y, r1.y, r2.w
                              min r2.y, r1.y, c4.y
                              cmp r9.z, -r1_abs.w, r6.z, r2.y  // ::result<2>

#line 346
                              lrp r3.xyz, r1.x, r9, r6  // ::result<0,1,2>
                            else
                              if_eq r4.x, c51.z

#line 352
                                rcp r1.y, r1.x
                                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 369
                                add r1.yzw, -r7.xxyz, c3.y
                                add r2.yzw, -r6.xxyz, c4.y
                                add r8.xyz, r7, c3.z
                                mad r8.xyz, r8, -c4_abs.z, c4_abs.y
                                mad r2.yzw, r2, -r8.xxyz, c4.y  // ::result<0,1,2>

#line 361
                                dp2add r3.w, r6.x, r7.x, c3.x  // ::result<0>
                                cmp r8.x, r1.y, r3.w, r2.y  // ::result<0>

#line 367
                                dp2add r1.y, r6.y, r7.y, c3.x  // ::result<1>
                                cmp r8.y, r1.z, r1.y, r2.z  // ::result<1>

#line 373
                                dp2add r1.y, r6.z, r7.z, c3.x  // ::result<2>
                                cmp r8.z, r1.w, r1.y, r2.w  // ::result<2>

#line 376
                                lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                              else
                                if_eq r4.x, c51.w

#line 382
                                  rcp r1.y, r1.x
                                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 387
                                  add r1.yzw, r7.xxyz, c3.z
                                  add r2.yzw, r7.xxyz, r7.xxyz
                                  add r8.xyz, -r6, c4.y
                                  rcp r3.w, r2.y
                                  mad r3.w, r8.x, -r3.w, c4.y
                                  max r4.y, r3.w, c3.x
                                  cmp r2.y, -r2.y, r2.y, r4.y
                                  add r9.xyz, r1.yzww, r1.yzww
                                  mad r10.xyz, r1.yzww, -c4.z, -c4.y
                                  mad r11.xyz, r1.yzww, -c4_abs.z, c4_abs.y
                                  rcp r3.w, r11.x
                                  mul r3.w, r3.w, r6.x
                                  min r4.y, r3.w, c4.y
                                  cmp r3.w, r10.x, r9.x, r4.y
                                  cmp r1.y, r1.y, r3.w, r2.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.x, r1.y, c4.y, c4.x  // ::result<0>
                                  rcp r1.y, r2.z
                                  mad r1.y, r8.y, -r1.y, c4.y
                                  max r2.y, r1.y, c3.x
                                  cmp r1.y, -r2.z, r2.z, r2.y
                                  rcp r2.y, r11.y
                                  mul r2.y, r2.y, r6.y
                                  min r3.w, r2.y, c4.y
                                  cmp r2.y, r10.y, r9.y, r3.w
                                  cmp r1.y, r1.z, r2.y, r1.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.y, r1.y, c4.y, c4.x  // ::result<1>
                                  rcp r1.y, r2.w
                                  mad r1.y, r8.z, -r1.y, c4.y
                                  max r2.y, r1.y, c3.x
                                  cmp r1.y, -r2.w, r2.w, r2.y
                                  rcp r1.z, r11.z
                                  mul r1.z, r1.z, r6.z
                                  min r2.y, r1.z, c4.y
                                  cmp r1.z, r10.z, r9.z, r2.y
                                  cmp r1.y, r1.w, r1.z, r1.y
                                  add r1.y, r1.y, c3.z
                                  cmp r12.z, r1.y, c4.y, c4.x  // ::result<2>

#line 390
                                  lrp r3.xyz, r1.x, r12, r6  // ::result<0,1,2>
                                else
                                  if_eq r4.x, c52.x

#line 396
                                    rcp r1.y, r1.x
                                    mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 151
                                    add r1.y, -r6.y, r6.x
                                    cmp r1.yz, r1.y, r6.xyxw, r6.xxyw
                                    min r2.y, r6.z, r1.y  // ::fmin<0>
                                    max r2.z, r1.z, r6.z  // ::fmax<0>
                                    add r1.y, -r2.y, r2.z  // ::delta<0>
                                    add r1.z, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                                    mul r2.yzw, r1.z, c3.y  // ::hsl<2,2,2>

#line 170
                                    add r1.w, r1.z, -c4.y
                                    rcp r3.w, r1.z
                                    mul r3.w, r1.y, r3.w  // ::hsl<1>
                                    add r4.y, -r1.z, -c4.z
                                    rcp r4.y, r4.y
                                    mul r4.y, r1.y, r4.y  // ::hsl<1>
                                    cmp r3.w, r1.w, r4.y, r3.w  // ::hsl<1>

#line 186
                                    cmp r1.y, -r1_abs.y, c3.x, r3.w  // ::hsl<1>

#line 195
                                    if_eq r1.y, c3.x

#line 198
                                    else

#line 178
                                      add r8.xyz, -r7.xzyw, r7.zyxw

#line 152
                                      cmp r4.yz, r8.z, r7.xyxw, r7.xxyw
                                      min r3.w, r7.z, r4.y  // ::fmin<0>
                                      max r8.w, r4.z, r7.z  // ::fmax<0>
                                      add r3.w, -r3.w, r8.w  // ::delta<0>

#line 177
                                      add r4.yz, r7.xxyw, -r8.w
                                      rcp r7.w, r3.w

#line 180
                                      mul r8.y, r7.w, r8.y  // ::hsl<0>
                                      mad r8.xz, r8, r7.w, c45.xyyw  // ::hsl<0,0>
                                      cmp r4.z, -r4_abs.z, r8.x, r8.z  // ::hsl<0>
                                      cmp r4.y, -r4_abs.y, r8.y, r4.z  // ::hsl<0>
                                      mul r4.z, r4.y, c45.z  // ::hsl<0>

#line 185
                                      mad r7.w, r4.y, c45.z, c45.w  // ::hsl<0>
                                      cmp r4.y, r4.y, r4.z, r7.w  // ::hsl<0>
                                      cmp r3.w, -r3_abs.w, c3.x, r4.y  // ::hsl<0>

#line 203
                                      add r4.y, r1.y, c4.y
                                      mul r4.y, r2.w, r4.y  // ::temp2<0>
                                      mad r4.z, r1.z, c3.y, r1.y
                                      mad r1.y, r1.y, -r2.w, r4.z  // ::temp2<0>
                                      cmp r1.y, r1.w, r1.y, r4.y  // ::temp2<0>
                                      add r1.z, -r1.y, r1.z  // ::temp1<0>

#line 127
                                      add r8, r3.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                                      add r1.w, -r8.x, c4.y
                                      cmp r1.w, r1.w, r8.x, r8.z  // GetHue::temp3<0>
                                      cmp r1.w, r8.x, r1.w, r8.y  // GetHue::temp3<0>

#line 134
                                      add r4.y, -r1.z, r1.y
                                      mul r4.z, r4.y, c47.x
                                      mad r7.w, r4.z, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r8.xyz, r1.w, c47.yzww
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r4.y
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.w, r8.z, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.w, r8.y, r1.w, r1.y  // ::rgbComponent<0>
                                      cmp r2.y, r8.x, r1.w, r7.w  // ::rgbComponent<0>

#line 128
                                      add r1.w, -r3.w, c4.y
                                      add r9, r3.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                                      cmp r1.w, r1.w, r3.w, r9.x  // GetHue::temp3<0>
                                      cmp r1.w, r3.w, r1.w, r8.w  // GetHue::temp3<0>

#line 134
                                      mad r3.w, r4.z, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r8.xyz, r1.w, c47.yzww
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r4.y
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.w, r8.z, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.w, r8.y, r1.w, r1.y  // ::rgbComponent<0>
                                      cmp r2.z, r8.x, r1.w, r3.w  // ::rgbComponent<0>

#line 128
                                      add r1.w, -r9.y, c4.y
                                      cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                                      cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                                      mad r3.w, r4.z, r1.w, r1.z  // ::rgbComponent<0>

#line 137
                                      add r8.xyz, r1.w, c47.yzww
                                      add r1.w, -r1.w, -c47.w
                                      mul r1.w, r1.w, r4.y
                                      mad r1.w, r1.w, c47.x, r1.z  // ::rgbComponent<0>
                                      cmp r1.z, r8.z, r1.z, r1.w  // ::rgbComponent<0>
                                      cmp r1.y, r8.y, r1.z, r1.y  // ::rgbComponent<0>
                                      cmp r2.w, r8.x, r1.y, r3.w  // ::rgbComponent<0>

#line 212
                                    endif

#line 403
                                    lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                                  else
                                    if_eq r4.x, c52.y

#line 409
                                      rcp r1.y, r1.x
                                      mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 428
                                      max r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 431
                                      lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                    else
                                      if_eq r4.x, c52.z

#line 437
                                        rcp r1.y, r1.x
                                        mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 441
                                        add r1.yzw, r6.xxyz, r7.xxyz
                                        add_sat r1.yzw, r1, -c4.y  // ::result<0,1,2>

#line 444
                                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                      else
                                        if_eq r4.x, c52.w

#line 450
                                          rcp r1.y, r1.x
                                          mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 454
                                          add r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 457
                                          lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                        else
                                          if_eq r4.x, c53.x

#line 463
                                            rcp r1.y, r1.x
                                            mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 480
                                            add r1.yzw, -r7.xxyz, c3.y
                                            add r2.yzw, r7.xxyz, c3.z
                                            mad r2.yzw, r2, -c4.z, r6.xxyz  // ::result<0,1,2>
                                            mad r8.xyz, r7, -c4.z, r6
                                            add r8.xyz, r8, -c4.y  // ::result<0,1,2>
                                            cmp r1.yzw, r1, r8.xxyz, r2  // ::result<0,1,2>

#line 487
                                            lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                          else
                                            if_eq r4.x, c53.y

#line 493
                                              rcp r1.y, r1.x
                                              mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 178
                                              add r1.yzw, -r6.xxzy, r6.xzyx

#line 152
                                              cmp r2.yz, r1.w, r6.xyxw, r6.xxyw
                                              min r3.w, r6.z, r2.y  // ::fmin<0>
                                              max r4.y, r2.z, r6.z  // ::fmax<0>
                                              add r2.y, -r3.w, r4.y  // ::delta<0>
                                              add r2.z, r3.w, r4.y  // ::maxplusmin<0>

#line 170
                                              add r2.w, r2.z, -c4.y
                                              rcp r3.w, r2.z
                                              mul r3.w, r2.y, r3.w  // ::hsl<1>
                                              add r2.z, -r2.z, -c4.z
                                              rcp r2.z, r2.z
                                              mul r2.z, r2.z, r2.y  // ::hsl<1>
                                              cmp r8.x, r2.w, r2.z, r3.w  // ::hsl<1>

#line 177
                                              add r2.zw, -r4.y, r6.xyxy
                                              rcp r3.w, r2.y

#line 180
                                              mul r1.z, r1.z, r3.w  // ::hsl<0>
                                              mad r1.yw, r1, r3.w, c45.xxzy  // ::hsl<0,0>
                                              cmp r1.y, -r2_abs.w, r1.y, r1.w  // ::hsl<0>
                                              cmp r1.y, -r2_abs.z, r1.z, r1.y  // ::hsl<0>
                                              mul r1.z, r1.y, c45.z  // ::hsl<0>

#line 185
                                              mad r1.w, r1.y, c45.z, c45.w  // ::hsl<0>
                                              cmp r8.yzw, r1.y, r1.z, r1.w  // ::hsl<0,0,0>
                                              cmp r8, -r2_abs.y, c3.x, r8  // ::hsl<1,0,0,0>

#line 151
                                              add r1.y, -r7.y, r7.x
                                              cmp r1.yz, r1.y, r7.xyxw, r7.xxyw
                                              min r2.y, r7.z, r1.y  // ::fmin<0>
                                              max r2.z, r1.z, r7.z  // ::fmax<0>
                                              add r1.y, r2.y, r2.z  // ::maxplusmin<0>

#line 157
                                              mul r2.yzw, r1.y, c3.y  // ::hsl<2,2,2>

#line 195
                                              if_eq r8.x, c3.x

#line 198
                                              else

#line 202
                                                add r1.z, r1.y, -c4.y

#line 129
                                                add r9, r8, c46  // GetHue::temp3<0,0,0>

#line 203
                                                mul r1.w, r2.w, r9.x  // ::temp2<0>
                                                mad r3.w, r1.y, c3.y, r8.x
                                                mad r3.w, r8.x, -r2.w, r3.w  // ::temp2<0>
                                                cmp r1.z, r1.z, r3.w, r1.w  // ::temp2<0>
                                                add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 128
                                                add r1.w, -r9.y, c4.y
                                                cmp r1.w, r1.w, r9.y, r9.w  // GetHue::temp3<0>
                                                cmp r1.w, r9.y, r1.w, r9.z  // GetHue::temp3<0>

#line 134
                                                add r3.w, -r1.y, r1.z
                                                mul r4.y, r3.w, c47.x
                                                mad r4.z, r4.y, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r8.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                                                cmp r2.y, r8.x, r1.w, r4.z  // ::rgbComponent<0>

#line 128
                                                add r1.w, -r8.w, c4.y
                                                add r9, r8.w, c50  // GetHue::temp3<0,0,0,0>
                                                cmp r1.w, r1.w, r8.w, r9.y  // GetHue::temp3<0>
                                                cmp r1.w, r8.w, r1.w, r9.x  // GetHue::temp3<0>

#line 134
                                                mad r4.z, r4.y, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r8.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.w, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.w, r8.y, r1.w, r1.z  // ::rgbComponent<0>
                                                cmp r2.z, r8.x, r1.w, r4.z  // ::rgbComponent<0>

#line 128
                                                add r1.w, -r9.z, c4.y
                                                add r4.z, r8.w, -c46.z  // GetHue::temp3<0>
                                                cmp r1.w, r1.w, r9.z, r4.z  // GetHue::temp3<0>
                                                cmp r1.w, r9.z, r1.w, r9.w  // GetHue::temp3<0>

#line 134
                                                mad r4.y, r4.y, r1.w, r1.y  // ::rgbComponent<0>

#line 137
                                                add r8.xyz, r1.w, c47.yzww
                                                add r1.w, -r1.w, -c47.w
                                                mul r1.w, r1.w, r3.w
                                                mad r1.w, r1.w, c47.x, r1.y  // ::rgbComponent<0>
                                                cmp r1.y, r8.z, r1.y, r1.w  // ::rgbComponent<0>
                                                cmp r1.y, r8.y, r1.y, r1.z  // ::rgbComponent<0>
                                                cmp r2.w, r8.x, r1.y, r4.y  // ::rgbComponent<0>

#line 212
                                              endif

#line 500
                                              lrp r3.xyz, r1.x, r2.yzww, r6  // ::result<0,1,2>
                                            else
                                              if_eq r4.x, c53.z

#line 506
                                                rcp r1.y, r1.x
                                                mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 510
                                                mul r1.yzw, r6.xxyz, r7.xxyz  // ::result<0,1,2>

#line 513
                                                lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                              else
                                                if_eq r4.x, c53.w

#line 519
                                                  rcp r1.y, r1.x
                                                  mul_sat r7.xyz, r1.y, r7  // Blend::blendColor<0,1,2>

#line 522
                                                  add r1.yzw, -r6.xxyz, c4.y
                                                  add r1.yzw, -r7.xxyz, r1
                                                  add r1.yzw, -r1_abs, c4.y  // ::result<0,1,2>

#line 525
                                                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                                                else
                                                  if_eq r4.x, c49.x
                                                    add r1.y, -r1.x, c4.y
                                                    add r1.z, -r6.w, c4.y
                                                    mad r1.z, r1.y, -r1.z, c4.y  // ::result<3>

#line 533
                                                    mul r2.yzw, r1.x, r7.xxyz
                                                    rcp r1.z, r1.z
                                                    mul r8.xyz, r6.w, r6
                                                    mul r8.xyz, r1.y, r8
                                                    mul r8.xyz, r1.z, r8
                                                    mad r3.xyz, r2.yzww, r1.z, r8  // ::result<0,1,2>
                                                  else
                                                    add r1.y, r4.x, c49.y

#line 539
                                                    rcp r1.z, r1.x
                                                    mul_sat r2.yzw, r1.z, r7.xxyz  // Blend::blendColor<0,1,2>

#line 557
                                                    add r4.xyz, -r6, c3.y
                                                    add r8.xyz, r6, c3.z
                                                    mad r8.xyz, r8, -c4_abs.z, c4_abs.y
                                                    add r9.xyz, -r2.yzww, c4.y
                                                    mad r8.xyz, r8, -r9, c4.y  // ::result<0,1,2>

#line 549
                                                    dp2add r1.z, r2.y, r6.x, c3.x  // ::result<0>
                                                    cmp r9.x, r4.x, r1.z, r8.x  // ::result<0>

#line 555
                                                    dp2add r1.z, r2.z, r6.y, c3.x  // ::result<1>
                                                    cmp r9.y, r4.y, r1.z, r8.y  // ::result<1>

#line 561
                                                    dp2add r1.z, r2.w, r6.z, c3.x  // ::result<2>
                                                    cmp r9.z, r4.z, r1.z, r8.z  // ::result<2>

#line 564
                                                    lrp r3.xyz, r1.x, r9, r6  // ::result<0,1,2>
                                                    cmp r7.xyz, -r1_abs.y, r2.yzww, r7  // Blend::blendColor<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              mov r4.x, c0.x  // ::BlendMode<0>
              if_eq r4.x, c49.z

#line 570
                rcp r1.y, r1.x
                mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 573
                min r2.yzw, r1, r6.xxyz
                max r8.xyz, r6, r1.yzww
                add r1.yzw, r2, -r8.xxyz
                add r1.yzw, r1, c4.y  // ::result<0,1,2>

#line 576
                lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
              else
                if_eq r4.x, c49.w

#line 582
                  rcp r1.y, r1.x
                  mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 599
                  add r2.yzw, -r1, c3.y
                  add r8.xyz, r1.yzww, c3.z
                  add r8.xyz, r8, r8
                  max r9.xyz, r6, r8  // ::result<0,1,2>
                  add r1.yzw, r1, r1
                  min r8.xyz, r1.yzww, r6  // ::result<0,1,2>
                  cmp r1.yzw, r2, r8.xxyz, r9.xxyz  // ::result<0,1,2>

#line 606
                  lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                else
                  if_eq r4.x, c54.x

#line 612
                    rcp r1.y, r1.x
                    mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 617
                    add r2.yzw, r1, -c4.y
                    mul r8.xyz, r6, r6
                    add r9.xyz, -r1.yzww, c4.y
                    rcp r3.w, r9.x
                    mul r3.w, r3.w, r8.x
                    min r4.y, r3.w, c4.y
                    cmp r10.x, r2.y, r1.y, r4.y  // ::result<0>
                    rcp r1.y, r9.y
                    mul r1.y, r1.y, r8.y
                    min r2.y, r1.y, c4.y
                    cmp r10.y, r2.z, r1.z, r2.y  // ::result<1>
                    rcp r1.y, r9.z
                    mul r1.y, r1.y, r8.z
                    min r2.y, r1.y, c4.y
                    cmp r10.z, r2.w, r1.w, r2.y  // ::result<2>

#line 620
                    lrp r3.xyz, r1.x, r10, r6  // ::result<0,1,2>
                  else

#line 626
                    if_eq r4.x, c54.y

#line 629
                      rcp r1.y, r1.x
                      mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 151
                      add r2.y, -r6.y, r6.x
                      cmp r2.zw, r2.y, r6.xyyx, r6.xyxy
                      min r3.w, r6.z, r2.z  // ::fmin<0>
                      max r4.y, r2.w, r6.z  // ::fmax<0>
                      add r2.z, r3.w, r4.y  // ::maxplusmin<0>

#line 157
                      mul r8.xyz, r2.z, c3.y  // ::hsl<2,2,2>

#line 151
                      add r2.w, -r1.z, r1.y
                      cmp r1.yz, r2.w, r1.xzyw, r1
                      min r2.w, r1.w, r1.y  // ::fmin<0>
                      max r4.z, r1.z, r1.w  // ::fmax<0>
                      add r1.y, -r2.w, r4.z  // ::delta<0>
                      add r1.z, r2.w, r4.z  // ::maxplusmin<0>

#line 170
                      add r1.w, r1.z, -c4.y
                      rcp r2.w, r1.z
                      mul r2.w, r1.y, r2.w  // ::hsl<1>
                      add r1.z, -r1.z, -c4.z
                      rcp r1.z, r1.z
                      mul r1.z, r1.z, r1.y  // ::hsl<1>
                      cmp r1.z, r1.w, r1.z, r2.w  // ::hsl<1>

#line 186
                      cmp r1.y, -r1_abs.y, c3.x, r1.z  // ::hsl<1>

#line 195
                      if_eq r1.y, c3.x

#line 198
                      else

#line 153
                        add r1.z, -r3.w, r4.y  // ::delta<0>

#line 177
                        add r4.yz, -r4.y, r6.xxyw
                        add r1.w, -r6.z, r6.y
                        rcp r2.w, r1.z
                        mul r1.w, r1.w, r2.w  // ::hsl<0>
                        add r3.w, -r6.x, r6.z
                        mad r3.w, r3.w, r2.w, -c4.z  // ::hsl<0>
                        mad r2.y, r2.y, r2.w, c45.y  // ::hsl<0>
                        cmp r2.y, -r4_abs.z, r3.w, r2.y  // ::hsl<0>
                        cmp r1.w, -r4_abs.y, r1.w, r2.y  // ::hsl<0>
                        mul r2.y, r1.w, c45.z  // ::hsl<0>

#line 185
                        mad r2.w, r1.w, c45.z, c45.w  // ::hsl<0>
                        cmp r1.w, r1.w, r2.y, r2.w  // ::hsl<0>
                        cmp r1.z, -r1_abs.z, c3.x, r1.w  // ::hsl<0>

#line 202
                        add r1.w, r2.z, -c4.y
                        add r2.y, r1.y, c4.y
                        mul r2.y, r2.y, r8.z  // ::temp2<0>
                        mad r2.w, r2.z, c3.y, r1.y
                        mad r1.y, r1.y, -r8.z, r2.w  // ::temp2<0>
                        cmp r1.y, r1.w, r1.y, r2.y  // ::temp2<0>
                        add r1.w, -r1.y, r2.z  // ::temp1<0>

#line 127
                        add r9, r1.z, c46.yzwx  // GetHue::temp3<0,0,0,0>
                        add r2.y, -r9.x, c4.y
                        cmp r2.y, r2.y, r9.x, r9.z  // GetHue::temp3<0>
                        cmp r2.y, r9.x, r2.y, r9.y  // GetHue::temp3<0>

#line 134
                        add r2.z, -r1.w, r1.y
                        mul r2.w, r2.z, c47.x
                        mad r3.w, r2.w, r2.y, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r2.y, c47.yzww
                        add r2.y, -r2.y, -c47.w
                        mul r2.y, r2.y, r2.z
                        mad r2.y, r2.y, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r2.y, r9.z, r1.w, r2.y  // ::rgbComponent<0>
                        cmp r2.y, r9.y, r2.y, r1.y  // ::rgbComponent<0>
                        cmp r8.x, r9.x, r2.y, r3.w  // ::rgbComponent<0>

#line 128
                        add r2.y, -r1.z, c4.y
                        add r10, r1.z, -c46.xywz  // GetHue::temp3<0,0,0,0>
                        cmp r2.y, r2.y, r1.z, r10.x  // GetHue::temp3<0>
                        cmp r1.z, r1.z, r2.y, r9.w  // GetHue::temp3<0>

#line 134
                        mad r2.y, r2.w, r1.z, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r1.z, c47.yzww
                        add r1.z, -r1.z, -c47.w
                        mul r1.z, r1.z, r2.z
                        mad r1.z, r1.z, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r1.z, r9.z, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r1.z, r9.y, r1.z, r1.y  // ::rgbComponent<0>
                        cmp r8.y, r9.x, r1.z, r2.y  // ::rgbComponent<0>

#line 128
                        add r1.z, -r10.y, c4.y
                        cmp r1.z, r1.z, r10.y, r10.w  // GetHue::temp3<0>
                        cmp r1.z, r10.y, r1.z, r10.z  // GetHue::temp3<0>

#line 134
                        mad r2.y, r2.w, r1.z, r1.w  // ::rgbComponent<0>

#line 137
                        add r9.xyz, r1.z, c47.yzww
                        add r1.z, -r1.z, -c47.w
                        mul r1.z, r1.z, r2.z
                        mad r1.z, r1.z, c47.x, r1.w  // ::rgbComponent<0>
                        cmp r1.z, r9.z, r1.w, r1.z  // ::rgbComponent<0>
                        cmp r1.y, r9.y, r1.z, r1.y  // ::rgbComponent<0>
                        cmp r8.z, r9.x, r1.y, r2.y  // ::rgbComponent<0>

#line 212
                      endif

#line 636
                      lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                    else
                      if_eq r4.x, c54.z

#line 642
                        rcp r1.y, r1.x
                        mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 646
                        add r2.yzw, -r6.xxyz, c4.y
                        add r1.yzw, -r1, c4.y
                        mad r1.yzw, r2, -r1, c4.y  // ::result<0,1,2>

#line 649
                        lrp r3.xyz, r1.x, r1.yzww, r6  // ::result<0,1,2>
                      else
                        if_eq r4.x, c54.w

#line 655
                          rcp r1.y, r1.x
                          mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 660
                          add r2.yzw, r1, c3.z
                          add r8.xyz, r6, r6
                          mul r9.xyz, r6, r6
                          mad r10.xyz, r1.yzww, -c4_abs.z, c4_abs.y
                          mul r9.xyz, r9, r10
                          mad r9.xyz, r8, r1.yzww, r9
                          rsq r3.w, r6.x
                          rcp r3.w, r3.w
                          mad r10.xyz, r1.yzww, -c4.z, -c4.y
                          add r1.yzw, -r1, c4.y
                          mul r1.yzw, r1, r8.xxyz
                          mad r1.y, r3.w, r10.x, r1.y
                          cmp r8.x, r2.y, r1.y, r9.x  // ::result<0>
                          rsq r1.y, r6.y
                          rcp r1.y, r1.y
                          mad r1.y, r1.y, r10.y, r1.z
                          cmp r8.y, r2.z, r1.y, r9.y  // ::result<1>
                          rsq r1.y, r6.z
                          rcp r1.y, r1.y
                          mad r1.y, r1.y, r10.z, r1.w
                          cmp r8.z, r2.w, r1.y, r9.z  // ::result<2>

#line 663
                          lrp r3.xyz, r1.x, r8, r6  // ::result<0,1,2>
                        else
                          if_eq r4.x, c48.x

#line 669
                            rcp r1.y, r1.x
                            mul_sat r1.yzw, r1.y, r7.xxyz  // Blend::blendColor<0,1,2>

#line 674
                            add r2.yzw, r1, c3.z
                            add r1.yzw, r1, r1
                            add r4.xyz, -r6, c4.y
                            rcp r3.w, r1.y
                            mad r3.w, r4.x, -r3.w, c4.y
                            max r4.x, r3.w, c3.x
                            cmp r1.y, -r1.y, r1.y, r4.x
                            add r7.xyz, r2.yzww, r2.yzww
                            mad r8.xyz, r2.yzww, -c4.z, -c4.y
                            mad r9.xyz, r2.yzww, -c4_abs.z, c4_abs.y
                            rcp r3.w, r9.x
                            mul r3.w, r3.w, r6.x
                            min r4.x, r3.w, c4.y
                            cmp r3.w, r8.x, r7.x, r4.x
                            cmp r10.x, r2.y, r3.w, r1.y  // ::result<0>
                            rcp r1.y, r1.z
                            mad r1.y, r4.y, -r1.y, c4.y
                            max r2.y, r1.y, c3.x
                            cmp r1.y, -r1.z, r1.z, r2.y
                            rcp r1.z, r9.y
                            mul r1.z, r1.z, r6.y
                            min r2.y, r1.z, c4.y
                            cmp r1.z, r8.y, r7.y, r2.y
                            cmp r10.y, r2.z, r1.z, r1.y  // ::result<1>
                            rcp r1.y, r1.w
                            mad r1.y, r4.z, -r1.y, c4.y
                            max r2.y, r1.y, c3.x
                            cmp r1.y, -r1.w, r1.w, r2.y
                            rcp r1.z, r9.z
                            mul r1.z, r1.z, r6.z
                            min r2.y, r1.z, c4.y
                            cmp r1.z, r8.z, r7.z, r2.y
                            cmp r10.z, r2.w, r1.z, r1.y  // ::result<2>

#line 677
                            lrp r3.xyz, r1.x, r10, r6  // ::result<0,1,2>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif

#line 926
            endif
          endif
        endif

#line 221
        cmp r1.xyz, -r3_abs, c6.z, r3  // Blend::blendColor<0,1,2>

#line 229
        if_eq c0.x, r2.x

#line 232
          rcp r1.w, c1.x
          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 235
          add r2.xyz, r0, r1
          mul r2.xyz, r2, c1.x

#line 238
          mov r3.y, c4.y
          add r1.w, r3.y, -c1.x
          mul r2.xyz, r2, c3.y
          mad r5.xyz, r1.w, r0, r2  // ::result<0,1,2>
          mov r5.w, r0.w  // ::result<3>
        else
          mov r2.yz, c4
          if_eq c0.x, r2.y

#line 244
            rcp r1.w, c1.x
            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 248
            add r3.xyz, -r0, c4.y
            rcp r4.x, r1.x
            rcp r4.y, r1.y
            rcp r4.z, r1.z
            mad_sat r3.xyz, r3, -r4, c4.y  // ::result<0,1,2>

#line 251
            lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
            mov r5.w, r0.w  // ::result<3>
          else
            if_eq c0.x, -r2.z

#line 257
              rcp r1.w, c1.x
              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 263
              add r2.xzw, r1.xyyz, -c4.y
              add r3.xyz, -r1, c4.y
              rcp r1.w, r3.x
              mul r1.w, r0.x, r1.w
              min r3.x, r1.w, c4.y
              cmp r4.x, r2.x, r1.x, r3.x  // ::result<0>
              rcp r1.w, r3.y
              mul r1.w, r0.y, r1.w
              min r2.x, r1.w, c4.y
              cmp r4.y, r2.z, r1.y, r2.x  // ::result<1>
              rcp r1.w, r3.z
              mul r1.w, r0.z, r1.w
              min r2.x, r1.w, c4.y
              cmp r4.z, r2.w, r1.z, r2.x  // ::result<2>

#line 266
              lrp r5.xyz, c1.x, r4, r0  // ::result<0,1,2>
              mov r5.w, r0.w  // ::result<3>
            else
              if_eq c0.x, r4.w

#line 272
                rcp r1.w, c1.x
                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 178
                add r2.xzw, -r1.xyzy, r1.zyyx

#line 152
                cmp r3.xy, r2.w, r1.yxzw, r1
                min r4.x, r1.z, r3.x  // ::fmin<0>
                max r4.y, r3.y, r1.z  // ::fmax<0>
                add r1.w, -r4.x, r4.y  // ::delta<0>
                add r3.x, r4.x, r4.y  // ::maxplusmin<0>

#line 170
                add r3.y, r3.x, -c4.y
                rcp r3.z, r3.x
                add r3.x, -r3.x, -c4.z
                rcp r3.x, r3.x
                mul r3.xz, r1.w, r3  // ::hsl<1,1>
                cmp r3.x, r3.y, r3.x, r3.z  // ::hsl<1>

#line 177
                add r4.xy, r1, -r4.y
                rcp r4.z, r1.w

#line 180
                mul r2.z, r2.z, r4.z  // ::hsl<0>
                mad r2.xw, r2, r4.z, c45.xyzy  // ::hsl<0,0>
                cmp r2.x, -r4_abs.y, r2.x, r2.w  // ::hsl<0>
                cmp r2.x, -r4_abs.x, r2.z, r2.x  // ::hsl<0>
                mul r2.z, r2.x, c45.z  // ::hsl<0>

#line 185
                mad r2.w, r2.x, c45.z, c45.w  // ::hsl<0>
                cmp r3.yzw, r2.x, r2.z, r2.w  // ::hsl<0,0,0>
                cmp r3, -r1_abs.w, c3.x, r3  // ::hsl<1,0,0,0>

#line 151
                add r1.w, -r0.y, r0.x
                cmp r2.xz, r1.w, r0.yyxw, r0.xyyw
                min r1.w, r0.z, r2.x  // ::fmin<0>
                max r4.x, r2.z, r0.z  // ::fmax<0>
                add r1.w, r1.w, r4.x  // ::maxplusmin<0>

#line 157
                mul r2.xzw, r1.w, c3.y  // ::hsl<2,2,2>

#line 195
                if_eq r3.x, c3.x

#line 198
                else

#line 202
                  add r4.x, r1.w, -c4.y

#line 129
                  add r6, r3, c46  // GetHue::temp3<0,0,0>

#line 203
                  mul r3.y, r2.w, r6.x  // ::temp2<0>
                  mad r3.z, r1.w, c3.y, r3.x
                  mad r3.x, r3.x, -r2.w, r3.z  // ::temp2<0>
                  cmp r3.x, r4.x, r3.x, r3.y  // ::temp2<0>
                  add r1.w, r1.w, -r3.x  // ::temp1<0>

#line 128
                  add r3.y, -r6.y, c4.y
                  cmp r3.y, r3.y, r6.y, r6.w  // GetHue::temp3<0>
                  cmp r3.y, r6.y, r3.y, r6.z  // GetHue::temp3<0>

#line 134
                  add r3.z, -r1.w, r3.x
                  mul r4.x, r3.z, c47.x
                  mad r4.y, r4.x, r3.y, r1.w  // ::rgbComponent<0>

#line 137
                  add r6.xyz, r3.y, c47.yzww
                  add r3.y, -r3.y, -c47.w
                  mul r3.y, r3.y, r3.z
                  mad r3.y, r3.y, c47.x, r1.w  // ::rgbComponent<0>
                  cmp r3.y, r6.z, r1.w, r3.y  // ::rgbComponent<0>
                  cmp r3.y, r6.y, r3.y, r3.x  // ::rgbComponent<0>
                  cmp r2.x, r6.x, r3.y, r4.y  // ::rgbComponent<0>

#line 128
                  add r3.y, -r3.w, c4.y
                  add r6, r3.w, c50  // GetHue::temp3<0,0,0,0>
                  cmp r3.y, r3.y, r3.w, r6.y  // GetHue::temp3<0>
                  cmp r3.y, r3.w, r3.y, r6.x  // GetHue::temp3<0>

#line 134
                  mad r4.y, r4.x, r3.y, r1.w  // ::rgbComponent<0>

#line 137
                  add r7.xyz, r3.y, c47.yzww
                  add r3.y, -r3.y, -c47.w
                  mul r3.y, r3.y, r3.z
                  mad r3.y, r3.y, c47.x, r1.w  // ::rgbComponent<0>
                  cmp r3.y, r7.z, r1.w, r3.y  // ::rgbComponent<0>
                  cmp r3.y, r7.y, r3.y, r3.x  // ::rgbComponent<0>
                  cmp r2.z, r7.x, r3.y, r4.y  // ::rgbComponent<0>

#line 128
                  add r3.y, -r6.z, c4.y
                  add r3.w, r3.w, -c46.z  // GetHue::temp3<0>
                  cmp r3.y, r3.y, r6.z, r3.w  // GetHue::temp3<0>
                  cmp r3.y, r6.z, r3.y, r6.w  // GetHue::temp3<0>

#line 134
                  mad r3.w, r4.x, r3.y, r1.w  // ::rgbComponent<0>

#line 137
                  add r4.xyz, r3.y, c47.yzww
                  add r3.y, -r3.y, -c47.w
                  mul r3.y, r3.y, r3.z
                  mad r3.y, r3.y, c47.x, r1.w  // ::rgbComponent<0>
                  cmp r1.w, r4.z, r1.w, r3.y  // ::rgbComponent<0>
                  cmp r1.w, r4.y, r1.w, r3.x  // ::rgbComponent<0>
                  cmp r2.w, r4.x, r1.w, r3.w  // ::rgbComponent<0>

#line 212
                endif

#line 279
                lrp r5.xyz, c1.x, r2.xzww, r0  // ::result<0,1,2>
                mov r5.w, r0.w  // ::result<3>
              else
                mov r2.x, c0.x  // ::BlendMode<0>
                if_eq r2.x, c45.y

#line 285
                  rcp r1.w, c1.x
                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 303
                  min r3.xyz, r0, r1  // ::result<0,1,2>

#line 306
                  lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                  mov r5.w, r0.w  // ::result<3>
                else
                  if_eq r2.x, c51.x

#line 312
                    rcp r1.w, c1.x
                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 316
                    add r3.xyz, r0, -r1

#line 319
                    lrp r5.xyz, c1.x, r3_abs, r0  // ::result<0,1,2>
                    mov r5.w, r0.w  // ::result<3>
                  else
                    if_eq r2.x, c47.x

#line 325
                      rcp r1.w, c1.x
                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 329
                      add r3.xyz, r0, c3.z
                      add r3.xyz, r3, r3
                      add r4.xyz, r1, c3.z
                      mad r3.xyz, r3, -r4, c3.y  // ::result<0,1,2>

#line 332
                      lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                      mov r5.w, r0.w  // ::result<3>
                    else
                      if_eq r2.x, c51.y

#line 338
                        rcp r1.w, c1.x
                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 343
                        add r3.xyz, r0, -c4.y
                        mul r4.xyz, r1, r1
                        add r6.xyz, -r0, c4.y
                        rcp r1.w, r6.x
                        mul r1.w, r1.w, r4.x
                        min r2.z, r1.w, c4.y
                        cmp r7.x, -r3_abs.x, r0.x, r2.z  // ::result<0>
                        rcp r1.w, r6.y
                        mul r1.w, r1.w, r4.y
                        min r2.z, r1.w, c4.y
                        cmp r7.y, -r3_abs.y, r0.y, r2.z  // ::result<1>
                        rcp r1.w, r6.z
                        mul r1.w, r1.w, r4.z
                        min r2.z, r1.w, c4.y
                        cmp r7.z, -r3_abs.z, r0.z, r2.z  // ::result<2>

#line 346
                        lrp r5.xyz, c1.x, r7, r0  // ::result<0,1,2>
                        mov r5.w, r0.w  // ::result<3>
                      else
                        if_eq r2.x, c51.z

#line 352
                          rcp r1.w, c1.x
                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 369
                          add r3.xyz, -r1, c3.y
                          add r4.xyz, -r0, c4.y
                          add r6.xyz, r1, c3.z
                          mad r6.xyz, r6, -c4_abs.z, c4_abs.y
                          mad r4.xyz, r4, -r6, c4.y  // ::result<0,1,2>

#line 361
                          dp2add r1.w, r0.x, r1.x, c3.x  // ::result<0>
                          cmp r6.x, r3.x, r1.w, r4.x  // ::result<0>

#line 367
                          dp2add r1.w, r0.y, r1.y, c3.x  // ::result<1>
                          cmp r6.y, r3.y, r1.w, r4.y  // ::result<1>

#line 373
                          dp2add r1.w, r0.z, r1.z, c3.x  // ::result<2>
                          cmp r6.z, r3.z, r1.w, r4.z  // ::result<2>

#line 376
                          lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
                          mov r5.w, r0.w  // ::result<3>
                        else
                          if_eq r2.x, c51.w

#line 382
                            rcp r1.w, c1.x
                            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 387
                            add r3.xyz, r1, c3.z
                            add r4.xyz, r1, r1
                            add r6.xyz, -r0, c4.y
                            rcp r1.w, r4.x
                            mad r1.w, r6.x, -r1.w, c4.y
                            max r2.z, r1.w, c3.x
                            cmp r1.w, -r4.x, r4.x, r2.z
                            add r7.xyz, r3, r3
                            mad r8.xyz, r3, -c4.z, -c4.y
                            mad r9.xyz, r3, -c4_abs.z, c4_abs.y
                            rcp r2.z, r9.x
                            mul r2.z, r0.x, r2.z
                            min r3.w, r2.z, c4.y
                            cmp r2.z, r8.x, r7.x, r3.w
                            cmp r1.w, r3.x, r2.z, r1.w
                            add r1.w, r1.w, c3.z
                            cmp r10.x, r1.w, c4.y, c4.x  // ::result<0>
                            rcp r1.w, r4.y
                            mad r1.w, r6.y, -r1.w, c4.y
                            max r2.z, r1.w, c3.x
                            cmp r1.w, -r4.y, r4.y, r2.z
                            rcp r2.z, r9.y
                            mul r2.z, r0.y, r2.z
                            min r3.x, r2.z, c4.y
                            cmp r2.z, r8.y, r7.y, r3.x
                            cmp r1.w, r3.y, r2.z, r1.w
                            add r1.w, r1.w, c3.z
                            cmp r10.y, r1.w, c4.y, c4.x  // ::result<1>
                            rcp r1.w, r4.z
                            mad r1.w, r6.z, -r1.w, c4.y
                            max r2.z, r1.w, c3.x
                            cmp r1.w, -r4.z, r4.z, r2.z
                            rcp r2.z, r9.z
                            mul r2.z, r0.z, r2.z
                            min r3.x, r2.z, c4.y
                            cmp r2.z, r8.z, r7.z, r3.x
                            cmp r1.w, r3.z, r2.z, r1.w
                            add r1.w, r1.w, c3.z
                            cmp r10.z, r1.w, c4.y, c4.x  // ::result<2>

#line 390
                            lrp r5.xyz, c1.x, r10, r0  // ::result<0,1,2>
                            mov r5.w, r0.w  // ::result<3>
                          else
                            if_eq r2.x, c52.x

#line 396
                              rcp r1.w, c1.x
                              mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 151
                              add r1.w, -r0.y, r0.x
                              cmp r2.zw, r1.w, r0.xyyx, r0.xyxy
                              min r1.w, r0.z, r2.z  // ::fmin<0>
                              max r3.x, r2.w, r0.z  // ::fmax<0>
                              add r2.z, -r1.w, r3.x  // ::delta<0>
                              add r1.w, r1.w, r3.x  // ::maxplusmin<0>

#line 157
                              mul r3.xyz, r1.w, c3.y  // ::hsl<2,2,2>

#line 170
                              add r2.w, r1.w, -c4.y
                              rcp r3.w, r1.w
                              mul r3.w, r2.z, r3.w  // ::hsl<1>
                              add r4.x, -r1.w, -c4.z
                              rcp r4.x, r4.x
                              mul r4.x, r2.z, r4.x  // ::hsl<1>
                              cmp r3.w, r2.w, r4.x, r3.w  // ::hsl<1>

#line 186
                              cmp r2.z, -r2_abs.z, c3.x, r3.w  // ::hsl<1>

#line 195
                              if_eq r2.z, c3.x

#line 198
                              else

#line 178
                                add r4.xyz, -r1.xzyw, r1.zyxw

#line 152
                                cmp r6.xy, r4.z, r1.yxzw, r1
                                min r3.w, r1.z, r6.x  // ::fmin<0>
                                max r4.w, r6.y, r1.z  // ::fmax<0>
                                add r3.w, -r3.w, r4.w  // ::delta<0>

#line 177
                                add r6.xy, r1, -r4.w
                                rcp r4.w, r3.w

#line 180
                                mul r4.y, r4.w, r4.y  // ::hsl<0>
                                mad r4.xz, r4, r4.w, c45.xyyw  // ::hsl<0,0>
                                cmp r4.x, -r6_abs.y, r4.x, r4.z  // ::hsl<0>
                                cmp r4.x, -r6_abs.x, r4.y, r4.x  // ::hsl<0>
                                mul r4.y, r4.x, c45.z  // ::hsl<0>

#line 185
                                mad r4.z, r4.x, c45.z, c45.w  // ::hsl<0>
                                cmp r4.x, r4.x, r4.y, r4.z  // ::hsl<0>
                                cmp r3.w, -r3_abs.w, c3.x, r4.x  // ::hsl<0>

#line 203
                                add r4.x, r2.z, c4.y
                                mul r4.x, r3.z, r4.x  // ::temp2<0>
                                mad r4.y, r1.w, c3.y, r2.z
                                mad r2.z, r2.z, -r3.z, r4.y  // ::temp2<0>
                                cmp r2.z, r2.w, r2.z, r4.x  // ::temp2<0>
                                add r1.w, r1.w, -r2.z  // ::temp1<0>

#line 127
                                add r4, r3.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                                add r2.w, -r4.x, c4.y
                                cmp r2.w, r2.w, r4.x, r4.z  // GetHue::temp3<0>
                                cmp r2.w, r4.x, r2.w, r4.y  // GetHue::temp3<0>

#line 134
                                add r4.x, -r1.w, r2.z
                                mul r4.y, r4.x, c47.x
                                mad r4.z, r4.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                add r6.xyz, r2.w, c47.yzww
                                add r2.w, -r2.w, -c47.w
                                mul r2.w, r2.w, r4.x
                                mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                cmp r2.w, r6.z, r1.w, r2.w  // ::rgbComponent<0>
                                cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
                                cmp r3.x, r6.x, r2.w, r4.z  // ::rgbComponent<0>

#line 128
                                add r2.w, -r3.w, c4.y
                                add r6, r3.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                                cmp r2.w, r2.w, r3.w, r6.x  // GetHue::temp3<0>
                                cmp r2.w, r3.w, r2.w, r4.w  // GetHue::temp3<0>

#line 134
                                mad r3.w, r4.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                add r7.xyz, r2.w, c47.yzww
                                add r2.w, -r2.w, -c47.w
                                mul r2.w, r2.w, r4.x
                                mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                cmp r2.w, r7.z, r1.w, r2.w  // ::rgbComponent<0>
                                cmp r2.w, r7.y, r2.w, r2.z  // ::rgbComponent<0>
                                cmp r3.y, r7.x, r2.w, r3.w  // ::rgbComponent<0>

#line 128
                                add r2.w, -r6.y, c4.y
                                cmp r2.w, r2.w, r6.y, r6.w  // GetHue::temp3<0>
                                cmp r2.w, r6.y, r2.w, r6.z  // GetHue::temp3<0>

#line 134
                                mad r3.w, r4.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                add r4.yzw, r2.w, c47
                                add r2.w, -r2.w, -c47.w
                                mul r2.w, r2.w, r4.x
                                mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                cmp r1.w, r4.w, r1.w, r2.w  // ::rgbComponent<0>
                                cmp r1.w, r4.z, r1.w, r2.z  // ::rgbComponent<0>
                                cmp r3.z, r4.y, r1.w, r3.w  // ::rgbComponent<0>

#line 212
                              endif

#line 403
                              lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                              mov r5.w, r0.w  // ::result<3>
                            else
                              if_eq r2.x, c52.y

#line 409
                                rcp r1.w, c1.x
                                mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 428
                                max r3.xyz, r0, r1  // ::result<0,1,2>

#line 431
                                lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                mov r5.w, r0.w  // ::result<3>
                              else
                                if_eq r2.x, c52.z

#line 437
                                  rcp r1.w, c1.x
                                  mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 441
                                  add r3.xyz, r0, r1
                                  add_sat r3.xyz, r3, -c4.y  // ::result<0,1,2>

#line 444
                                  lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                  mov r5.w, r0.w  // ::result<3>
                                else
                                  if_eq r2.x, c52.w

#line 450
                                    rcp r1.w, c1.x
                                    mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 454
                                    add r3.xyz, r0, r1  // ::result<0,1,2>

#line 457
                                    lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                    mov r5.w, r0.w  // ::result<3>
                                  else
                                    if_eq r2.x, c53.x

#line 463
                                      rcp r1.w, c1.x
                                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 480
                                      add r3.xyz, -r1, c3.y
                                      add r4.xyz, r1, c3.z
                                      mad r4.xyz, r4, -c4.z, r0  // ::result<0,1,2>
                                      mad r6.xyz, r1, -c4.z, r0
                                      add r6.xyz, r6, -c4.y  // ::result<0,1,2>
                                      cmp r3.xyz, r3, r6, r4  // ::result<0,1,2>

#line 487
                                      lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                      mov r5.w, r0.w  // ::result<3>
                                    else
                                      if_eq r2.x, c53.y

#line 493
                                        rcp r1.w, c1.x
                                        mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 178
                                        add r3.xyz, -r0.xzyw, r0.zyxw

#line 152
                                        cmp r2.zw, r3.z, r0.xyyx, r0.xyxy
                                        min r1.w, r0.z, r2.z  // ::fmin<0>
                                        max r3.w, r2.w, r0.z  // ::fmax<0>
                                        add r2.z, -r1.w, r3.w  // ::delta<0>
                                        add r1.w, r1.w, r3.w  // ::maxplusmin<0>

#line 170
                                        add r2.w, r1.w, -c4.y
                                        rcp r4.x, r1.w
                                        mul r4.x, r2.z, r4.x  // ::hsl<1>
                                        add r1.w, -r1.w, -c4.z
                                        rcp r1.w, r1.w
                                        mul r1.w, r1.w, r2.z  // ::hsl<1>
                                        cmp r4.x, r2.w, r1.w, r4.x  // ::hsl<1>

#line 177
                                        add r6.xy, r0, -r3.w
                                        rcp r1.w, r2.z

#line 180
                                        mul r2.w, r1.w, r3.y  // ::hsl<0>
                                        mad r3.xy, r3.xzzw, r1.w, c45  // ::hsl<0,0>
                                        cmp r1.w, -r6_abs.y, r3.x, r3.y  // ::hsl<0>
                                        cmp r1.w, -r6_abs.x, r2.w, r1.w  // ::hsl<0>
                                        mul r2.w, r1.w, c45.z  // ::hsl<0>

#line 185
                                        mad r3.x, r1.w, c45.z, c45.w  // ::hsl<0>
                                        cmp r4.yzw, r1.w, r2.w, r3.x  // ::hsl<0,0,0>
                                        cmp r3, -r2_abs.z, c3.x, r4  // ::hsl<1,0,0,0>

#line 151
                                        add r1.w, -r1.y, r1.x
                                        cmp r2.zw, r1.w, r1.xyyx, r1.xyxy
                                        min r4.x, r1.z, r2.z  // ::fmin<0>
                                        max r4.y, r2.w, r1.z  // ::fmax<0>
                                        add r1.w, r4.x, r4.y  // ::maxplusmin<0>

#line 157
                                        mul r4.xyz, r1.w, c3.y  // ::hsl<2,2,2>

#line 195
                                        if_eq r3.x, c3.x

#line 198
                                        else

#line 202
                                          add r2.z, r1.w, -c4.y

#line 129
                                          add r6, r3, c46  // GetHue::temp3<0,0,0>

#line 203
                                          mul r2.w, r4.z, r6.x  // ::temp2<0>
                                          mad r3.y, r1.w, c3.y, r3.x
                                          mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
                                          cmp r2.z, r2.z, r3.x, r2.w  // ::temp2<0>
                                          add r1.w, r1.w, -r2.z  // ::temp1<0>

#line 128
                                          add r2.w, -r6.y, c4.y
                                          cmp r2.w, r2.w, r6.y, r6.w  // GetHue::temp3<0>
                                          cmp r2.w, r6.y, r2.w, r6.z  // GetHue::temp3<0>

#line 134
                                          add r3.x, -r1.w, r2.z
                                          mul r3.y, r3.x, c47.x
                                          mad r3.z, r3.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                          add r6.xyz, r2.w, c47.yzww
                                          add r2.w, -r2.w, -c47.w
                                          mul r2.w, r2.w, r3.x
                                          mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                          cmp r2.w, r6.z, r1.w, r2.w  // ::rgbComponent<0>
                                          cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
                                          cmp r4.x, r6.x, r2.w, r3.z  // ::rgbComponent<0>

#line 128
                                          add r2.w, -r3.w, c4.y
                                          add r6, r3.w, c50  // GetHue::temp3<0,0,0,0>
                                          cmp r2.w, r2.w, r3.w, r6.y  // GetHue::temp3<0>
                                          cmp r2.w, r3.w, r2.w, r6.x  // GetHue::temp3<0>

#line 134
                                          mad r3.z, r3.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                          add r7.xyz, r2.w, c47.yzww
                                          add r2.w, -r2.w, -c47.w
                                          mul r2.w, r2.w, r3.x
                                          mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                          cmp r2.w, r7.z, r1.w, r2.w  // ::rgbComponent<0>
                                          cmp r2.w, r7.y, r2.w, r2.z  // ::rgbComponent<0>
                                          cmp r4.y, r7.x, r2.w, r3.z  // ::rgbComponent<0>

#line 128
                                          add r2.w, -r6.z, c4.y
                                          add r3.z, r3.w, -c46.z  // GetHue::temp3<0>
                                          cmp r2.w, r2.w, r6.z, r3.z  // GetHue::temp3<0>
                                          cmp r2.w, r6.z, r2.w, r6.w  // GetHue::temp3<0>

#line 134
                                          mad r3.y, r3.y, r2.w, r1.w  // ::rgbComponent<0>

#line 137
                                          add r6.xyz, r2.w, c47.yzww
                                          add r2.w, -r2.w, -c47.w
                                          mul r2.w, r2.w, r3.x
                                          mad r2.w, r2.w, c47.x, r1.w  // ::rgbComponent<0>
                                          cmp r1.w, r6.z, r1.w, r2.w  // ::rgbComponent<0>
                                          cmp r1.w, r6.y, r1.w, r2.z  // ::rgbComponent<0>
                                          cmp r4.z, r6.x, r1.w, r3.y  // ::rgbComponent<0>

#line 212
                                        endif

#line 500
                                        lrp r5.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                        mov r5.w, r0.w  // ::result<3>
                                      else
                                        if_eq r2.x, c53.z

#line 506
                                          rcp r1.w, c1.x
                                          mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 510
                                          mul r3.xyz, r0, r1  // ::result<0,1,2>

#line 513
                                          lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                          mov r5.w, r0.w  // ::result<3>
                                        else
                                          if_eq r2.x, c53.w

#line 519
                                            rcp r1.w, c1.x
                                            mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 522
                                            add r3.xyz, -r0, c4.y
                                            add r3.xyz, -r1, r3
                                            add r3.xyz, -r3_abs, c4.y  // ::result<0,1,2>

#line 525
                                            lrp r5.xyz, c1.x, r3, r0  // ::result<0,1,2>
                                            mov r5.w, r0.w  // ::result<3>
                                          else
                                            if_eq r2.x, c49.x
                                              add r1.w, r2.y, -c1.x
                                              add r2.y, -r0.w, c4.y
                                              mad r5.w, r1.w, -r2.y, c4.y  // ::result<3>

#line 533
                                              mul r2.yzw, r1.xxyz, c1.x
                                              rcp r3.x, r5.w
                                              mul r3.yzw, r0.w, r0.xxyz
                                              mul r3.yzw, r1.w, r3
                                              mul r3.yzw, r3.x, r3
                                              mad r5.xyz, r2.yzww, r3.x, r3.yzww  // ::result<0,1,2>
                                            else
                                              add r1.w, r2.x, c49.y

#line 539
                                              rcp r2.x, c1.x
                                              mul_sat r2.xyz, r1, r2.x  // Blend::blendColor<0,1,2>

#line 557
                                              add r3.xyz, -r0, c3.y
                                              add r4.xyz, r0, c3.z
                                              mad r4.xyz, r4, -c4_abs.z, c4_abs.y
                                              add r6.xyz, -r2, c4.y
                                              mad r4.xyz, r4, -r6, c4.y  // ::result<0,1,2>

#line 549
                                              dp2add r2.w, r2.x, r0.x, c3.x  // ::result<0>
                                              cmp r6.x, r3.x, r2.w, r4.x  // ::result<0>

#line 555
                                              dp2add r2.w, r2.y, r0.y, c3.x  // ::result<1>
                                              cmp r6.y, r3.y, r2.w, r4.y  // ::result<1>

#line 561
                                              dp2add r2.w, r2.z, r0.z, c3.x  // ::result<2>
                                              cmp r6.z, r3.z, r2.w, r4.z  // ::result<2>

#line 564
                                              lrp r5.xyz, c1.x, r6, r0  // ::result<0,1,2>
                                              cmp r1.xyz, -r1_abs.w, r2, r1  // Blend::blendColor<0,1,2>
                                              mov r5.w, r0.w  // ::result<3>
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        mov r2.x, c0.x  // ::BlendMode<0>
        if_eq r2.x, c49.z

#line 570
          rcp r1.w, c1.x
          mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 573
          min r3.xyz, r2.yzww, r0
          max r4.xyz, r0, r2.yzww
          add r2.yzw, r3.xxyz, -r4.xxyz
          add r2.yzw, r2, c4.y  // ::result<0,1,2>

#line 576
          lrp r5.xyz, c1.x, r2.yzww, r0  // ::result<0,1,2>
        else
          if_eq r2.x, c49.w

#line 582
            rcp r1.w, c1.x
            mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 599
            add r3.xyz, -r2.yzww, c3.y
            add r4.xyz, r2.yzww, c3.z
            add r4.xyz, r4, r4
            max r6.xyz, r0, r4  // ::result<0,1,2>
            add r2.yzw, r2, r2
            min r4.xyz, r2.yzww, r0  // ::result<0,1,2>
            cmp r2.yzw, r3.xxyz, r4.xxyz, r6.xxyz  // ::result<0,1,2>

#line 606
            lrp r5.xyz, c1.x, r2.yzww, r0  // ::result<0,1,2>
          else
            if_eq r2.x, c54.x

#line 612
              rcp r1.w, c1.x
              mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 617
              add r3.xyz, r2.yzww, -c4.y
              mul r4.xyz, r0, r0
              add r6.xyz, -r2.yzww, c4.y
              rcp r1.w, r6.x
              mul r1.w, r1.w, r4.x
              min r3.w, r1.w, c4.y
              cmp r7.x, r3.x, r2.y, r3.w  // ::result<0>
              rcp r1.w, r6.y
              mul r1.w, r1.w, r4.y
              min r2.y, r1.w, c4.y
              cmp r7.y, r3.y, r2.z, r2.y  // ::result<1>
              rcp r1.w, r6.z
              mul r1.w, r1.w, r4.z
              min r2.y, r1.w, c4.y
              cmp r7.z, r3.z, r2.w, r2.y  // ::result<2>

#line 620
              lrp r5.xyz, c1.x, r7, r0  // ::result<0,1,2>
            else

#line 626
              if_eq r2.x, c54.y

#line 629
                rcp r1.w, c1.x
                mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 151
                add r1.w, -r0.y, r0.x
                cmp r3.xy, r1.w, r0.yxzw, r0
                min r4.x, r0.z, r3.x  // ::fmin<0>
                max r4.y, r3.y, r0.z  // ::fmax<0>
                add r3.x, r4.x, r4.y  // ::maxplusmin<0>

#line 157
                mul r3.yzw, r3.x, c3.y  // ::hsl<2,2,2>

#line 151
                add r4.z, -r2.z, r2.y
                cmp r2.yz, r4.z, r2.xzyw, r2
                min r4.z, r2.w, r2.y  // ::fmin<0>
                max r4.w, r2.z, r2.w  // ::fmax<0>
                add r2.y, -r4.z, r4.w  // ::delta<0>
                add r2.z, r4.z, r4.w  // ::maxplusmin<0>

#line 170
                add r2.w, r2.z, -c4.y
                rcp r4.z, r2.z
                mul r4.z, r2.y, r4.z  // ::hsl<1>
                add r2.z, -r2.z, -c4.z
                rcp r2.z, r2.z
                mul r2.z, r2.z, r2.y  // ::hsl<1>
                cmp r2.z, r2.w, r2.z, r4.z  // ::hsl<1>

#line 186
                cmp r2.y, -r2_abs.y, c3.x, r2.z  // ::hsl<1>

#line 195
                if_eq r2.y, c3.x

#line 198
                else

#line 153
                  add r2.z, -r4.x, r4.y  // ::delta<0>

#line 177
                  add r4.xy, r0, -r4.y
                  add r2.w, -r0.z, r0.y
                  rcp r4.z, r2.z
                  mul r2.w, r2.w, r4.z  // ::hsl<0>
                  add r4.w, -r0.x, r0.z
                  mad r4.w, r4.w, r4.z, -c4.z  // ::hsl<0>
                  mad r1.w, r1.w, r4.z, c45.y  // ::hsl<0>
                  cmp r1.w, -r4_abs.y, r4.w, r1.w  // ::hsl<0>
                  cmp r1.w, -r4_abs.x, r2.w, r1.w  // ::hsl<0>
                  mul r2.w, r1.w, c45.z  // ::hsl<0>

#line 185
                  mad r4.x, r1.w, c45.z, c45.w  // ::hsl<0>
                  cmp r1.w, r1.w, r2.w, r4.x  // ::hsl<0>
                  cmp r1.w, -r2_abs.z, c3.x, r1.w  // ::hsl<0>

#line 202
                  add r2.z, r3.x, -c4.y
                  add r2.w, r2.y, c4.y
                  mul r2.w, r2.w, r3.w  // ::temp2<0>
                  mad r4.x, r3.x, c3.y, r2.y
                  mad r2.y, r2.y, -r3.w, r4.x  // ::temp2<0>
                  cmp r2.y, r2.z, r2.y, r2.w  // ::temp2<0>
                  add r2.z, -r2.y, r3.x  // ::temp1<0>

#line 127
                  add r4, r1.w, c46.yzwx  // GetHue::temp3<0,0,0,0>
                  add r2.w, -r4.x, c4.y
                  cmp r2.w, r2.w, r4.x, r4.z  // GetHue::temp3<0>
                  cmp r2.w, r4.x, r2.w, r4.y  // GetHue::temp3<0>

#line 134
                  add r3.x, -r2.z, r2.y
                  mul r4.x, r3.x, c47.x
                  mad r4.y, r4.x, r2.w, r2.z  // ::rgbComponent<0>

#line 137
                  add r6.xyz, r2.w, c47.yzww
                  add r2.w, -r2.w, -c47.w
                  mul r2.w, r2.w, r3.x
                  mad r2.w, r2.w, c47.x, r2.z  // ::rgbComponent<0>
                  cmp r2.w, r6.z, r2.z, r2.w  // ::rgbComponent<0>
                  cmp r2.w, r6.y, r2.w, r2.y  // ::rgbComponent<0>
                  cmp r3.y, r6.x, r2.w, r4.y  // ::rgbComponent<0>

#line 128
                  add r2.w, -r1.w, c4.y
                  add r6, r1.w, -c46.xywz  // GetHue::temp3<0,0,0,0>
                  cmp r2.w, r2.w, r1.w, r6.x  // GetHue::temp3<0>
                  cmp r1.w, r1.w, r2.w, r4.w  // GetHue::temp3<0>

#line 134
                  mad r2.w, r4.x, r1.w, r2.z  // ::rgbComponent<0>

#line 137
                  add r4.yzw, r1.w, c47
                  add r1.w, -r1.w, -c47.w
                  mul r1.w, r1.w, r3.x
                  mad r1.w, r1.w, c47.x, r2.z  // ::rgbComponent<0>
                  cmp r1.w, r4.w, r2.z, r1.w  // ::rgbComponent<0>
                  cmp r1.w, r4.z, r1.w, r2.y  // ::rgbComponent<0>
                  cmp r3.z, r4.y, r1.w, r2.w  // ::rgbComponent<0>

#line 128
                  add r1.w, -r6.y, c4.y
                  cmp r1.w, r1.w, r6.y, r6.w  // GetHue::temp3<0>
                  cmp r1.w, r6.y, r1.w, r6.z  // GetHue::temp3<0>

#line 134
                  mad r2.w, r4.x, r1.w, r2.z  // ::rgbComponent<0>

#line 137
                  add r4.xyz, r1.w, c47.yzww
                  add r1.w, -r1.w, -c47.w
                  mul r1.w, r1.w, r3.x
                  mad r1.w, r1.w, c47.x, r2.z  // ::rgbComponent<0>
                  cmp r1.w, r4.z, r2.z, r1.w  // ::rgbComponent<0>
                  cmp r1.w, r4.y, r1.w, r2.y  // ::rgbComponent<0>
                  cmp r3.w, r4.x, r1.w, r2.w  // ::rgbComponent<0>

#line 212
                endif

#line 636
                lrp r5.xyz, c1.x, r3.yzww, r0  // ::result<0,1,2>
              else
                if_eq r2.x, c54.z

#line 642
                  rcp r1.w, c1.x
                  mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 646
                  add r3.xyz, -r0, c4.y
                  add r2.yzw, -r2, c4.y
                  mad r2.yzw, r3.xxyz, -r2, c4.y  // ::result<0,1,2>

#line 649
                  lrp r5.xyz, c1.x, r2.yzww, r0  // ::result<0,1,2>
                else
                  if_eq r2.x, c54.w

#line 655
                    rcp r1.w, c1.x
                    mul_sat r2.yzw, r1.w, r1.xxyz  // Blend::blendColor<0,1,2>

#line 660
                    add r3.xyz, r2.yzww, c3.z
                    add r4.xyz, r0, r0
                    mul r6.xyz, r0, r0
                    mad r7.xyz, r2.yzww, -c4_abs.z, c4_abs.y
                    mul r6.xyz, r6, r7
                    mad r6.xyz, r4, r2.yzww, r6
                    rsq r1.w, r0.x
                    rcp r1.w, r1.w
                    mad r7.xyz, r2.yzww, -c4.z, -c4.y
                    add r2.yzw, -r2, c4.y
                    mul r2.yzw, r2, r4.xxyz
                    mad r1.w, r1.w, r7.x, r2.y
                    cmp r4.x, r3.x, r1.w, r6.x  // ::result<0>
                    rsq r1.w, r0.y
                    rcp r1.w, r1.w
                    mad r1.w, r1.w, r7.y, r2.z
                    cmp r4.y, r3.y, r1.w, r6.y  // ::result<1>
                    rsq r1.w, r0.z
                    rcp r1.w, r1.w
                    mad r1.w, r1.w, r7.z, r2.w
                    cmp r4.z, r3.z, r1.w, r6.z  // ::result<2>

#line 663
                    lrp r5.xyz, c1.x, r4, r0  // ::result<0,1,2>
                  else
                    if_eq r2.x, c48.x

#line 669
                      rcp r1.w, c1.x
                      mul_sat r1.xyz, r1.w, r1  // Blend::blendColor<0,1,2>

#line 674
                      add r2.xyz, r1, c3.z
                      add r1.xyz, r1, r1
                      add r3.xyz, -r0, c4.y
                      rcp r1.w, r1.x
                      mad r1.w, r3.x, -r1.w, c4.y
                      max r2.w, r1.w, c3.x
                      cmp r1.x, -r1.x, r1.x, r2.w
                      add r4.xyz, r2, r2
                      mad r6.xyz, r2, -c4.z, -c4.y
                      mad r7.xyz, r2, -c4_abs.z, c4_abs.y
                      rcp r1.w, r7.x
                      mul r1.w, r0.x, r1.w
                      min r2.w, r1.w, c4.y
                      cmp r1.w, r6.x, r4.x, r2.w
                      cmp r8.x, r2.x, r1.w, r1.x  // ::result<0>
                      rcp r1.x, r1.y
                      mad r1.x, r3.y, -r1.x, c4.y
                      max r2.x, r1.x, c3.x
                      cmp r1.x, -r1.y, r1.y, r2.x
                      rcp r1.y, r7.y
                      mul r1.y, r0.y, r1.y
                      min r2.x, r1.y, c4.y
                      cmp r1.y, r6.y, r4.y, r2.x
                      cmp r8.y, r2.y, r1.y, r1.x  // ::result<1>
                      rcp r1.x, r1.z
                      mad r1.x, r3.z, -r1.x, c4.y
                      max r2.x, r1.x, c3.x
                      cmp r1.x, -r1.z, r1.z, r2.x
                      rcp r1.y, r7.z
                      mul r1.y, r0.z, r1.y
                      min r2.x, r1.y, c4.y
                      cmp r1.y, r6.z, r4.z, r2.x
                      cmp r8.z, r2.z, r1.y, r1.x  // ::result<2>

#line 677
                      lrp r5.xyz, c1.x, r8, r0  // ::result<0,1,2>
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif

#line 929
      endif
    else
      mov r5, c3.x
    endif
    cmp oC0, -r0.w, r0, r5  // ::main<0,1,2,3>

// approximately 4528 instruction slots used (1 texture, 4527 arithmetic)
