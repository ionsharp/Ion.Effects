//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Companding;
//   float Compression_A;
//   float Compression_B;
//   float Compression_C;
//   float Compression_D;
//   float Compression_E;
//   float Depth;
//   float HighlightAmount;
//   float3 LABk_LMSk_x;
//   float3 LABk_LMSk_y;
//   float3 LABk_LMSk_z;
//   float3 LMS_XYZ_x;
//   float3 LMS_XYZ_y;
//   float3 LMS_XYZ_z;
//   float3 LMSk_LABk_x;
//   float3 LMSk_LABk_y;
//   float3 LMSk_LABk_z;
//   float3 LMSk_XYZk_x;
//   float3 LMSk_XYZk_y;
//   float3 LMSk_XYZk_z;
//   float MidtoneAmount;
//   float MidtoneRange;
//   float Mode;
//   float Model;
//   float3 RGB_XYZ_x;
//   float3 RGB_XYZ_y;
//   float3 RGB_XYZ_z;
//   float ShadowAmount;
//   float ShadowRange;
//   float Shape;
//   float W;
//   float WhiteX;
//   float WhiteY;
//   float X;
//   float XComponent;
//   float3 XYZ_LMS_x;
//   float3 XYZ_LMS_y;
//   float3 XYZ_LMS_z;
//   float3 XYZ_RGB_x;
//   float3 XYZ_RGB_y;
//   float3 XYZ_RGB_z;
//   float Y;
//   float YComponent;
//   float Z;
//   sampler2D input;
//   float3 xyYC_exy;
//
//
// Registers:
//
//   Name            Reg   Size
//   --------------- ----- ----
//   Model           c0       1
//   XComponent      c1       1
//   YComponent      c2       1
//   Mode            c3       1
//   Shape           c4       1
//   Depth           c5       1
//   X               c6       1
//   Y               c7       1
//   Z               c8       1
//   W               c9       1
//   Companding      c10      1
//   WhiteX          c12      1
//   WhiteY          c13      1
//   LMS_XYZ_x       c14      1
//   LMS_XYZ_y       c15      1
//   LMS_XYZ_z       c16      1
//   RGB_XYZ_x       c17      1
//   RGB_XYZ_y       c18      1
//   RGB_XYZ_z       c19      1
//   XYZ_LMS_x       c20      1
//   XYZ_LMS_y       c21      1
//   XYZ_LMS_z       c22      1
//   XYZ_RGB_x       c23      1
//   XYZ_RGB_y       c24      1
//   XYZ_RGB_z       c25      1
//   LABk_LMSk_x     c26      1
//   LABk_LMSk_y     c27      1
//   LABk_LMSk_z     c28      1
//   LMSk_LABk_x     c29      1
//   LMSk_LABk_y     c30      1
//   LMSk_LABk_z     c31      1
//   LMSk_XYZk_x     c32      1
//   LMSk_XYZk_y     c33      1
//   LMSk_XYZk_z     c34      1
//   xyYC_exy        c38      1
//   HighlightAmount c39      1
//   MidtoneAmount   c41      1
//   MidtoneRange    c42      1
//   ShadowAmount    c43      1
//   ShadowRange     c44      1
//   Compression_A   c45      1
//   Compression_B   c46      1
//   Compression_C   c47      1
//   Compression_D   c48      1
//   Compression_E   c49      1
//   input           s0       1
//

    ps_3_0
    def c11, -20, -21, -22, -23
    def c35, -28, -29, -30, -31
    def c36, -36, -37, -38, -39
    def c37, -40, -41, -42, -43
    def c40, -48, -49, -50, -51
    def c50, -0, -32, -7, -39
    def c51, -4, -36, -11, -43
    def c52, -6, -38, -13, -45
    def c53, -14, -46, -15, -47
    def c54, -32, -33, -34, -35
    def c55, -44, -45, -46, -47
    def c56, 1.41421354, 1, 2, 3
    def c57, 0.0208350997, -0.0851330012, 0.180141002, -0.330299497
    def c58, 0.999866009, -2, 1.57079637, 6.28318548
    def c59, -0.0187292993, 0.0742610022, 1.57072878, 0.333333343
    def c60, 6, 0.166666672, -6, -0.166666672
    def c61, 1, 50, 6, 4
    def c62, -3, -35, -10, -42
    def c63, 0.142857149, 0.156173766, 7, 1
    def c64, 0.159301758, 78.84375, 0.166666672, -0.212114394
    def c65, -5, -37, -12, -44
    def c66, 100, 128, 1, 360
    def c67, -18, -19, -50, -51
    def c68, -0.980705976, -1.18224943, -0.99999994, -0
    def c69, 475.70459, 9.99999975e-005, 134.034378, 1492.84155
    def c70, 18.8515625, 18.6875, 0.8359375, 1
    def c71, 0.0142857144, 0.560000002, 0.439999998, 0.058047317
    def c72, 0.280000001, 1, -1.62954997e-011, 0.00885645207
    def c73, -24, -25, -26, -27
    def c74, 0.5, 0.25, 0.596000016, 0.211999997
    def c75, -0.5, 0.25, -0.275000006, -0.527999997
    def c76, -0.5, -0.32100001, 0.31099999, 0.00277777785
    def c77, 0.298999995, -1.33299994, 0.252999991, 0.00294117676
    def c78, 0.587000012, 0.883000016, 1.11600006, 0.684000015
    def c79, 0.114, 0.216999993, 0.063000001, 0.00392156886
    def c80, 0.212599993, 0.298999995, -0.147129998, 0.61500001
    def c81, 0.715200007, 0.587000012, -0.288859993, -0.514989972
    def c82, 0.0722000003, 0.114, 0.43599999, -0.10001
    def c83, 903.296326, 0.159154937, 0.25, 0.75
    def c84, 360, 0.00277777785, -360, -0.00277777785
    def c85, 0.0174532942, -4.18879032, -9.99999994e-009, 9.99999994e-009
    def c86, 6.28318548, -3.14159274, 0.0174532942, 1.04719758
    def c87, 6.40657674e-007, 13824.001, 769859.875, 3.40282347e+038
    def c88, 1394988.5, -120846.469, 126452, 8.00000095
    def c89, -2, -34, -9, -41
    def c90, 0.25, -0.25, 0.5, 0.00999999978
    def c91, 0.00277777808, 0.5, 0.00862068962, 359
    def c92, 1.00014997, -0.377743989, 0.220439002, 0.714139998
    def c93, 0.999768972, 0.0629495978, -0.809638023, 0.00456620986
    def c94, -16, -48, -17, -49
    def c95, -52, 52, 0, -128
    def c96, -0.569000006, 0.430999994, 0.95599997, -0.272000015
    def c97, -1.87399995, 0.620999992, -0.647000015, -1.10800004
    def c98, 1.70500004, 1.57480001, 1.13982999, -0.580600023
    def c99, 9.23037151e-005, 0.66467905, 1.43099999, 0.129132897
    def c100, 0.267899334, 0.525912642, 7.92025457e-005, 0.126000002
    def c101, 1.8556, -0.394650012, 2.02310991, 0.0126833133
    def c102, 0.00703035761, 0.00828392897, 1.39821029, 0.00200000009
    def c103, 12, -0.284668922, 0.123957433, 0.559910715
    def c104, 10000, -35, -36, 1.24492633
    def c105, 1.11111116, 3.79999995, 961.538452, 0.478260845
    def c106, 0.00999999978, 0.305000007, 4.69565201, -4.69565201
    def c107, -2, 3.14159274, 57.2957764, 60
    def c108, 0.327870011, -0.635070026, 0.321449995, -0.156810001
    def c109, -0.162400007, 0.00609999988, -0.00796331931, -0.00471281586
    def c110, 0.732800007, -0.703599989, 0.4296, 1.69749999
    def c111, -0, -3.14159274, 7.85398197, 1.57079673
    def c112, -0.18603, 0.205270007, -4.49037981, -0.100000001
    def c113, 27.1299992, 2.38095236, 0.00300000003, 0.0136000002
    def c114, 37.0950012, 62.9053993, -0.00079999998, 0.983399987
    def c115, -53, -54, -55, 0
    def c116, 0.159154937, 0.5, 0.0174532942, -2.09439516
    def c117, -1, -33, -8, -40
    def c118, 0.00277777785, 0.333333343, 180, -0.333333343
    def c119, 0.00277777785, 0.666666687, -0.666666687, 1
    def c120, 0.999778986, 1.07094002, 0.324891001, 1.77199996
    def c121, 18.6875, -18.8515625, 0.058047317, 0.811891913
    def c122, 0.00110705639, 769860, 52, 13
    def c123, 0.00499999989, 116, -16, 0.00571428565
    def c124, 0.185000002, 1.5, 0.0399999991, 9.99999996e-012
    def c125, 88.3659897, 32.0938988, 175, 70
    def c126, 0.5, 128, 0.0813120008, 9.99999982e-014
    def c127, 6.99999952, 0.857142806, -6, 0.114
    def c128, 239.999985, 179.999985, 119.999992, 59.9999962
    def c129, 359.999969, 299.999969, -986593.562, 694074.125
    def c130, -180, -240, -300, 0.344139993
    def c131, 5.98333359, 0.0199999996, -1, -299.999969
    def c132, 0.159154937, 1, -1, 0
    def c133, 0.666666687, 1, 600, 104
    def c134, 0.538909256, 0.635001242, 0.000980392215, 0.00294117676
    def c135, 0.00277777785, 0.00277777808, 0.5, 0.0640312433
    def c136, 0.0097833341, 0.298999995, 1.79399991, 0.587000012
    def c137, 3.52200007, 0.684000015, 0.114, 0.298999995
    def c138, 0.0352952108, 0.972667754, -0.00897958595, 1.01369214
    def c139, 191.019699, -111.212395, 20.1908016, 0.839776218
    def c140, 0.00588439172, 0.154340193, 0, 0
    def c141, 10, 0, 16, -0.5
    def c142, 9.99999983e+012, 1.49999999e-012, 1, 15
    def c143, 9.99999983e+012, 1, 6742.07861, 3827.99316
    def c144, 16613.7305, -909.828125, 2182.53833, 0.47299999
    def c145, 9145.23047, 15718.4707, 3127.28296, -3250.75854
    def c146, 0.138605043, 0.0960192457, 0.00746077253, 6.27739477
    def c147, 2313.62085, 15227.666, 0.00499999989, 0.00999999978
    def c148, 0.212599993, 0.715200007, 0.0722000003, 0.418687999
    def c149, 0.00277777785, -0.333333343, -0.666666687, 1.40199995
    def c150, 0, 1, 100, 0.0166666675
    def c151, 0.00392156886, 0.0901960805, 0.0745098069, 0.00784313772
    def c152, 1394988.5, -120846.469, -315176.688, -210946.25
    def c153, 0.00110705639, 52, 13, 39
    def c154, -47, -48, -49, 0.000980392215
    def c155, 100, 1500, 400, -0.449999988
    def c156, 0.298999995, 0.587000012, 0.114, 300
    def c157, 0.54270798, 0.199075997, 1.29587495, 0.219999999
    def c158, 6709.7002, 4.06670809, 1.09679902, 3.52399993
    def c159, 7396.2832, 709.410828, 1747.68005, 833.27301
    def c160, 0.298999995, 0.587000012, 0.666666687, 0.331263989
    def c161, 120.715675, 142.24028, 128, 0.168735996
    def c162, 360, 0.5, 219, 16
    def c163, 0, -1, -134, -140
    def c164, 0, -1.33299994, -0.595700026, -0.522599995
    def c165, 255, 0, 360, 100
    def c166, 1, 1.33299994, 0.595700026, 0.522599995
    def c167, 100, 224, 122, 76
    def c168, 235, 240, 1, 0.5
    def c169, 2, 0.5, -2, -0.5
    def c170, -14, -15, -16, -17
    def c171, -1, -2, -3, -4
    def c172, 120, 0.00999999978, 1, 1.04719758
    def c173, -120846.469, -210946.25, 126452, 694074.125
    def c174, 0.684000015, 1.79399991, 0.587000012, 0.114
    def c175, -46, -47, -48, -49
    def c176, -15, -16, -17, -34
    def c177, 0.0174532942, 0.00277777785, 2, 0.5
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 2801 "C:\Users\james\GitHub\Core.WPF\Core.WPF\Effects\ColorModelEffect.fx"
    mov r0.xyz, c95
    add r0.x, r0.x, c0.x
    if_ge c0.x, r0.y

#line 2809
      mov r1.xy, c95.z  // ::input3<0,1>
      mov r2.x, c95.z  // ::input3<2>
      mov r1.w, c6.x  // ::input4<0>
      mov r2.y, c7.x  // ::input4<1>
      mov r2.z, c8.x  // ::input4<2>
      mov r3.w, c9.x  // ::input4<3>
      mov r4.xyz, c95.z
      mov r5.xyz, c95.z
    else

#line 2812
      frc r0.w, c0.x
      add r0.w, -r0.w, c0.x
      add r6, r0.w, c11
      add r7, r0.w, c73
      add r8, r0.w, c35
      add r9, r0.w, c54
      add r10, r0.w, c36
      add r11, r0.w, c37
      add r12, r0.w, c55
      add r13, r0.w, c40
      cmp r14.xyz, -r6_abs.x, c95.zwww, c95.z
      cmp r14.xyz, -r6_abs.y, c163.xyyw, r14
      cmp r14.xyz, -r6_abs.z, c95.z, r14
      cmp r14.xyz, -r6_abs.w, c95.z, r14
      cmp r14.xyz, -r7_abs.x, c95.z, r14
      cmp r14.xyz, -r7_abs.y, c95.z, r14
      cmp r14.xyz, -r7_abs.z, c95.z, r14
      cmp r14.xyz, -r7_abs.w, c95.z, r14
      cmp r14.xyz, -r8_abs.x, c95.z, r14
      cmp r14.xyz, -r8_abs.y, c95.z, r14
      cmp r14.xyz, -r8_abs.z, c95.z, r14
      cmp r14.xyz, -r8_abs.w, c95.z, r14
      cmp r14.xyz, -r9_abs.x, c95.z, r14
      cmp r14.xyz, -r9_abs.y, c163.xzww, r14
      cmp r9.xyz, -r9_abs.z, c95.z, r14
      cmp r9.xyz, -r9_abs.w, c95.z, r9
      cmp r9.xyz, -r10_abs.x, c95.z, r9
      cmp r9.xyz, -r10_abs.y, c95.z, r9
      cmp r9.xyz, -r10_abs.z, c95.z, r9
      cmp r9.xyz, -r10_abs.w, c95.z, r9
      cmp r9.xyz, -r11_abs.x, c163.zwxw, r9
      cmp r9.xyz, -r11_abs.y, c95.z, r9
      cmp r9.xyz, -r11_abs.z, c95.z, r9
      cmp r9.xyz, -r11_abs.w, c141.xyyw, r9
      cmp r9.xyz, -r12_abs.x, c95.z, r9
      cmp r9.xyz, -r12_abs.y, c141.z, r9
      cmp r9.xyz, -r12_abs.z, c141.ywww, r9
      cmp r9.xyz, -r12_abs.w, c164.xyyw, r9
      cmp r9.xyz, -r13_abs.x, c95.z, r9
      cmp r9.xyz, -r13_abs.y, c164.xzww, r9
      cmp r9.xyz, -r13_abs.z, c141.ywww, r9
      cmp r4.xyz, -r13_abs.w, c141.ywww, r9  // ::min3<0,1,2>
      add r9, r0.w, c50
      add r10, r0.w, c117
      add r11, r0.w, c89
      add r12, r0.w, c62
      add r13, r0.w, c51
      add r14, r0.w, c65
      add r15, r0.w, c52
      add r16, r0.w, c53
      add r17, r0.w, c94
      add r18, r0.w, c67
      cmp r19.xyz, -r9_abs.x, c165.x, c165.y
      cmp r19.xyz, -r10_abs.x, -c163.y, r19
      cmp r19.xyz, -r11_abs.x, c165.x, r19
      cmp r19.xyz, -r12_abs.x, c165.x, r19
      cmp r19.xyz, -r13_abs.x, -c163.y, r19
      cmp r19.xyz, -r14_abs.x, c165.zwww, r19
      cmp r19.xyz, -r15_abs.x, c165.zwxw, r19
      cmp r19.xyz, -r9_abs.z, c165.zwww, r19
      cmp r19.xyz, -r10_abs.z, c165.zwww, r19
      cmp r19.xyz, -r11_abs.z, c165.zwww, r19
      cmp r19.xyz, -r12_abs.z, c165.zwww, r19
      cmp r19.xyz, -r13_abs.z, c165.zwxw, r19
      cmp r19.xyz, -r14_abs.z, c165.zwxw, r19
      cmp r19.xyz, -r15_abs.z, c165.zwww, r19
      cmp r19.xyz, -r16_abs.x, -c163.y, r19
      cmp r19.xyz, -r16_abs.z, c165.wwzw, r19
      cmp r19.xyz, -r17_abs.x, c165.wwzw, r19
      cmp r19.xyz, -r17_abs.z, c165.wwzw, r19
      cmp r19.xyz, -r18_abs.x, c165.x, r19
      cmp r19.xyz, -r18_abs.y, c165.w, r19
      cmp r19.xyz, -r6_abs.x, c66.xyyw, r19
      cmp r19.xyz, -r6_abs.y, -c163.y, r19
      cmp r6.xyz, -r6_abs.z, -c163.y, r19
      cmp r6.xyz, -r6_abs.w, c165.zwww, r6
      cmp r6.xyz, -r7_abs.x, c165.zwww, r6
      cmp r6.xyz, -r7_abs.y, c165.zwww, r6
      cmp r6.xyz, -r7_abs.z, c165.wwzw, r6
      cmp r6.xyz, -r7_abs.w, c165.wwzw, r6
      cmp r6.xyz, -r8_abs.x, c66.zzww, r6
      cmp r6.xyz, -r8_abs.y, c165.wwzw, r6
      cmp r6.xyz, -r8_abs.z, c165.wwzw, r6
      cmp r6.xyz, -r8_abs.w, c165.wwzw, r6
      cmp r6.xyz, -r9_abs.y, -c163.y, r6
      cmp r6.xyz, -r10_abs.y, c167, r6
      cmp r6.xyz, -r11_abs.y, c165.wwzw, r6
      cmp r6.xyz, -r12_abs.y, c165.wwzw, r6
      cmp r6.xyz, -r13_abs.y, c165.wwzw, r6
      cmp r6.xyz, -r14_abs.y, -c163.y, r6
      cmp r6.xyz, -r15_abs.y, -c163.y, r6
      cmp r6.xyz, -r9_abs.w, -c163.y, r6
      cmp r6.xyz, -r10_abs.w, c167.yzxw, r6
      cmp r6.xyz, -r11_abs.w, c165.x, r6
      cmp r6.xyz, -r12_abs.w, -c163.y, r6
      cmp r6.xyz, -r13_abs.w, c167.wxxw, r6
      cmp r6.xyz, -r14_abs.w, -c163.y, r6
      cmp r6.xyz, -r15_abs.w, c168.xyyw, r6
      cmp r6.xyz, -r16_abs.y, c168.zwww, r6
      cmp r6.xyz, -r16_abs.w, c166.xyyw, r6
      cmp r6.xyz, -r17_abs.y, -c163.y, r6
      cmp r6.xyz, -r17_abs.w, c166.xzww, r6
      cmp r6.xyz, -r18_abs.z, c168.zwww, r6
      cmp r5.xyz, -r18_abs.w, c168.zwww, r6  // ::max3<0,1,2>

#line 2816
      mov r1.x, c6.x  // ::input3<0>
      mov r1.y, c7.x  // ::input3<1>
      mov r2.x, c8.x  // ::input3<2>
      mov r1.w, c95.z  // ::input4<0>
      mov r2.yz, c95.z  // ::input4<1,2>
      mov r3.w, c95.z  // ::input4<3>
    endif

#line 2822
    mov r6.xz, c89
    if_eq c3.x, -r6.x

#line 2828
      mov r6.y, c163.y  // ::Minimum3<64>
      add r0.w, r6.y, c4.x

#line 535
      add r7.xyz, c168.wzww, -v0.xyyw  // ::N<0>
      mul r6.yw, r7_abs.xxzz, r7_abs.xxzz
      add r4.w, r6.w, r6.y
      rsq r4.w, r4.w
      rcp r4.w, r4.w  // ::GetDistance<0>

#line 2830
      mad r4.w, r4.w, -c56.x, c56.y  // ::N<0>
      cmp r1.z, -r0_abs.w, r4.w, r7.y  // ::N<0>
      abs r0.w, c1.x
      cmp r7.xy, r0.x, r1.xzzw, r1.zwzw  // ::input3<0>, ::input4<0>

#line 2845
      mov r8.yzw, c56
      add r8.xyz, -r8.yzww, c1.x

#line 2839
      mov r2.w, r1.z
      cmp r9.xy, r0.x, r1.yzzw, r2.wyzw  // ::input3<1>, ::input4<1>

#line 2843
      cmp r3.xy, r0.x, r2.xwzw, r2.wzzw  // ::input3<2>, ::input4<2>

#line 2847
      cmp r4.w, r0.x, r2.w, r3.w  // ::input4<3>
      cmp r10.x, -r8_abs.z, r4.w, r3.w  // ::input4<3>
      mov r10.yz, r2.xxzw
      cmp r11.xyz, -r8_abs.y, r3.ywxw, r10.zxyw  // ::input4<2,3>, ::input3<2>
      mov r9.z, r10.z
      mov r9.w, r3.w
      mov r11.w, r2.y
      cmp r12.yzw, -r8_abs.x, r9, r11.xwxy  // ::input4<1,2,3>
      mov r10.w, r9.x
      mov r11.y, r1.y
      cmp r1.yz, -r8_abs.x, r10.xwyw, r11  // ::input3<1,2>
      mov r9.x, r7.y
      mov r9.yz, r2
      mov r12.x, r1.w
      cmp r3, -r0.w, r9, r12  // ::input4<0,1,2,3>
      mov r7.z, r11.y
      mov r7.w, r10.y
      cmp r2.xyw, -r0.w, r7.wxzz, r1.zxzy  // ::input3<2,0,1>
      mov oC0, c95.z  // ::main<0,1,2,3>
      mov r0.w, c95.z
    else
      mov r6.y, c163.y  // ::Minimum3<64>
      if_eq c3.x, -r6.y

#line 2857
        add r4.w, r6.y, c4.x

#line 2860
        add r7.xyz, c168.zwww, -v0.yxyw  // ::N<0>

#line 535
        add r5.w, -r7.x, -c141.w
        mul r5.w, r5_abs.w, r5_abs.w
        mad r5.w, r7_abs.y, r7_abs.y, r5.w
        rsq r5.w, r5.w
        rcp r5.w, r5.w  // ::GetDistance<0>

#line 2859
        mad r7.x, r5.w, -c56.x, c56.y  // ::xN<0>
        add r5.w, c141.w, v0.x
        min r6.w, r5_abs.w, r7_abs.z
        max r8.x, r7_abs.z, r5_abs.w
        rcp r7.w, r8.x
        mul r6.w, r6.w, r7.w
        mul r7.w, r6.w, r6.w
        mad r8.x, r7.w, c57.x, c57.y
        mad r8.x, r7.w, r8.x, c57.z
        mad r8.x, r7.w, r8.x, c57.w
        mad r7.w, r7.w, r8.x, c58.x
        mul r6.w, r6.w, r7.w
        add r7.w, -r7_abs.z, r5_abs.w
        cmp r7.w, r7.w, c163_abs.x, c163_abs.y
        mad r8.x, r6.w, c58.y, c58.z
        mad r6.w, r8.x, r7.w, r6.w
        cmp r7.w, r5.w, c111.x, c111.y
        add r6.w, r6.w, r7.w
        min r8.x, r5.w, r7.z
        max r8.y, r7.z, r5.w
        cmp r5.w, r8.y, c163_abs.y, c163_abs.x
        cmp r5.w, r8.x, c95.z, r5.w
        add r7.z, r6.w, r6.w
        mad r5.w, r5.w, -r7.z, r6.w
        add r7.zw, r5.w, c111  // ::yN<0>
        add r5.w, -r7.z, c58.w
        cmp r5.w, r5.w, r7.z, r7.w  // ::yN<0>
        mul r7.y, r5.w, c132.x  // ::yN<0>

#line 2867
        mad r7.zw, v0.xyxy, c132.xyyz, c132.xywy
        cmp r7.yw, -r4_abs.w, r7.xxzy, r7.xzzw  // ::M<0>, ::N<0>
        abs r4.w, c1.x
        mov r7.xz, r1.xyww
        cmp r8.xz, r0.x, r7.xyyw, r7.yyzw  // ::input3<0>, ::input4<0>

#line 2881
        mov r9.yzw, c56
        add r10.xyz, -r9.yzww, c1.x

#line 2875
        mov r1.x, r7.y

#line 2879
        mov r1.zw, r2.xyyx

#line 2875
        cmp r11.xy, r0.x, r1.yxzw, r1.xzzw  // ::input3<1>, ::input4<1>

#line 2884
        mov r12.xy, r1.xzzw

#line 2879
        mov r12.z, r2.z
        cmp r3.xz, r0.x, r1.wyxw, r12  // ::input3<2>, ::input4<2>

#line 2883
        cmp r5.w, r0.x, r7.y, r3.w  // ::input4<3>
        cmp r2.w, -r10_abs.z, r5.w, r3.w  // ::input4<3>
        cmp r12.xzw, -r10_abs.y, r3, r2  // ::input3<2>, ::input4<2,3>
        mov r3.xz, r2
        mov r3.y, r11.y
        cmp r13, -r10_abs.x, r3, r12  // ::input3<2>, ::input4<1,2,3>
        cmp r7.y, -r10_abs.x, r11.x, r1.y  // ::input3<1>
        mov r12.xzw, r3
        cmp r10, -r4.w, r12, r13  // ::input3<2>, ::input4<1,2,3>
        mov r8.y, r1.y
        cmp r7.xyz, -r4.w, r8.yxzw, r7.yxzw  // ::input3<1,0>, ::input4<0>
        abs r1.z, c2.x
        cmp r8.xy, r0.x, r7.ywzw, r7.wzzw  // ::input3<0>, ::input4<0>

#line 2898
        add r9.xyz, -r9.yzww, c2.x

#line 2892
        mov r11.z, r7.w

#line 2896
        mov r11.xyw, r10.xzzy

#line 2892
        cmp r12.xy, r0.x, r7.xwzw, r11.zwzw  // ::input3<1>, ::input4<1>

#line 2896
        cmp r13.xy, r0.x, r11.xzzw, r11.zyzw  // ::input3<2>, ::input4<2>

#line 2900
        cmp r4.w, r0.x, r7.w, r10.w  // ::input4<3>
        cmp r14.x, -r9_abs.z, r4.w, r10.w  // ::input4<3>
        mov r13.z, r10.w
        mov r14.yz, r11.xxyw
        cmp r11.xyz, -r9_abs.y, r13.yzxw, r14.zxyw  // ::input4<2,3>, ::input3<2>
        mov r12.zw, r10
        cmp r13.yzw, -r9_abs.x, r12, r11.xwxy  // ::input4<1,2,3>
        mov r14.w, r12.x
        mov r11.y, r7.x
        cmp r9.yz, -r9_abs.x, r14.xwyw, r11  // ::input3<1,2>
        mov r10.x, r8.y
        mov r13.x, r7.z
        cmp r3, -r1.z, r10, r13  // ::input4<0,1,2,3>
        mov r8.z, r11.y
        mov r8.w, r14.y
        mov r9.x, r7.y
        cmp r2.xyw, -r1.z, r8.wxzz, r9.zxzy  // ::input3<2,0,1>
        mov oC0, c95.z  // ::main<0,1,2,3>
        mov r0.w, c95.z
      else
        abs r1.z, c3.x
        cmp r0.w, -r1.z, c163_abs.y, c163_abs.x
        if_eq c3.x, r0.z

#line 2792
          texld r7, v0, s0  // ::color<0,1,2,3>

#line 2496
          if_eq c10.x, r0.z

#line 2499
            add r1.z, -r7.x, c49.x
            rcp r4.w, c48.x
            mul r4.w, r4.w, r7.x
            add r5.w, r7.x, c46.x
            add r6.w, -r6.y, c46.x
            rcp r6.w, r6.w
            mul r5.w, r5.w, r6.w
            pow r6.w, r5.w, c45.x
            cmp r1.z, r1.z, r4.w, r6.w  // ::v<0>
            mov r4.w, -c163.y
          else

#line 2504
            if_eq c10.x, -r6.y

#line 2507
              pow r1.z, r7.x, c45.x  // ::v<0>
              mov r4.w, -c163.y
            else

#line 2512
              if_eq c10.x, -r6.x

#line 2521
                mul r5.w, r7.x, -c62.x
                rsq r5.w, r5.w
                rcp r5.w, r5.w  // ::TransferInverse<0>
                cmp r6.w, -r7.x, -c163_abs.y, -c163_abs.x
                cmp r6.w, r7.x, r6.w, c95.z
                mad r8.x, r7.x, c103.x, c103.y
                log r8.x, r8.x
                mad r8.x, r8.x, c103.z, c103.w  // ::TransferInverse<0>
                cmp r1.z, r6.w, r8.x, r5.w  // ::TransferInverse<0>
                mov r4.w, -c163.y
              else

#line 2525
                mov r8.x, c10.x  // ::Companding<0>
                add r5.w, r8.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2534
                pow r5.w, r7.x, c64.x
                mad r8.xy, r5.w, c70, c70.zwzw  // ::a<0>, ::b<0>
                rcp r5.w, r8.y
                mul r5.w, r5.w, r8.x
                pow r1.z, r5.w, c64.y  // ::TransferInverse<0>
              endif
            endif
          endif
          cmp r8.x, -r4.w, r7.x, r1.z  // ::TransferInverse<0>

#line 2496
          if_eq c10.x, r0.z

#line 2499
            add r1.z, -r7.y, c49.x
            rcp r4.w, c48.x
            mul r4.w, r4.w, r7.y
            add r5.w, r7.y, c46.x
            add r6.w, -r6.y, c46.x
            rcp r6.w, r6.w
            mul r5.w, r5.w, r6.w
            pow r6.w, r5.w, c45.x
            cmp r1.z, r1.z, r4.w, r6.w  // ::v<0>
            mov r4.w, -c163.y
          else

#line 2504
            if_eq c10.x, -r6.y

#line 2507
              pow r1.z, r7.y, c45.x  // ::v<0>
              mov r4.w, -c163.y
            else

#line 2512
              if_eq c10.x, -r6.x

#line 2521
                mul r5.w, r7.y, -c62.x
                rsq r5.w, r5.w
                rcp r5.w, r5.w  // ::TransferInverse<0>
                cmp r6.w, -r7.y, -c163_abs.y, -c163_abs.x
                cmp r6.w, r7.y, r6.w, c95.z
                mad r8.w, r7.y, c103.x, c103.y
                log r8.w, r8.w
                mad r8.w, r8.w, c103.z, c103.w  // ::TransferInverse<0>
                cmp r1.z, r6.w, r8.w, r5.w  // ::TransferInverse<0>
                mov r4.w, -c163.y
              else

#line 2525
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2534
                pow r5.w, r7.y, c64.x
                mad r9.xy, r5.w, c70, c70.zwzw  // ::a<0>, ::b<0>
                rcp r5.w, r9.y
                mul r5.w, r5.w, r9.x
                pow r1.z, r5.w, c64.y  // ::TransferInverse<0>
              endif
            endif
          endif
          cmp r8.y, -r4.w, r7.y, r1.z  // ::TransferInverse<0>

#line 2496
          if_eq c10.x, r0.z

#line 2499
            add r1.z, -r7.z, c49.x
            rcp r4.w, c48.x
            mul r4.w, r4.w, r7.z
            add r5.w, r7.z, c46.x
            add r6.w, -r6.y, c46.x
            rcp r6.w, r6.w
            mul r5.w, r5.w, r6.w
            pow r6.w, r5.w, c45.x
            cmp r1.z, r1.z, r4.w, r6.w  // ::v<0>
            mov r4.w, -c163.y
          else

#line 2504
            if_eq c10.x, -r6.y

#line 2507
              pow r1.z, r7.z, c45.x  // ::v<0>
              mov r4.w, -c163.y
            else

#line 2512
              if_eq c10.x, -r6.x

#line 2521
                mul r5.w, r7.z, -c62.x
                rsq r5.w, r5.w
                rcp r5.w, r5.w  // ::TransferInverse<0>
                cmp r6.w, -r7.z, -c163_abs.y, -c163_abs.x
                cmp r6.w, r7.z, r6.w, c95.z
                mad r8.w, r7.z, c103.x, c103.y
                log r8.w, r8.w
                mad r8.w, r8.w, c103.z, c103.w  // ::TransferInverse<0>
                cmp r1.z, r6.w, r8.w, r5.w  // ::TransferInverse<0>
                mov r4.w, -c163.y
              else

#line 2525
                mov r9.x, c10.x  // ::Companding<0>
                add r5.w, r9.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2534
                pow r5.w, r7.z, c64.x
                mad r9.xy, r5.w, c70, c70.zwzw  // ::a<0>, ::b<0>
                rcp r5.w, r9.y
                mul r5.w, r5.w, r9.x
                pow r1.z, r5.w, c64.y  // ::TransferInverse<0>
              endif
            endif
          endif
          cmp r8.z, -r4.w, r7.z, r1.z  // ::TransferInverse<0>

#line 2607
          if_eq c0.x, r0.z
            mov r9.xyz, r8  // ::FLrgb<0,1,2>
            mov r1.z, -c163.y
          else
            if_eq c0.x, -r6.x
              mov r9.xyz, r8  // ::FLrgb<0,1,2>
              mov r1.z, -c163.y
            else
              mov r10.x, c0.x  // ::Model<0>
              if_eq r10.x, -c62.x
                mov r9.xyz, r8  // ::FLrgb<0,1,2>
                mov r1.z, -c163.y
              else
                if_eq r10.x, -c51.x

#line 742
                  add r9.xyz, -r8, -c163.y  // ::Lrgb_CMY<0,1,2>

#line 2610
                  mov r1.z, -c163.y
                else
                  if_eq r10.x, -c65.x

#line 868
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 541
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 850
                    add r6.w, -r4.w, r5.w  // ::c<0>
                    add r8.w, r6.w, c163.y
                    add r11.x, -r6.w, -c163.y
                    rcp r11.x, r11.x
                    mul r4.w, r4.w, r11.x  // ::v<0>

#line 862
                    add r11.xy, -r8, r5.w
                    rcp r5.w, r6.w

#line 868
                    mul r10.y, r5.w, r10.y

#line 860
                    cmp r11.zw, r10.y, c60.xyxy, c60
                    mul r10.y, r10.y, r11.w
                    frc r10.y, r10.y
                    mul r10.y, r10.y, r11.z  // ::h<0>

#line 864
                    mad r10.z, r10.z, r5.w, -c89.x  // ::h<0>

#line 868
                    mad r5.w, r10.w, r5.w, -c51.x  // ::h<0>
                    cmp r5.w, -r11_abs.y, r10.z, r5.w  // ::h<0>
                    cmp r5.w, -r11_abs.x, r10.y, r5.w  // ::h<0>
                    mul r10.y, r5.w, c64.z  // ::h<0>
                    cmp r5.w, r5.w, c132.y, c132.z
                    mul r10.y, r5.w, r10.y
                    frc r10.y, r10.y
                    mul r5.w, r5.w, r10.y  // ::h<0>
                    mul r5.w, r5.w, c165.z
                    cmp r9.x, -r6.w, c95.z, r5.w  // ::Lrgb_HCV<0>
                    mul r9.y, r6.w, c165.w  // ::Lrgb_HCV<1>
                    mul r4.w, r4.w, c165.w
                    cmp r9.z, r8.w, c95.z, r4.w  // ::Lrgb_HCV<2>

#line 2611
                    mov r1.z, -c163.y
                  else
                    if_eq r10.x, -c52.x

#line 547
                      add r4.w, r8.y, r8.x
                      add r4.w, r8.z, r4.w  // ::GetSum<0>

#line 913
                      rcp r5.w, r4.w
                      mul r10.yzw, r5.w, r8.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      mad r11.xyz, r8.xxyw, r5.w, -r10.zwww
                      add r5.w, r11.y, r11.x
                      mul r5.w, r5.w, -c141.w
                      mul r11.xy, r11.xzzw, r11
                      add r6.w, r11.y, r11.x
                      rsq r6.w, r6.w
                      mul r5.w, r5.w, r6.w
                      add r6.w, -r5_abs.w, -c163.y
                      rsq r6.w, r6.w
                      rcp r6.w, r6.w
                      mad r8.w, r5_abs.w, c59.x, c59.y
                      mad r8.w, r8.w, r5_abs.w, c64.w
                      mad r8.w, r8.w, r5_abs.w, c59.z
                      mul r6.w, r6.w, r8.w
                      mad r8.w, r6.w, c107.x, c107.y
                      cmp r5.w, r5.w, c163_abs.x, c163_abs.y
                      mad r5.w, r8.w, r5.w, r6.w  // ::h<0>

#line 918
                      add r6.w, -r5.w, c58.w  // ::h<0>
                      cmp r5.w, r11.z, r5.w, r6.w  // ::h<0>

#line 543
                      min r6.w, r10.w, r10.z
                      min r8.w, r6.w, r10.y  // ::GetMinimum<0>

#line 922
                      mad r6.w, r8.w, -c56.w, c56.y  // ::s<0>
                      mul r9.z, r4.w, c59.w  // ::i<0>
                      mul r9.x, r5.w, c107.z  // ::Lrgb_HCY<0>
                      mul r9.y, r6.w, c165.w  // ::Lrgb_HCY<1>

#line 2612
                      mov r1.z, -c163.y
                    else
                      if_eq r10.x, -c50.z

#line 1128
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 541
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1107
                        add r6.w, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1112
                        add r8.w, r4.w, c163.y

#line 1133
                        mul r9.xz, r4.w, c61.xyyw  // ::Lrgb_HSL<2>

#line 1113
                        rcp r11.x, r9.x
                        mul r11.x, r6.w, r11.x
                        mad r4.w, r4.w, -c56.y, c56.z
                        rcp r4.w, r4.w
                        mul r4.w, r4.w, r6.w
                        cmp r11.y, r8.w, r4.w, r11.x  // ::s<0>

#line 1126
                        add r12.xyz, -r5.w, r8.xzyw

#line 1118
                        rcp r4.w, r6.w

#line 1128
                        mul r5.w, r4.w, r10.y  // ::h<0>

#line 1124
                        mad r11.zw, r10.xyyz, r4.w, c61  // ::h<0>

#line 1119
                        cmp r5.w, r10.y, r5.w, r11.z  // ::h<0>

#line 1128
                        mad r4.w, r10.w, r4.w, -c89.x  // ::h<0>
                        cmp r4.w, -r12_abs.z, r4.w, c95.z  // ::h<0>
                        cmp r4.w, -r12_abs.y, r11.w, r4.w  // ::h<0>
                        cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                        mul r11.x, r4.w, c107.w  // ::h<0>
                        cmp r9.xw, -r6_abs.w, c95.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2613
                        mul r9.y, r9.w, c165.w
                        mov r1.z, -c163.y
                      else
                        if_eq r10.x, -c117.z

#line 1030
                          add r10.xyz, -r8.zxyw, r8.yzxw

#line 541
                          cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1009
                          add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 1018
                          rcp r6.w, r5.w
                          mul r11.y, r4.w, r6.w  // ::_s<0>

#line 1029
                          add r12.xyz, -r5.w, r8

#line 1022
                          rcp r6.w, r4.w

#line 1030
                          mul r8.w, r6.w, r10.x  // ::_h<0>
                          mad r10.zw, r10.xyxz, r6.w, c61  // ::_h<0>

#line 1023
                          cmp r8.w, r10.x, r8.w, r10.z  // ::_h<0>

#line 1027
                          mad r6.w, r10.y, r6.w, -c89.x  // ::_h<0>

#line 1030
                          cmp r10.x, -r12_abs.z, r10.w, c95.z  // ::_h<0>
                          cmp r6.w, -r12_abs.y, r6.w, r10.x  // ::_h<0>
                          cmp r6.w, -r12_abs.x, r8.w, r6.w  // ::_h<0>
                          mul r11.x, r6.w, c107.w  // ::_h<0>
                          cmp r9.xw, -r4_abs.w, c95.z, r11.xyzy  // ::_h<0>, ::_s<0>
                          mul r9.z, r5.w, c165.w  // ::Lrgb_HSB<2>

#line 2614
                          mul r9.y, r9.w, c165.w
                          mov r1.z, -c163.y
                        else
                          add r4.w, r6.z, c0.x
                          cmp r1.z, -r4_abs.w, c163_abs.y, c163_abs.x

#line 1128
                          add r10.xyz, -r8.zyxw, r8.yxzw

#line 541
                          cmp r11.xy, r10.x, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1107
                          add r6.w, -r4.w, r5.w  // ::chroma<0>
                          add r4.w, r4.w, r5.w

#line 1112
                          add r8.w, r4.w, c163.y

#line 1133
                          mul r9.xz, r4.w, c61.xyyw  // ::Lrgb_HSL<2>

#line 1113
                          rcp r10.w, r9.x
                          mul r10.w, r6.w, r10.w
                          mad r4.w, r4.w, -c56.y, c56.z
                          rcp r4.w, r4.w
                          mul r4.w, r4.w, r6.w
                          cmp r11.y, r8.w, r4.w, r10.w  // ::s<0>

#line 1126
                          add r12.xyz, -r5.w, r8.xzyw

#line 1118
                          rcp r4.w, r6.w

#line 1128
                          mul r5.w, r4.w, r10.x  // ::h<0>

#line 1124
                          mad r10.yw, r10.xxzy, r4.w, c61.xzzw  // ::h<0>

#line 1119
                          cmp r5.w, r10.x, r5.w, r10.y  // ::h<0>

#line 1128
                          mad r4.w, r10.z, r4.w, -c89.x  // ::h<0>
                          cmp r4.w, -r12_abs.z, r4.w, c95.z  // ::h<0>
                          cmp r4.w, -r12_abs.y, r10.w, r4.w  // ::h<0>
                          cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                          mul r11.x, r4.w, c107.w  // ::h<0>
                          cmp r9.xw, -r6_abs.w, c95.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2615
                          mul r9.y, r9.w, c165.w
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2664
          else

#line 2617
            mov r10.x, c0.x  // ::Model<0>
            if_eq r10.x, c141.x

#line 1128
              add r10.yzw, -r8.xzyx, r8.xyxz

#line 541
              cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
              min r1.z, r11.x, r8.x  // ::GetMinimum<0>
              max r4.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1107
              add r5.w, -r1.z, r4.w  // ::chroma<0>
              add r1.z, r1.z, r4.w

#line 1112
              add r6.w, r1.z, c163.y

#line 1133
              mul r9.xz, r1.z, c61.xyyw  // ::Lrgb_HSL<2>

#line 1113
              rcp r8.w, r9.x
              mul r8.w, r5.w, r8.w
              mad r1.z, r1.z, -c56.y, c56.z
              rcp r1.z, r1.z
              mul r1.z, r1.z, r5.w
              cmp r11.y, r6.w, r1.z, r8.w  // ::s<0>

#line 1126
              add r12.xyz, -r4.w, r8.xzyw

#line 1118
              rcp r1.z, r5.w

#line 1128
              mul r4.w, r1.z, r10.y  // ::h<0>

#line 1124
              mad r11.zw, r10.xyyz, r1.z, c61  // ::h<0>

#line 1119
              cmp r4.w, r10.y, r4.w, r11.z  // ::h<0>

#line 1128
              mad r1.z, r10.w, r1.z, -c89.x  // ::h<0>
              cmp r1.z, -r12_abs.z, r1.z, c95.z  // ::h<0>
              cmp r1.z, -r12_abs.y, r11.w, r1.z  // ::h<0>
              cmp r1.z, -r12_abs.x, r4.w, r1.z  // ::h<0>
              mul r11.x, r1.z, c107.w  // ::h<0>
              cmp r9.xw, -r5_abs.w, c95.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2617
              mul r9.y, r9.w, c165.w
              mov r1.z, -c163.y
            else
              if_eq r10.x, -c51.z

#line 1156
                frc r4.w, c0.x
                add r4.w, -r4.w, c0.x
                add r11, r4.w, c50
                add r12, r4.w, c117
                add r13, r4.w, c89
                add r14, r4.w, c62
                add r15, r4.w, c51
                add r16, r4.w, c65
                add r17, r4.w, c52
                add r18, r4.w, c53
                add r19, r4.w, c94
                add r20, r4.w, c67
                add r21, r4.w, c11
                add r22, r4.w, c73
                add r23, r4.w, c35
                cmp r10.yzw, -r11_abs.x, c165.x, c165.y
                cmp r10.yzw, -r12_abs.x, -c163.y, r10
                cmp r10.yzw, -r13_abs.x, c165.x, r10
                cmp r10.yzw, -r14_abs.x, c165.x, r10
                cmp r10.yzw, -r15_abs.x, -c163.y, r10
                cmp r10.yzw, -r16_abs.x, c165.xzww, r10
                cmp r10.yzw, -r17_abs.x, c165.xzwx, r10
                cmp r10.yzw, -r11_abs.z, c165.xzww, r10
                cmp r10.yzw, -r12_abs.z, c165.xzww, r10
                cmp r10.yzw, -r13_abs.z, c165.xzww, r10
                cmp r10.yzw, -r14_abs.z, c165.xzww, r10
                cmp r10.yzw, -r15_abs.z, c165.xzwx, r10
                cmp r10.yzw, -r16_abs.z, c165.xzwx, r10
                cmp r10.yzw, -r17_abs.z, c165.xzww, r10
                cmp r10.yzw, -r18_abs.x, -c163.y, r10
                cmp r10.yzw, -r18_abs.z, c165.xwwz, r10
                cmp r10.yzw, -r19_abs.x, c165.xwwz, r10
                cmp r10.yzw, -r19_abs.z, c165.xwwz, r10
                cmp r10.yzw, -r20_abs.x, c165.x, r10
                cmp r10.yzw, -r20_abs.y, c165.w, r10
                cmp r10.yzw, -r21_abs.x, c66.xxyy, r10
                cmp r10.yzw, -r21_abs.y, -c163.y, r10
                cmp r10.yzw, -r21_abs.z, -c163.y, r10
                cmp r10.yzw, -r21_abs.w, c165.xzww, r10
                cmp r10.yzw, -r22_abs.x, c165.xzww, r10
                cmp r10.yzw, -r22_abs.y, c165.xzww, r10
                cmp r10.yzw, -r22_abs.z, c165.xwwz, r10
                cmp r10.yzw, -r22_abs.w, c165.xwwz, r10
                cmp r10.yzw, -r23_abs.x, c66.xzzw, r10
                cmp r10.yzw, -r23_abs.y, c165.xwwz, r10
                cmp r10.yzw, -r23_abs.z, c165.xwwz, r10
                cmp r10.yzw, -r23_abs.w, c165.xwwz, r10
                cmp r10.yzw, -r11_abs.y, -c163.y, r10
                cmp r10.yzw, -r12_abs.y, c167.xxyz, r10
                cmp r10.yzw, -r13_abs.y, c165.xwwz, r10
                cmp r10.yzw, -r14_abs.y, c165.xwwz, r10
                cmp r10.yzw, -r15_abs.y, c165.xwwz, r10
                cmp r10.yzw, -r16_abs.y, -c163.y, r10
                cmp r10.yzw, -r17_abs.y, -c163.y, r10
                cmp r10.yzw, -r11_abs.w, -c163.y, r10
                cmp r10.yzw, -r12_abs.w, c167.xyzx, r10
                cmp r10.yzw, -r13_abs.w, c165.x, r10
                cmp r10.yzw, -r14_abs.w, -c163.y, r10
                cmp r10.yzw, -r15_abs.w, c167.xwxx, r10
                cmp r10.yzw, -r16_abs.w, -c163.y, r10
                cmp r10.yzw, -r17_abs.w, c168.xxyy, r10
                cmp r10.yzw, -r18_abs.y, c168.xzww, r10
                cmp r10.yzw, -r18_abs.w, c166.xxyy, r10
                cmp r10.yzw, -r19_abs.y, -c163.y, r10
                cmp r10.yzw, -r19_abs.w, c166.xxzw, r10
                cmp r10.yzw, -r20_abs.z, c168.xzww, r10
                cmp r10.yzw, -r20_abs.w, c168.xzww, r10  // ::max<0,1,2>
                add r4.w, r8.y, r8.y
                mad r4.w, r8.x, -c51.x, r4.w
                add r4.w, r8.z, r4.w

#line 1195
                mul r5.w, r4.w, c63.x  // ::m<0>

#line 1162
                mad r11.xyz, r4.w, -c63.x, r8
                mul r6.w, r11.y, -c51.x
                mad r6.w, r11.x, -c62.x, -r6.w
                mad r6.w, r11.z, c51.x, r6.w
                mul r6.w, r6.w, c63.y  // ::j<0>
                mul r11.xy, r11, r11
                add r8.w, r11.y, r11.x
                mad r8.w, r11.z, r11.z, r8.w
                rsq r8.w, r8.w
                mul r6.w, r6.w, r8.w
                add r11.x, -r6_abs.w, -c163.y
                rsq r11.x, r11.x
                rcp r11.x, r11.x
                mad r11.y, r6_abs.w, c59.x, c59.y
                mad r11.y, r11.y, r6_abs.w, c64.w
                mad r11.y, r11.y, r6_abs.w, c59.z
                mul r11.x, r11.x, r11.y
                mad r11.y, r11.x, c107.x, c107.y
                cmp r6.w, r6.w, c163_abs.x, c163_abs.y
                mad r6.w, r11.y, r6.w, r11.x  // ::t<0>
                add r11.x, -r8.z, r8.y
                add r11.y, -r6.w, c58.w
                cmp r6.w, r11.x, r6.w, r11.y  // ::w<0>

#line 1195
                mad r11.xy, r4.w, -c63.x, c63.zwzw  // Pow2::input<0,0>

#line 581
                mul r11.x, r11.x, r11.x  // ::Pow2<0>

#line 1175
                dp2add r11.x, r5.w, r5.w, r11.x  // ::v<0>

#line 404
                add r11.z, -r4.w, c127.x

#line 1195
                mad r11.w, r4.w, c127.y, c127.z  // Pow2::input<0>

#line 581
                mul r11.w, r11.w, r11.w  // ::Pow2<0>

#line 1195
                dp2add r11.y, r11.y, r11.y, r11.w  // ::v<0>
                cmp r11.z, r11.z, -c163_abs.y, -c163_abs.x
                cmp r11.z, -r4.w, c95.z, r11.z
                cmp r11.y, r11.z, c95.z, r11.y  // ::v<0>
                cmp r11.z, -r4.w, -c163_abs.y, -c163_abs.x
                cmp r4.w, r4.w, r11.z, c95.z
                cmp r4.w, r4.w, r11.y, r11.x  // ::v<0>
                mul r6.w, r10.y, r6.w
                rcp r8.w, r8.w
                rsq r4.w, r4.w
                mul r4.w, r4.w, r8.w  // ::s<0>
                mul r9.x, r6.w, c132.x  // ::Lrgb_HSM<0>
                mul r9.y, r10.z, r4.w  // ::Lrgb_HSM<1>
                mul r9.z, r10.w, r5.w  // ::Lrgb_HSM<2>

#line 2618
                mov r1.z, -c163.y
              else
                if_eq r10.x, -c65.z

#line 1335
                  mul r10.yzw, r8.xxyz, c165.x  // ::_input<0,1,2>

#line 1339
                  mul r11.xyz, r10.yzww, r10.yzww
                  mul r11.xy, r11, c160
                  add r4.w, r11.y, r11.x
                  mad r4.w, r11.z, c127.w, r4.w
                  rsq r4.w, r4.w
                  rcp r4.w, r4.w  // ::p<0>
                  mad r11.xy, r8.x, c165.x, -r10.wzzw
                  cmp r5.w, -r11_abs.x, c163_abs.y, c163_abs.x
                  cmp r5.w, -r11_abs.y, r5.w, c95.z
                  if_ne r5.w, -r5.w

#line 1344
                    mov r11.zw, c95.z  // ::h<0>, ::s<0>
                  else

#line 1357
                    mad r12.xy, r8.yzzw, c165.x, -r10.wzzw
                    mul r12.zw, r12.xyyx, c64.z

#line 1352
                    rcp r5.w, r11.y
                    mad r13.y, r12.z, -r5.w, -c163.y  // ::h<0>
                    rcp r5.w, r10.y

#line 1357
                    rcp r6.w, r11.x
                    mul r13.x, r6.w, r12.w  // ::h<0>
                    mad r13.zw, r10, -r5.w, -c163.y  // ::s<0,0>
                    cmp r12.zw, r12.y, r13.xyyz, r13.xyxw  // ::h<0>, ::s<0>
                    cmp r5.w, r11.x, -c163_abs.y, -c163_abs.x
                    cmp r5.w, r11.y, r5.w, c95.z
                    cmp r12.zw, r5.w, c95.z, r12  // ::h<0>, ::s<0>

#line 1387
                    mul r13.xy, r11, c64.z

#line 1367
                    rcp r5.w, r12.x
                    mad r14.y, r13.x, -r5.w, c59.w  // ::h<0>
                    rcp r5.w, r10.z

#line 1372
                    mad r13.xz, r8.yyzw, c165.x, -r10.y

#line 1382
                    mul r15.xy, r13.zxzw, c64.z

#line 1372
                    rcp r6.w, r13.x
                    mad r14.x, r15.x, r6.w, c59.w  // ::h<0>
                    mad r14.zw, r10.xywy, -r5.w, -c163.y  // ::s<0,0>
                    cmp r11.xy, r11.x, r14.yzzw, r14.xwzw  // ::h<0>, ::s<0>

#line 1390
                    cmp r14.xy, r12, -c163_abs.y, -c163_abs.x
                    cmp r14.xy, r13.xzzw, r14, c95.z

#line 1375
                    cmp r11.xy, r14.x, r12.zwzw, r11  // ::h<0>, ::s<0>

#line 1382
                    rcp r5.w, r13.z
                    mad r15.y, r15.y, -r5.w, c160.z  // ::h<0>
                    rcp r5.w, r10.w

#line 1387
                    rcp r6.w, r12.y
                    mad r15.x, r13.y, r6.w, c160.z  // ::h<0>
                    mad r15.zw, r10.xyyz, -r5.w, -c163.y  // ::s<0,0>
                    cmp r10.yz, r13.x, r15, r15.xxww  // ::h<0>, ::s<0>
                    cmp r11.zw, r14.y, r11.xyxy, r10.xyyz  // ::h<0>, ::s<0>
                  endif
                  mul r9.y, r11.w, c165.w  // ::Lrgb_HSP<1>
                  mad r5.w, r11.z, c162.x, c162.y
                  frc r6.w, r5.w
                  add r9.x, r5.w, -r6.w  // ::Lrgb_HSP<0>
                  add r4.w, r4.w, -c141.w
                  frc r5.w, r4.w
                  add r9.z, r4.w, -r5.w  // ::Lrgb_HSP<2>

#line 2619
                  mov r1.z, -c163.y
                else
                  if_eq r10.x, -c52.z

#line 1030
                    add r10.yzw, -r8.xzxy, r8.xyzx

#line 541
                    cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                    min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                    max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1009
                    add r6.w, -r4.w, r5.w  // ::chroma<0>

#line 1029
                    add r11.xyz, -r5.w, r8

#line 1022
                    rcp r8.w, r6.w

#line 1030
                    mul r11.w, r8.w, r10.y  // ::_h<0>
                    mad r12.xy, r10.ywzw, r8.w, c61.zwzw  // ::_h<0>

#line 1023
                    cmp r10.y, r10.y, r11.w, r12.x  // ::_h<0>

#line 1027
                    mad r8.w, r10.z, r8.w, -c89.x  // ::_h<0>

#line 1030
                    cmp r10.z, -r11_abs.z, r12.y, c95.z  // ::_h<0>
                    cmp r8.w, -r11_abs.y, r8.w, r10.z  // ::_h<0>
                    cmp r8.w, -r11_abs.x, r10.y, r8.w  // ::_h<0>
                    mul r8.w, r8.w, c107.w  // ::_h<0>
                    cmp r9.x, -r6_abs.w, c95.z, r8.w  // ::_h<0>

#line 1424
                    add r5.w, -r5.w, -c163.y  // ::black<0>
                    mul r9.y, r4.w, c165.w  // ::Lrgb_HWB<1>
                    mul r9.z, r5.w, c165.w  // ::Lrgb_HWB<2>

#line 2620
                    mov r1.z, -c163.y
                  else

#line 2624
                    add r11, r10.x, c170
                    add r10.yz, r10.x, c67.xxyw

#line 2377
                    dp3 r4.w, r8, c148  // ::y<0>
                    add r12.xy, -r4.w, r8.zxzw

#line 2421
                    mad r4.w, r4.w, c162.z, c162.w  // ::Lrgb_YCbCr<0>
                    mad r12.xy, r12, c161, c161.z  // ::Lrgb_YCbCr<1,2>

#line 2441
                    mul r5.w, r12.x, c160.y
                    mad r5.w, r4.w, c160.x, r5.w
                    mad r13.x, r12.y, c127.w, r5.w  // ::Lrgb_JPEG<0>
                    mad r5.w, r4.w, -c161.w, c161.z
                    mad r5.w, r12.x, -c160.w, r5.w
                    mad r13.y, r12.y, -c141.w, r5.w  // ::Lrgb_JPEG<1>
                    mad r4.w, r4.w, c126.x, c126.y
                    mad r4.w, r12.x, -c148.w, r4.w
                    mad r13.z, r12.y, -c126.z, r4.w  // ::Lrgb_JPEG<2>

#line 2626
                    cmp r4.w, -r10_abs.z, c163_abs.y, c163_abs.x
                    cmp r12.xyz, -r10_abs.z, c95.z, r9  // ::FLrgb<0,1,2>
                    cmp r12.xyz, -r10_abs.y, r13, r12  // ::FLrgb<0,1,2>
                    cmp r4.w, -r10_abs.y, -c163.y, r4.w
                    cmp r10.yzw, -r11_abs.w, r8.xxyz, r12.xxyz  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.w, -c163.y, r4.w
                    cmp r10.yzw, -r11_abs.z, r8.xxyz, r10  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.z, -c163.y, r4.w
                    cmp r10.yzw, -r11_abs.y, r8.xxyz, r10  // ::FLrgb<0,1,2>
                    cmp r4.w, -r11_abs.y, -c163.y, r4.w
                    cmp r9.xyz, -r11_abs.x, r8, r10.yzww  // ::FLrgb<0,1,2>
                    cmp r1.z, -r11_abs.x, -c163.y, r4.w
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2664
            else

#line 2628
              if_eq r10.x, -c11.x

#line 591
                abs r1.z, c13.x

#line 595
                rcp r4.w, c13.x
                mul r11.x, r4.w, c12.x  // ::xyY_XYZ<0>
                mov r12.x, c13.x  // ::WhiteY<0>
                add r5.w, -r12.x, -c12.x
                add r5.w, r5.w, -c163.y
                mul r11.z, r4.w, r5.w  // ::xyY_XYZ<2>
                mov r11.y, -c163.y
                cmp r10.yzw, -r1.z, c126.w, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 553
                mul r11.xyz, r8.y, c18
                mad r11.xyz, r8.x, c17, r11
                mad r11.xyz, r8.z, c19, r11  // ::x<0>, ::y<0>, ::z<0>

#line 635
                add r12.xy, r10.ywzw, c68

#line 638
                cmp r4.w, -r12_abs.y, c68.z, c68.w
                cmp r4.w, -r1.z, c95.z, r4.w
                cmp r4.w, -r12_abs.x, r4.w, c95.z

#line 648
                add r12.xy, r10.zwzw, r10.yzzw
                mul r12.xy, r12, c125  // ::Ka<0,0>
                cmp r12.xy, r4.w, r12, c125.zwzw  // ::ComputeKa<0>, ::ComputeKb<0>

#line 1699
                cmp r1.z, -r1.z, c143.x, c143.y
                mul r1.z, r1.z, r11.y
                rsq r4.w, r1.z
                rcp r5.w, r4.w
                mul r9.x, r5.w, c165.w  // ::L<0>
                rcp r5.w, r10.y
                mad r5.w, r11.x, r5.w, -r1.z
                mul r5.w, r4.w, r5.w
                mul r9.y, r5.w, r12.x  // ::a<0>
                rcp r5.w, r10.w
                mad r1.z, r11.z, -r5.w, r1.z
                mul r1.z, r4.w, r1.z
                mul r9.z, r1.z, r12.y  // ::b<0>

#line 2628
                mov r1.z, -c163.y
              else
                if_eq r10.x, -c11.y

#line 553
                  mul r11, r8.y, c18.yzxy
                  mad r11, r8.x, c17.yzxy, r11
                  mad r11, r8.z, c19.yzxy, r11  // ::y<0>, ::z<0>, ::x<0>, ::y<0>

#line 1748
                  mul r10.yz, r11.xzww, c143.xzww
                  add r4.w, r10.z, r10.y
                  mad r4.w, r11.y, -c69.x, r4.w  // PerceptualQuantizer::x<0>

#line 567
                  mul r4.w, r4.w, c69.y
                  pow r5.w, r4.w, c64.x  // ::xx<0>
                  mad r10.yz, r5.w, c70.xxyw, c70.xzww
                  rcp r4.w, r10.z
                  mul r4.w, r4.w, r10.y
                  pow r5.w, r4.w, c69.z  // ::result<0>

#line 1749
                  mul r10.yzw, r11.xxzw, c159.xxyz
                  mad r4.w, r11.z, c69.w, r10.y
                  mad r4.w, r11.y, c159.w, r4.w  // PerceptualQuantizer::x<0>

#line 567
                  mul r4.w, r4.w, c69.y
                  pow r6.w, r4.w, c64.x  // ::xx<0>
                  mad r11.xz, r6.w, c70.xyyw, c70.zyww
                  rcp r4.w, r11.z
                  mul r4.w, r4.w, r11.x
                  pow r6.w, r4.w, c69.z  // ::result<0>

#line 1749
                  add r4.w, r10.w, r10.z
                  mad r4.w, r11.y, c158.x, r4.w  // PerceptualQuantizer::x<0>

#line 567
                  mul r4.w, r4.w, c69.y
                  pow r8.w, r4.w, c64.x  // ::xx<0>
                  mad r10.yz, r8.w, c70.xxyw, c70.xzww
                  rcp r4.w, r10.z
                  mul r4.w, r4.w, r10.y
                  pow r8.w, r4.w, c69.z  // ::result<0>

#line 1751
                  add r4.w, r5.w, r6.w

#line 1754
                  mul r10.yz, r6.w, c158
                  mad r6.w, r5.w, c158.w, -r10.y
                  mad r9.y, r8.w, c157.x, r6.w  // ::az<0>
                  mad r5.w, r5.w, c157.y, r10.z
                  mad r9.z, r8.w, -c157.z, r5.w  // ::bz<0>
                  mul r5.w, r4.w, c157.w
                  mad r4.w, r4.w, -c72.x, c72.y
                  rcp r4.w, r4.w
                  mad r9.x, r5.w, r4.w, c72.z  // ::Jz<0>

#line 2629
                  mov r1.z, -c163.y
                else
                  if_eq r10.x, -c11.z

#line 553
                    mov r11.xyz, c29  // ::LMSk_LABk_x<0,1,2>
                    add r10.yzw, r11.xxyz, c30.xxyz
                    add r9.xyz, r10.yzww, c31  // ::x<0>, ::y<0>, ::z<0>

#line 2630
                    mov r1.z, -c163.y
                  else
                    if_eq r10.x, -c11.w

#line 1030
                      add r10.yzw, -r8.xzxy, r8.xyzx

#line 541
                      cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                      min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                      max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1009
                      add r4.w, -r4.w, r5.w  // ::chroma<0>

#line 1018
                      rcp r6.w, r5.w
                      mul r11.y, r4.w, r6.w  // ::_s<0>

#line 1029
                      add r12.xyz, -r5.w, r8

#line 1022
                      rcp r6.w, r4.w

#line 1030
                      mul r8.w, r6.w, r10.y  // ::_h<0>
                      mad r11.zw, r10.xyyw, r6.w, c61  // ::_h<0>

#line 1023
                      cmp r8.w, r10.y, r8.w, r11.z  // ::_h<0>

#line 1027
                      mad r6.w, r10.z, r6.w, -c89.x  // ::_h<0>

#line 1030
                      cmp r10.y, -r12_abs.z, r11.w, c95.z  // ::_h<0>
                      cmp r6.w, -r12_abs.y, r6.w, r10.y  // ::_h<0>
                      cmp r6.w, -r12_abs.x, r8.w, r6.w  // ::_h<0>
                      mul r11.x, r6.w, c107.w  // ::_h<0>
                      cmp r9.xw, -r4_abs.w, c95.z, r11.xyzy  // ::_h<0>, ::_s<0>
                      mul r9.z, r5.w, c165.w  // ::Lrgb_HSB<2>

#line 2631
                      mul r9.y, r9.w, c165.w
                      mov r1.z, -c163.y
                    else
                      if_eq r10.x, -c73.x

#line 1128
                        add r10.yzw, -r8.xzyx, r8.xyxz

#line 541
                        cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                        min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                        max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1107
                        add r6.w, -r4.w, r5.w  // ::chroma<0>
                        add r4.w, r4.w, r5.w

#line 1112
                        add r8.w, r4.w, c163.y

#line 1133
                        mul r9.xz, r4.w, c61.xyyw  // ::Lrgb_HSL<2>

#line 1113
                        rcp r11.x, r9.x
                        mul r11.x, r6.w, r11.x
                        mad r4.w, r4.w, -c56.y, c56.z
                        rcp r4.w, r4.w
                        mul r4.w, r4.w, r6.w
                        cmp r11.y, r8.w, r4.w, r11.x  // ::s<0>

#line 1126
                        add r12.xyz, -r5.w, r8.xzyw

#line 1118
                        rcp r4.w, r6.w

#line 1128
                        mul r5.w, r4.w, r10.y  // ::h<0>

#line 1124
                        mad r11.zw, r10.xyyz, r4.w, c61  // ::h<0>

#line 1119
                        cmp r5.w, r10.y, r5.w, r11.z  // ::h<0>

#line 1128
                        mad r4.w, r10.w, r4.w, -c89.x  // ::h<0>
                        cmp r4.w, -r12_abs.z, r4.w, c95.z  // ::h<0>
                        cmp r4.w, -r12_abs.y, r11.w, r4.w  // ::h<0>
                        cmp r4.w, -r12_abs.x, r5.w, r4.w  // ::h<0>
                        mul r11.x, r4.w, c107.w  // ::h<0>
                        cmp r9.xw, -r6_abs.w, c95.z, r11.xyzy  // ::h<0>, ::s<0>

#line 2632
                        mul r9.y, r9.w, c165.w
                        mov r1.z, -c163.y
                      else
                        if_eq r10.x, -c73.y

#line 1030
                          add r10.yzw, -r8.xzxy, r8.xyzx

#line 541
                          cmp r11.xy, r10.y, r8.zyzw, r8.yzzw
                          min r4.w, r11.x, r8.x  // ::GetMinimum<0>
                          max r5.w, r8.x, r11.y  // ::GetMaximum<0>

#line 1009
                          add r6.w, -r4.w, r5.w  // ::chroma<0>

#line 1029
                          add r11.xyz, -r5.w, r8

#line 1022
                          rcp r8.w, r6.w

#line 1030
                          mul r9.w, r8.w, r10.y  // ::_h<0>
                          mad r12.xy, r10.ywzw, r8.w, c61.zwzw  // ::_h<0>

#line 1023
                          cmp r9.w, r10.y, r9.w, r12.x  // ::_h<0>

#line 1027
                          mad r8.w, r10.z, r8.w, -c89.x  // ::_h<0>

#line 1030
                          cmp r10.y, -r11_abs.z, r12.y, c95.z  // ::_h<0>
                          cmp r8.w, -r11_abs.y, r8.w, r10.y  // ::_h<0>
                          cmp r8.w, -r11_abs.x, r9.w, r8.w  // ::_h<0>
                          mul r8.w, r8.w, c107.w  // ::_h<0>
                          cmp r9.x, -r6_abs.w, c95.z, r8.w  // ::_h<0>

#line 1424
                          add r5.w, -r5.w, -c163.y  // ::black<0>
                          mul r9.y, r4.w, c165.w  // ::Lrgb_HWB<1>
                          mul r9.z, r5.w, c165.w  // ::Lrgb_HWB<2>

#line 2633
                          mov r1.z, -c163.y
                        else
                          if_eq r10.x, -c73.z
                            mov r9.xyz, c95.z  // ::FLrgb<0,1,2>
                            mov r1.z, -c163.y
                          else
                            if_eq r10.x, -c73.w
                              mov r9.xyz, c95.z  // ::FLrgb<0,1,2>
                              mov r1.z, -c163.y
                            else
                              if_eq r10.x, -c35.x
                                mov r9.xyz, c95.z  // ::FLrgb<0,1,2>
                                mov r1.z, -c163.y
                              else
                                add r4.w, r10.x, c35.y
                                cmp r1.z, -r4_abs.w, c163_abs.y, c163_abs.x
                                cmp r9.xyz, -r4_abs.w, c95.z, r9  // ::FLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2664
              else

#line 2639
                if_eq r10.x, -c35.z
                  mov r9.xyz, c95.z  // ::FLrgb<0,1,2>
                  mov r1.z, -c163.y
                else
                  if_eq r10.x, -c35.w
                    mov r9.xyz, c95.z  // ::FLrgb<0,1,2>
                    mov r1.z, -c163.y
                  else
                    if_eq r10.x, -c54.x

#line 553
                      mul r10.yzw, r8.y, c18.xxyz
                      mad r10.yzw, r8.x, c17.xxyz, r10
                      mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>
                      mul r11.xyz, r10.z, c21
                      mad r11.xyz, r10.y, c20, r11
                      mad r9.xyz, r10.w, c22, r11  // ::x<0>, ::y<0>, ::z<0>

#line 2641
                      mov r1.z, -c163.y
                    else
                      if_eq r10.x, -c54.y

#line 591
                        abs r4.w, c13.x

#line 595
                        rcp r5.w, c13.x
                        mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                        mov r12.x, c13.x  // ::WhiteY<0>
                        add r6.w, -r12.x, -c12.x
                        add r6.w, r6.w, -c163.y
                        mul r11.z, r5.w, r6.w  // ::xyY_XYZ<2>
                        mov r11.y, -c163.y
                        cmp r10.yzw, -r4.w, c126.w, r11.xxyz  // ::xyY_XYZ<0,1,2>

#line 654
                        cmp r11.xy, -r4.w, c142, c142.zwzw

#line 1858
                        mul r4.w, r8.y, r11.x  // ::yr<0>

#line 654
                        mul r5.w, r8.x, -c51.x
                        mad r6.w, r8.y, -c53.z, r8.x
                        mad r6.w, r8.z, -c62.x, r6.w
                        rcp r6.w, r6.w

#line 659
                        mul r8.w, r8.y, r6.w

#line 654
                        add r9.w, r10.y, r11.y
                        mul r10.y, r10.y, -c51.x
                        mad r9.w, r10.w, -c62.x, r9.w
                        rcp r9.w, r9.w
                        mul r10.y, r9.w, r10.y  // ::ComputeKu<0>

#line 659
                        mul r9.w, r10.z, r9.w
                        mul r9.w, r9.w, -c89.z  // ::ComputeKv<0>

#line 1865
                        mad r10.z, r8.y, -r11.x, c72.w
                        mul r4.w, r4.w, c83.x
                        cmp r4.w, r10.z, r4.w, c165.w  // ::L<0>

#line 1868
                        max r9.x, r4.w, c95.z  // ::L<0>

#line 1871
                        mul r4.w, r9.x, -c52.z
                        mad r5.w, r5.w, r6.w, -r10.y
                        mul r9.y, r4.w, r5.w  // ::u<0>

#line 1874
                        mad r5.w, r8.w, -c89.z, -r9.w
                        mul r9.z, r4.w, r5.w  // ::v<0>

#line 2642
                        mov r1.z, -c163.y
                      else
                        if_eq r10.x, -c54.z
                          mov r9.xyz, r8  // ::FLrgb<0,1,2>
                          mov r1.z, -c163.y
                        else
                          if_eq r10.x, -c54.w
                            mov r9.xyz, r8  // ::FLrgb<0,1,2>
                            mov r1.z, -c163.y
                          else
                            if_eq r10.x, -c36.x
                              mov r9.xyz, r8  // ::FLrgb<0,1,2>
                              mov r1.z, -c163.y
                            else
                              if_eq r10.x, -c36.y

#line 602
                                add r4.w, r8.y, r8.x
                                add r4.w, r8.z, r4.w  // ::sum<0>

#line 607
                                rcp r5.w, r4.w
                                mul r10.yz, r5.w, r8.xxyw  // ::XYZ_xyY<0,1>
                                cmp r9.xy, -r4_abs.w, c95.z, r10.yzzw  // ::XYZ_xyY<0,1>

#line 2646
                                mov r9.z, r8.y
                                mov r1.z, -c163.y
                              else
                                if_eq r10.x, -c36.z

#line 1459
                                  add r4.w, r8.y, r8.x
                                  add r4.w, r8.z, r4.w  // ::sum<0>
                                  rcp r5.w, r4.w
                                  mul r10.yz, r5.w, r8.xxyw
                                  cmp r10.yz, -r4_abs.w, c95.z, r10  // ::x<0>, ::y<0>

#line 1464
                                  rcp r4.w, r10.z
                                  mul r4.w, r4.w, r10.y
                                  mov_sat r5.w, r4_abs.w
                                  add r6.w, r4_abs.w, c163.y
                                  rcp r8.w, r4_abs.w
                                  cmp r6.w, r6.w, r8.w, -c163.y
                                  mul r5.w, r5.w, r6.w
                                  mul r6.w, r5.w, r5.w
                                  mad r8.w, r6.w, c57.x, c57.y
                                  mad r8.w, r6.w, r8.w, c57.z
                                  mad r8.w, r6.w, r8.w, c57.w
                                  mad r6.w, r6.w, r8.w, c58.x
                                  mul r5.w, r5.w, r6.w
                                  add r6.w, -r4_abs.w, -c163.y
                                  cmp r6.w, r6.w, c163_abs.x, c163_abs.y
                                  mad r8.w, r5.w, c58.y, c58.z
                                  mad r5.w, r8.w, r6.w, r5.w
                                  min r6.w, r4.w, -c163.y
                                  cmp r4.w, r6.w, c163_abs.x, c163_abs.y
                                  add r6.w, r5.w, r5.w
                                  mad r4.w, r4.w, -r6.w, r5.w
                                  mad r11.xy, r4.w, c83.y, c83.zwzw
                                  cmp r4.w, r10.z, c95.z, r11.y
                                  cmp r9.x, -r10.z, r4.w, r11.x  // ::tsl<0>
                                  mul r10.yz, r10, r10
                                  add r4.w, r10.z, r10.y
                                  rsq r4.w, r4.w
                                  rcp r9.y, r4.w  // ::tsl<1>
                                  dp3 r9.z, r8, c156  // ::tsl<2>

#line 2647
                                  mov r1.z, -c163.y
                                else
                                  add r4.w, r10.x, c36.w
                                  cmp r1.z, -r4_abs.w, c163_abs.y, c163_abs.x

#line 553
                                  mul r10.yzw, r8.y, c18.xxyz
                                  mad r10.yzw, r8.x, c17.xxyz, r10
                                  mad r10.yzw, r8.z, c19.xxyz, r10  // ::x<0>, ::y<0>, ::z<0>

#line 2144
                                  mad r5.w, r10.z, -c62.x, -r10.y
                                  add r5.w, r10.w, r5.w
                                  mul r11.z, r5.w, -c141.w  // ::Lrgb_UCS<2>

#line 2648
                                  mul r11.xy, r10.yzzw, c133
                                  cmp r9.xyz, -r4_abs.w, r11, r9  // ::FLrgb<0,1,2>
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2664
                else
                  add r10.yz, r10.x, c40.xzww
                  cmp r1.z, -r10_abs.z, -c163_abs.y, -c163_abs.x

#line 2650
                  if_eq r10.x, -c37.x

#line 591
                    abs r4.w, c13.x

#line 595
                    rcp r5.w, c13.x
                    mul r11.x, r5.w, c12.x  // ::xyY_XYZ<0>
                    mov r12.x, c13.x  // ::WhiteY<0>
                    add r6.w, -r12.x, -c12.x
                    add r6.w, r6.w, -c163.y
                    mul r11.z, r5.w, r6.w  // ::xyY_XYZ<2>
                    mov r11.y, -c163.y
                    cmp r11.xyz, -r4.w, c126.w, r11  // ::xyY_XYZ<0,1,2>

#line 553
                    mul r12, r8.y, c18.xyzx
                    mad r12, r8.x, c17.xyzx, r12
                    mad r12, r8.z, c19.xyzx, r12  // ::x<0>, ::y<0>, ::z<0>, ::x<0>

#line 2182
                    cmp r4.w, -r4.w, c142.y, c142.w
                    add r4.w, r4.w, r11.x
                    mul r5.w, r11.x, -c51.x
                    mad r4.w, r11.z, -c62.x, r4.w
                    rcp r4.w, r4.w
                    mul r6.w, r11.y, r4.w

#line 2186
                    mul r11.xyz, r12.xyww, c155  // ::x<0>
                    add r8.w, r11.y, r11.x
                    mad r8.w, r12.z, c156.w, r8.w  // ::uv<0>
                    rcp r9.w, r8.w
                    mul r10.w, r9.w, r11.z
                    cmp r10.w, -r8_abs.w, c95.z, r10.w  // ::_u<0>
                    mul r9.w, r12.y, r9.w
                    mul r9.w, r9.w, c133.z
                    cmp r8.w, -r8_abs.w, c95.z, r9.w  // ::_v<0>

#line 2190
                    mad r4.w, r5.w, -r4.w, r10.w
                    mul r11.x, r4.w, c133.w  // ::u<0>
                    mad r4.w, r6.w, c52.x, r8.w
                    mul r11.y, r4.w, c133.w  // ::v<0>

#line 2650
                    mov r11.z, -c117.z
                    mov r4.w, -c163.y
                  else
                    if_eq r10.x, -c37.y

#line 2377
                      dp3 r5.w, r8, c148  // ::y<0>
                      add r12.xy, -r5.w, r8.zxzw

#line 2401
                      mad r11.x, r5.w, c162.z, c162.w  // ::Lrgb_xvYCC<0>
                      mad r11.yz, r12.xxyw, c161.xxyw, c161.z  // ::Lrgb_xvYCC<1,2>

#line 2651
                      mov r4.w, -c163.y
                    else
                      if_eq r10.x, -c37.z

#line 553
                        mul r12.xyz, r8.y, c18
                        mad r12.xyz, r8.x, c17, r12
                        mad r11.xyz, r8.z, c19.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 602
                        add r5.w, r11.z, r11.x
                        add r5.w, r11.y, r5.w  // ::sum<0>

#line 607
                        rcp r6.w, r5.w
                        mul r12.xy, r6.w, r11.xzzw  // ::XYZ_xyY<0,1>
                        cmp r11.xy, -r5_abs.w, c95.z, r12  // ::XYZ_xyY<0,1>

#line 2652
                        mov r4.w, -c163.y
                      else
                        if_eq r10.x, -c37.w

#line 553
                          mul r12.xyz, r8.y, c18
                          mad r12.xyz, r8.x, c17, r12
                          mad r11.xyz, r8.z, c19.xzyw, r12.xzyw  // ::x<0>, ::z<0>, ::y<0>

#line 602
                          add r5.w, r11.z, r11.x
                          add r5.w, r11.y, r5.w  // ::sum<0>

#line 607
                          rcp r6.w, r5.w
                          mul r12.xy, r6.w, r11.xzzw  // ::XYZ_xyY<0,1>
                          cmp r11.xy, -r5_abs.w, c95.z, r12  // ::XYZ_xyY<0,1>

#line 2653
                          mov r4.w, -c163.y
                        else
                          if_eq r10.x, -c55.x

#line 553
                            mul r12.xyz, r8.y, c18
                            mad r12.xyz, r8.x, c17, r12
                            mad r11.xyz, r8.z, c19, r12  // ::x<0>, ::y<0>, ::z<0>

#line 2654
                            mov r4.w, -c163.y
                          else
                            if_eq r10.x, -c55.y

#line 2377
                              dp3 r5.w, r8, c148  // ::y<0>
                              add r12.xy, -r5.w, r8.zxzw

#line 2421
                              mad r11.x, r5.w, c162.z, c162.w  // ::Lrgb_YCbCr<0>
                              mad r11.yz, r12.xxyw, c161.xxyw, c161.z  // ::Lrgb_YCbCr<1,2>

#line 2655
                              mov r4.w, -c163.y
                            else
                              if_eq r10.x, -c55.z

#line 2271
                                mul r12.xyz, r8.xxyw, c90
                                add r12.xy, r12.z, r12
                                mul r5.w, r8.z, -c141.w
                                mad r11.x, r8.z, c83.z, r12.x  // ::Lrgb_YCoCg<0>
                                mad r11.y, r8.z, -c83.z, r12.y  // ::Lrgb_YCoCg<1>
                                mad r11.z, r8.x, -c141.w, -r5.w  // ::Lrgb_YCoCg<2>

#line 2656
                                mov r4.w, -c163.y
                              else

#line 2659
                                add r12.xyz, r10.x, c154

#line 2325
                                mul r13, r8.y, c78
                                mad r13.xzw, r8.x, c77.xyyz, r13

#line 2290
                                mad r5.w, r8.x, c155.w, -r13.y
                                mad r14.w, r8.z, -c164.y, r5.w  // ::Lrgb_YDbDr<1>

#line 2325
                                mad r14.xyz, r8.z, c79, r13.xzww  // ::Lrgb_YDbDr<0,2>, ::Lrgb_YES<0>

#line 2351
                                mul r13, r8.y, c75
                                mad r13, r8.x, c74, r13  // ::Lrgb_YES<1>

#line 2659
                                cmp r5.w, -r12_abs.z, c163_abs.y, c163_abs.x

#line 2348
                                add r10.xw, -r8.yyzz, r8.xyzy
                                cmp r10.xw, -r10_abs, c163_abs.x, c163_abs.y
                                add r6.w, r10.w, r10.x

#line 2351
                                mad r13.yzw, r8.z, c76.xyzx, r13.xzwy  // ::i<0>, ::q<0>, ::Lrgb_YES<2>
                                cmp r15.yz, -r6.w, c95.z, r13  // ::i<0>, ::q<0>

#line 2659
                                mov r15.x, r14.x
                                cmp r15.xyz, -r12_abs.z, r15, r9  // ::FLrgb<0,1,2>
                                mov r13.y, r14.z
                                mov r13.zw, r13.xyxw
                                cmp r13.xyz, -r12_abs.y, r13.yzww, r15  // ::FLrgb<0,1,2>
                                cmp r5.w, -r12_abs.y, -c163.y, r5.w
                                cmp r11.xyz, -r12_abs.x, r14.xwyw, r13  // ::FLrgb<0,1,2>
                                cmp r4.w, -r12_abs.x, -c163.y, r5.w
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2483
                  mul r12, r8.y, c81
                  mad r12, r8.x, c80, r12
                  mad r12, r8.z, c82, r12  // ::y<0,0>, ::u<0>, ::v<0>

#line 2379
                  add r10.xw, r8.zyzx, -r12.x
                  mul r13.yz, r10.xxww, c134.xxyw  // ::pb<0>, ::pr<0>

#line 2662
                  cmp r10.xzw, -r10_abs.z, r12.yyzw, r11.xyyz  // ::FLrgb<0,1,2>
                  mov r13.x, r12.x
                  cmp r10.xzw, -r10_abs.y, r13.xyyz, r10  // ::FLrgb<0,1,2>
                  cmp r1.z, -r10_abs.y, c163.y, r1.z
                  cmp r8.xyz, r1.z, r8, r10.xzww  // ::FLrgb<0,1,2>
                  cmp r9.xyz, -r4.w, r8, r11  // ::FLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 541
          max r1.z, r7.y, r7.z
          max r4.w, r7.x, r1.z  // ::l<0>

#line 2915
          add r1.z, -r4.w, c44.x
          mov r7.x, c6.x  // ::X<0>
          mul r5.w, r7.x, c43.x
          mul r8.x, r5.w, c90.w  // ::tx<0>
          mov r10.x, c7.x  // ::Y<0>
          mul r5.w, r10.x, c43.x
          mul r8.y, r5.w, c90.w  // ::ty<0>
          mov r11.x, c8.x  // ::Z<0>
          mul r5.w, r11.x, c43.x
          mul r8.z, r5.w, c90.w  // ::tz<0>

#line 2922
          add r4.w, -r4.w, c42.x
          mul r5.w, r7.x, c41.x
          mul r12.x, r5.w, c90.w  // ::tx<0>
          mul r5.w, r10.x, c41.x
          mul r12.y, r5.w, c90.w  // ::ty<0>
          mul r5.w, r11.x, c41.x
          mul r12.z, r5.w, c90.w  // ::tz<0>

#line 2931
          mul r5.w, r7.x, c39.x
          mul r7.x, r5.w, c90.w  // ::tx<0>
          mul r5.w, r10.x, c39.x
          mul r7.y, r5.w, c90.w  // ::ty<0>
          mul r5.w, r11.x, c39.x
          mul r7.z, r5.w, c90.w  // ::tz<0>
          cmp r7.xyz, r4.w, r12, r7  // ::tx<0>, ::ty<0>, ::tz<0>
          cmp r7.xyz, r1.z, r8, r7  // ::tx<0>, ::ty<0>, ::tz<0>

#line 434
          add r1.z, r4.x, r5.x
          add r4.w, r5.x, r9.x
          add r1.z, r1.z, -r4.w
          mad r8.z, r1.z, r7.x, r9.x  // ::FLerp<0>
          add r1.z, r4.y, r5.y
          add r4.w, r5.y, r9.y
          add r1.z, r1.z, -r4.w
          mad r10.y, r1.z, r7.y, r9.y  // ::FLerp<1>
          add r1.z, r4.z, r5.z
          add r4.w, r5.z, r9.z
          add r1.z, r1.z, -r4.w
          mul r4.w, r7.z, r1.z
          mad r7.y, r1.z, r7.z, r9.z  // ::FLerp<2>

#line 2671
          if_eq c0.x, r0.z

#line 2002
            mul r1.z, r10.y, c154.w
            mad r9.x, r8.z, c77.w, r1.z  // ::RCA_Lrgb<0>
            mul r11.xy, r7.y, c134.zwzw
            mad r9.y, r10.y, c77.w, r11.x  // ::RCA_Lrgb<1>
            mad r9.w, r8.z, c154.w, r11.y  // ::RCA_Lrgb<2>

#line 2671
            mov r1.z, -c163.y
          else
            if_eq c0.x, -r6.x

#line 2081
              mul r5.w, r7.y, c154.w
              mad r9.x, r8.z, c77.w, r5.w  // ::RGV_Lrgb<0>
              mul r11.xy, r10.y, c134.wzzw
              mad r9.y, r8.z, c154.w, r11.x  // ::RGV_Lrgb<1>
              mad r9.w, r7.y, c77.w, r11.y  // ::RGV_Lrgb<2>

#line 2672
              mov r1.z, -c163.y
            else
              mov r11.x, c0.x  // ::Model<0>
              if_eq r11.x, -c62.x

#line 2093
                min r5.w, r7.y, r10.y
                min r6.w, r5.w, r8.z  // ::white<0>
                add r5.w, -r6.w, r8.z  // ::r<0>
                add r8.w, -r6.w, r10.y  // ::y<0>
                add r10.w, -r6.w, r7.y  // ::b<0>
                max r11.y, r8.w, r10.w
                max r12.x, r5.w, r11.y  // ::mY<0>
                min r11.z, r10.w, r8.w  // ::g<0>
                add r8.w, r8.w, -r11.z  // ::y<0>

#line 2104
                add r11.y, r10.w, -r11.z  // ::b<0>

#line 2110
                cmp r10.w, -r11.z, -c163_abs.x, -c163_abs.y
                cmp r10.w, -r11.y, c95.z, r10.w
                mul r12.yz, r11, -c89.x
                cmp r13.yz, r10.w, r11, r12  // ::b<0>, ::g<0>
                add r13.x, r5.w, r8.w  // ::r<0>
                add r13.w, r8.w, r13.z  // ::g<0>
                max r5.w, r13.w, r13.y
                max r8.w, r13.x, r5.w  // ::mG<0>

#line 2119
                rcp r5.w, r8.w
                mul r5.w, r5.w, r12.x  // ::mN<0>

#line 2123
                mul r11.yzw, r5.w, r13.xxwy  // ::r<0>, ::g<0>, ::b<0>
                cmp r11.yzw, -r8.w, r13.xxwy, r11  // ::r<0>, ::g<0>, ::b<0>

#line 2128
                add r11.yzw, r6.w, r11  // ::r<0>, ::g<0>, ::b<0>
                frc r12.xyz, r11.yzww
                add r11.yzw, r11, -r12.xxyz
                mul r9.xyw, r11.yzzw, c79.w  // ::RYB_Lrgb<0,1,2>

#line 2673
                mov r1.z, -c163.y
              else
                if_eq r11.x, -c51.x

#line 738
                  add r9.x, -r8.z, -c163.y  // ::CMY_Lrgb<0>
                  add r9.y, -r10.y, -c163.y  // ::CMY_Lrgb<1>
                  add r9.w, -r7.y, -c163.y  // ::CMY_Lrgb<2>

#line 2674
                  mov r1.z, -c163.y
                else
                  if_eq r11.x, -c65.x

#line 788
                    mul r5.w, r10.y, c90.w  // ::c<0>
                    mul r11.yzw, r7.y, c90.w  // ::g<0,0,0>

#line 796
                    if_eq r5.w, c95.z

#line 845
                      mov r9.xyw, r11.yzzw  // ::HCV_Lrgb<0,1,2>
                    else

#line 788
                      mul r6.w, r8.z, c76.w  // ::h<0>

#line 796
                      cmp r8.w, r8.z, c132.y, c132.z
                      mul r6.w, r6.w, r8.w
                      frc r6.w, r6.w
                      mul r6.w, r6.w, r8.w
                      mul r8.w, r6.w, -c52.x  // ::hi<0>
                      cmp r6.w, r6.w, c132.y, c132.z
                      mul r10.w, r6.w, r8.w
                      frc r10.w, r10.w
                      mul r12.x, r6.w, r10.w  // ::v<0>

#line 801
                      frc r11.y, r8.w
                      add r8.w, r8.w, -r11.y  // ::fhi<0>

#line 827
                      add r13, r8.w, c171

#line 838
                      mov r12.yz, c163_abs.xxyw
                      mad r12.w, r6.w, -r10.w, -c163.y
                      cmp r14.xyz, -r13_abs.w, r12, r12.zyww  // ::pure<0,1,2>
                      mad r15.xyz, r12.xzyw, c132.zyyw, c132.ywww
                      cmp r14.xyz, -r13_abs.z, r15.zxyw, r14  // ::pure<0,1,2>
                      cmp r13.yzw, -r13_abs.y, r12.xyzx, r14.xxyz  // ::pure<0,1,2>
                      cmp r13.xyz, -r13_abs.x, r15, r13.yzww  // ::pure<0,1,2>
                      cmp r12.xyz, -r8_abs.w, r12.zxyw, r13  // ::pure<0,1,2>

#line 844
                      lrp r9.xyw, r5.w, r12.xyzz, r11.w  // ::result<0,1,2>
                    endif

#line 2675
                    mov r1.z, -c163.y
                  else
                    if_eq r11.x, -c52.x

#line 880
                      cmp r11.yz, r8.z, c84.xxyw, c84.xzww
                      mul r5.w, r8.z, r11.z
                      frc r5.w, r5.w
                      mad r6.w, r11.y, r5.w, c165.z
                      mul r5.w, r5.w, c165.z
                      cmp r5.w, r8.z, r5.w, r6.w
                      mul r6.w, r10.y, c90.w  // ::s<0>
                      mul r8.w, r7.y, c79.w  // ::i<0>

#line 887
                      if_lt r5.w, c172.x
                        mad r10.w, r10.y, -c172.y, c172.z
                        mul r9.w, r8.w, r10.w  // ::b<0>
                        mad r10.w, r5.w, c76_abs.w, c76_abs.x
                        frc r10.w, r10.w
                        mad r10.w, r10.w, c86.x, c86.y
                        sincos r12.x, r10.w
                        mul r10.w, r6.w, r12.x
                        mad r11.y, r5.w, -c86.z, c86.w
                        mad r11.y, r11.y, c116.x, c116.y
                        frc r11.y, r11.y
                        mad r11.y, r11.y, c86.x, c86.y
                        sincos r13.x, r11.y
                        rcp r11.y, r13.x
                        mad r10.w, r10.w, r11.y, -c163.y
                        mul r9.x, r8.w, r10.w  // ::r<0>
                        mad r10.w, r12.x, -r11.y, -c163.y
                        mad r10.w, r6.w, r10.w, -c163.y
                        mul r9.y, r8.w, r10.w  // ::g<0>
                      else
                        if_lt r5.w, c168.y
                          mad r10.w, r5.w, c116.z, c116.w  // ::h<0>
                          mad r11.y, r10.y, -c172.y, c172.z
                          mul r9.x, r8.w, r11.y  // ::r<0>
                          mad r11.y, r10.w, c116.x, c116.y
                          frc r11.y, r11.y
                          mad r11.y, r11.y, c86.x, c86.y
                          sincos r12.x, r11.y
                          mul r11.y, r6.w, r12.x
                          add r10.w, -r10.w, c172.w
                          mad r10.w, r10.w, c116.x, c116.y
                          frc r10.w, r10.w
                          mad r10.w, r10.w, c86.x, c86.y
                          sincos r13.x, r10.w
                          rcp r10.w, r13.x
                          mad r11.y, r11.y, r10.w, -c163.y
                          mul r9.y, r8.w, r11.y  // ::g<0>

#line 898
                          mad r10.w, r12.x, -r10.w, -c163.y
                          mad r10.w, r6.w, r10.w, -c163.y
                          mul r9.w, r8.w, r10.w  // ::b<0>
                        else

#line 902
                          mad r5.w, r5.w, c85.x, c85.y  // ::h<0>
                          mad r10.w, r10.y, -c172.y, c172.z
                          mul r9.y, r8.w, r10.w  // ::g<0>
                          mad r10.w, r5.w, c116.x, c116.y
                          frc r10.w, r10.w
                          mad r10.w, r10.w, c86.x, c86.y
                          sincos r12.x, r10.w
                          mul r10.w, r6.w, r12.x
                          add r5.w, -r5.w, c172.w
                          mad r5.w, r5.w, c116.x, c116.y
                          frc r5.w, r5.w
                          mad r5.w, r5.w, c86.x, c86.y
                          sincos r13.x, r5.w
                          rcp r5.w, r13.x
                          mad r10.w, r10.w, r5.w, -c163.y
                          mul r9.w, r8.w, r10.w  // ::b<0>
                          mad r5.w, r12.x, -r5.w, -c163.y
                          mad r5.w, r6.w, r5.w, -c163.y
                          mul r9.x, r5.w, r8.w  // ::r<0>
                        endif
                      endif

#line 2676
                      mov r1.z, -c163.y
                    else
                      if_eq r11.x, -c50.z

#line 1900
                        if_lt c165.w, r7.y

#line 1908
                          mad r9.xyw, r8.z, c150.xxzy, c150.zxzx
                        else

#line 1900
                          add r5.w, r7.y, c85.z

#line 1903
                          if_lt r7.y, c85.w
                            cmp r8.xy, r5.w, c165.wyzw, c165.y  // ::HPLuv_Lrgb<0,1>

#line 1908
                            mov r9.xyw, r8.xyzz  // ::HPLuv_Lrgb<0,1,2>
                          else

#line 469
                            add r5.w, r7.y, c141.z
                            mul r6.w, r5.w, r5.w
                            mul r8.w, r5.w, r6.w
                            mul r8.w, r8.w, c87.x  // ::s1<0>
                            mad r6.w, r5.w, -r6.w, c87.y

#line 1833
                            mul r12, r7.y, c122

#line 470
                            cmp r6.w, r6.w, r12.x, r8.w  // ::s2<0>

#line 455
                            mul r8.w, r7.y, r6.w
                            mul r10.w, r8.w, c87.z  // ::y<0>
                            mul r11.yz, r6.w, c88.xxyw  // ::x<0>, ::z<0>
                            rcp r11.z, r11.z
                            mul r11.w, r11.z, r11.y  // ::GetBounds2<0>
                            mul r10.w, r10.w, r11.z  // ::GetBounds2<1>

#line 486
                            rcp r13.x, r11.w

#line 449
                            mad r11.z, r11.y, -r11.z, -r13.x
                            rcp r11.z, r11.z
                            mul r11.z, r10.w, r11.z  // ::GetIntersection<0>

#line 487
                            mad r10.w, r11.z, r11.w, r10.w  // GetDistance::input<1>

#line 444
                            mul r10.w, r10.w, r10.w
                            mad r10.w, r11.z, r11.z, r10.w
                            rsq r10.w, r10.w
                            rcp r10.w, r10.w  // ::GetDistance<0>

#line 489
                            min r11.z, r10.w, c87.w  // ::GetChroma1a<0>

#line 455
                            mad r8.w, r8.w, c87.z, -r12.y  // ::y<0>
                            mad r6.w, r6.w, c88.y, c88.z  // ::z<0>
                            rcp r6.w, r6.w
                            mul r10.w, r6.w, r11.y  // ::GetBounds2<0>
                            mul r8.w, r6.w, r8.w  // ::GetBounds2<1>

#line 486
                            rcp r11.w, r10.w

#line 449
                            mad r6.w, r11.y, -r6.w, -r11.w
                            rcp r6.w, r6.w
                            mul r6.w, r6.w, r8.w  // ::GetIntersection<0>

#line 487
                            mad r8.w, r6.w, r10.w, r8.w  // GetDistance::input<1>

#line 444
                            mul r8.w, r8.w, r8.w
                            mad r6.w, r6.w, r6.w, r8.w
                            rsq r6.w, r6.w
                            rcp r6.w, r6.w  // ::GetDistance<0>

#line 489
                            min r8.w, r6.w, r11.z  // ::GetChroma1a<0>

#line 1904
                            mul r6.w, r10.y, r8.w
                            mul r6.w, r6.w, c90.w  // ::C<0>

#line 672
                            mad r8.w, r8.z, c91.x, c91.y
                            frc r8.w, r8.w
                            mad r8.w, r8.w, c86.x, c86.y
                            sincos r13.xy, r8.w
                            mul r11.yz, r6.w, r13.xxyw  // ::a<0>, ::b<0>

#line 591
                            abs r6.w, c13.x

#line 595
                            rcp r8.w, c13.x
                            mul r13.x, r8.w, c12.x  // ::xyY_XYZ<0>
                            mov r14.x, c13.x  // ::WhiteY<0>
                            add r10.w, -r14.x, -c12.x
                            add r10.w, r10.w, -c163.y
                            mul r13.z, r8.w, r10.w  // ::xyY_XYZ<2>
                            mov r13.y, -c163.y
                            cmp r13.xyz, -r6.w, c126.w, r13  // ::xyY_XYZ<0,1,2>

#line 654
                            cmp r6.w, -r6.w, c142.y, c142.w
                            add r6.w, r6.w, r13.x
                            mul r8.w, r13.x, -c51.x
                            mad r6.w, r13.z, -c62.x, r6.w
                            rcp r6.w, r6.w
                            mul r8.w, r6.w, r8.w  // ::ComputeKu<0>

#line 659
                            mul r6.w, r13.y, r6.w
                            mul r6.w, r6.w, -c89.z  // ::ComputeKv<0>

#line 1831
                            add r10.w, -r7.y, c88.w
                            mul r5.w, r5.w, c91.z
                            mul r11.w, r5.w, r5.w
                            mul r5.w, r5.w, r11.w
                            cmp r5.w, r10.w, r12.x, r5.w  // ::Y<0>
                            mad r8.w, r12.w, r8.w, r11.y
                            rcp r8.w, r8.w
                            mad r8.w, r12.z, r8.w, c163.y
                            mul r8.w, r8.w, c59.w  // ::a<0>
                            mul r10.w, r5.w, c65.x  // ::b<0>
                            mul r11.y, r7.y, -c36.w
                            mad r6.w, r12.w, r6.w, r11.z
                            rcp r6.w, r6.w
                            mad r6.w, r11.y, r6.w, c65.x
                            mad r6.w, r5.w, r6.w, -r10.w
                            rcp r11.y, r8.w
                            mul r6.w, r6.w, r11.y  // ::X<0>
                            mad r8.w, r6.w, r8.w, r10.w  // ::Z<0>

#line 1842
                            max r10.w, r6.w, c95.z  // ::X<0>

#line 1845
                            max r6.w, r5.w, c95.z  // ::Y<0>

#line 1848
                            max r5.w, r8.w, c95.z  // ::Z<0>

#line 553
                            mul r11.yzw, r6.w, c24.xxyz
                            mad r11.yzw, r10.w, c23.xxyz, r11
                            mad r9.xyw, r5.w, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 1908
                          endif
                        endif

#line 2677
                        mov r1.z, -c163.y
                      else
                        if_eq r11.x, -c117.z

#line 933
                          mul r5.w, r10.y, c90.w  // ::_s<0>
                          mul r11.y, r7.y, c90.w  // ::_b<0>

#line 936
                          add r6.w, -r8.z, c91.w

#line 948
                          mul r8.w, r8.z, c150.w
                          cmp r6.w, r6.w, r8.w, c131.x  // ::SectorPosition<0>
                          frc r8.w, r6.w
                          add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 952
                          add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 955
                          mad r10.w, r10.y, -c172.y, c172.z
                          mul r11.z, r10.w, r11.y  // ::p<0>
                          mad r10.w, r5.w, -r6.w, -c163.y
                          mul r11.w, r10.w, r11.y  // ::q<0>
                          add r6.w, -r6.w, -c163.y
                          mad r6.w, r5.w, -r6.w, -c163.y
                          mul r11.x, r6.w, r11.y  // ::t<0>

#line 984
                          add r12, r8.w, c171

#line 990
                          add r6.w, r8.w, c65.x

#line 995
                          cmp r13.xyz, -r6_abs.w, r11.yzww, c95.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r13.xyz, -r12_abs.w, r11.xzyw, r13  // ::r<0>, ::g<0>, ::b<0>
                          cmp r13.xyz, -r12_abs.z, r11.zwyw, r13  // ::r<0>, ::g<0>, ::b<0>
                          cmp r12.yzw, -r12_abs.y, r11.xzyx, r13.xxyz  // ::r<0>, ::g<0>, ::b<0>
                          cmp r12.xyz, -r12_abs.x, r11.wyzw, r12.yzww  // ::r<0>, ::g<0>, ::b<0>
                          cmp r11.xzw, -r8_abs.w, r11.yyxz, r12.xyyz  // ::r<0>, ::g<0>, ::b<0>
                          cmp r9.xyw, -r5_abs.w, r11.y, r11.xzzw  // ::r<0>, ::g<0>, ::b<0>

#line 2678
                          mov r1.z, -c163.y
                        else
                          add r5.w, r6.z, c0.x
                          cmp r1.z, -r5_abs.w, c163_abs.y, c163_abs.x
                          if_eq c0.x, -r6.z

#line 1042
                            mul r9.xyw, r7.y, c90.w  // ::l<0,0,0>

#line 1049
                            if_lt -r10.y, c95.z

#line 1042
                              mul r5.w, r10.y, c90.w  // ::s<0>
                              min r6.w, r8.z, c91.w  // ::h<0>
                              mul r8.w, r6.w, c150.w  // ::h<0>

#line 1051
                              mad r10.w, r7.y, c131.y, c131.z
                              add r10.w, -r10_abs.w, -c163.y
                              mul r11.x, r5.w, r10.w  // ::chroma<0>
                              cmp r12.xy, r6.w, c169, c169.zwzw
                              mul r5.w, r8.w, r12.y
                              frc r5.w, r5.w
                              mad r5.w, r12.x, r5.w, c163.y
                              add r5.w, -r5_abs.w, -c163.y
                              mul r11.y, r5.w, r11.x  // ::v<0>

#line 1072
                              add r12, -r6.w, c128

#line 1078
                              add r13, r6.w, -c128.wzyx

#line 1084
                              add r5.w, r6.w, c131.w
                              add r14.xy, -r6.w, c129

#line 1089
                              cmp r14.xy, r14, -c163_abs.y, -c163_abs.x
                              cmp r5.w, r5.w, r14.x, c95.z
                              mov r11.z, c95.z
                              cmp r14.xzw, r5.w, c95.z, r11.xyzy  // ::result<0,1,2>
                              cmp r5.w, r13.w, r14.y, c95.z
                              cmp r14.xyz, r5.w, r14.xzww, r11.yzxw  // ::result<0,1,2>
                              cmp r12, r12, -c163_abs.y, -c163_abs.x
                              cmp r12.xyz, r13.zyxw, r12, c95.z
                              cmp r13.xyz, r12.x, r14, r11.zyxw  // ::result<0,1,2>
                              cmp r13.xyz, r12.y, r13, r11.zxyw  // ::result<0,1,2>
                              cmp r12.xyz, r12.z, r13, r11.yxzw  // ::result<0,1,2>
                              cmp r5.w, r6.w, r12.w, c95.z
                              cmp r11.yzw, r5.w, r12.xxyz, r11.xxyz  // ::result<0,1,2>
                              mad r5.w, r11.x, c141.w, r9.w  // ::w<0>

#line 1094
                              add r9.xyw, r5.w, r11.yzzw  // ::result<0,1,2>

#line 1099
                            endif

#line 2679
                          else
                            mov r9.xyw, c95.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r1.z, -r1.z

#line 2724
          else

#line 2681
            mov r11.x, c0.x  // ::Model<0>
            if_eq r11.x, c141.x

#line 1945
              if_lt c165.w, r7.y

#line 1953
                mad r9.xyw, r8.z, c150.xxzy, c150.zxzx
              else

#line 1945
                add r1.z, r7.y, c85.z

#line 1948
                if_lt r7.y, c85.w
                  cmp r9.xy, r1.z, c165.wyzw, c165.y  // ::HSLuv_Lrgb<0,1>

#line 1953
                  mov r9.w, r8.z
                else

#line 469
                  add r1.z, r7.y, c141.z
                  mul r5.w, r1.z, r1.z
                  mul r6.w, r1.z, r5.w
                  mul r6.w, r6.w, c87.x  // ::s1<0>
                  mad r5.w, r1.z, -r5.w, c87.y

#line 1833
                  mul r12, r7.y, c122

#line 470
                  cmp r5.w, r5.w, r12.x, r6.w  // ::s2<0>

#line 455
                  mul r6.w, r7.y, r5.w
                  mul r8.w, r6.w, c87.z  // ::y<0>
                  mul r13, r5.w, c152  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r10.w, r13.y
                  mul r11.y, r10.w, r13.x  // ::GetBounds2<0>
                  mul r8.w, r8.w, r10.w  // ::GetBounds2<1>
                  mad r6.w, r6.w, c87.z, -r12.y  // ::y<0>
                  mad r11.zw, r5.w, c173.xyxy, c173.z  // ::z<0,0>
                  rcp r10.w, r11.z
                  mul r11.z, r10.w, r13.x  // ::GetBounds2<0>
                  mul r6.w, r6.w, r10.w  // ::GetBounds2<1>
                  mul r10.w, r5.w, r12.y  // ::y<0>
                  rcp r13.x, r13.w
                  mul r13.y, r13.x, r13.z  // ::GetBounds2<0>
                  mul r13.x, r10.w, r13.x  // ::GetBounds2<1>
                  mad r12.y, r12.y, r5.w, -r12.y  // ::y<0>
                  rcp r11.w, r11.w
                  mul r13.z, r11.w, r13.z  // ::GetBounds2<0>
                  mul r11.w, r11.w, r12.y  // ::GetBounds2<1>
                  mul r14.xy, r5.w, c129.zwzw  // ::x<0>, ::z<0>
                  rcp r13.w, r14.y
                  mul r14.y, r13.w, r14.x  // ::GetBounds2<0>
                  mul r10.w, r10.w, r13.w  // ::GetBounds2<1>
                  mad r5.w, r5.w, c173.w, c173.z  // ::z<0>
                  rcp r5.w, r5.w
                  mul r13.w, r5.w, r14.x  // ::GetBounds2<0>
                  mul r5.w, r5.w, r12.y  // ::GetBounds2<1>

#line 672
                  mad r14.xz, r8.z, c135.xyyw, c135.z
                  frc r14.xz, r14
                  mad r14.xz, r14, c86.x, c86.y

#line 503
                  sincos r15.xy, r14.x
                  mad r11.y, r11.y, -r15.x, r15.y
                  rcp r11.y, r11.y
                  mul r8.w, r8.w, r11.y  // ::length<0>
                  min r11.y, r8.w, c87.w  // GetChroma2a::result<0>
                  cmp r8.w, r8.w, r11.y, c87.w  // GetChroma2a::result<0>
                  mad r11.y, r11.z, -r15.x, r15.y
                  rcp r11.y, r11.y
                  mul r6.w, r6.w, r11.y  // ::length<0>
                  min r11.y, r6.w, r8.w  // GetChroma2a::result<0>
                  cmp r6.w, r6.w, r11.y, r8.w  // GetChroma2a::result<0>
                  mad r8.w, r13.y, -r15.x, r15.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r13.x  // ::length<0>
                  min r11.y, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r11.y, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r13.z, -r15.x, r15.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r11.w  // ::length<0>
                  min r11.y, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r11.y, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r14.y, -r15.x, r15.y
                  rcp r8.w, r8.w
                  mul r8.w, r8.w, r10.w  // ::length<0>
                  min r10.w, r8.w, r6.w  // GetChroma2a::result<0>
                  cmp r6.w, r8.w, r10.w, r6.w  // GetChroma2a::result<0>
                  mad r8.w, r13.w, -r15.x, r15.y
                  rcp r8.w, r8.w
                  mul r5.w, r5.w, r8.w  // ::length<0>
                  min r8.w, r5.w, r6.w  // GetChroma2a::result<0>
                  cmp r5.w, r5.w, r8.w, r6.w  // GetChroma2a::result<0>

#line 1949
                  mul r5.w, r10.y, r5.w
                  mul r5.w, r5.w, c90.w  // ::C<0>

#line 672
                  sincos r13.xy, r14.z
                  mul r11.yz, r5.w, r13.xxyw  // ::a<0>, ::b<0>

#line 591
                  abs r5.w, c13.x

#line 595
                  rcp r6.w, c13.x
                  mul r13.x, r6.w, c12.x  // ::xyY_XYZ<0>
                  mov r14.x, c13.x  // ::WhiteY<0>
                  add r8.w, -r14.x, -c12.x
                  add r8.w, r8.w, -c163.y
                  mul r13.z, r6.w, r8.w  // ::xyY_XYZ<2>
                  mov r13.y, -c163.y
                  cmp r13.xyz, -r5.w, c126.w, r13  // ::xyY_XYZ<0,1,2>

#line 654
                  cmp r5.w, -r5.w, c142.y, c142.w
                  add r5.w, r5.w, r13.x
                  mul r6.w, r13.x, -c51.x
                  mad r5.w, r13.z, -c62.x, r5.w
                  rcp r5.w, r5.w
                  mul r6.w, r5.w, r6.w  // ::ComputeKu<0>

#line 659
                  mul r5.w, r13.y, r5.w
                  mul r5.w, r5.w, -c89.z  // ::ComputeKv<0>

#line 1831
                  add r8.w, -r7.y, c88.w
                  mul r1.z, r1.z, c91.z
                  mul r10.w, r1.z, r1.z
                  mul r1.z, r1.z, r10.w
                  cmp r1.z, r8.w, r12.x, r1.z  // ::Y<0>
                  mad r6.w, r12.w, r6.w, r11.y
                  rcp r6.w, r6.w
                  mad r6.w, r12.z, r6.w, c163.y
                  mul r6.w, r6.w, c59.w  // ::a<0>
                  mul r8.w, r1.z, c65.x  // ::b<0>
                  mul r10.w, r7.y, -c36.w
                  mad r5.w, r12.w, r5.w, r11.z
                  rcp r5.w, r5.w
                  mad r5.w, r10.w, r5.w, c65.x
                  mad r5.w, r1.z, r5.w, -r8.w
                  rcp r10.w, r6.w
                  mul r5.w, r5.w, r10.w  // ::X<0>
                  mad r6.w, r5.w, r6.w, r8.w  // ::Z<0>

#line 1842
                  max r8.w, r5.w, c95.z  // ::X<0>

#line 1845
                  max r5.w, r1.z, c95.z  // ::Y<0>

#line 1848
                  max r1.z, r6.w, c95.z  // ::Z<0>

#line 553
                  mul r11.yzw, r5.w, c24.xxyz
                  mad r11.yzw, r8.w, c23.xxyz, r11
                  mad r9.xyw, r1.z, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 1953
                endif
              endif

#line 2681
              mov r1.z, -c163.y
            else
              if_eq r11.x, -c51.z

#line 1139
                mad r5.w, r8.z, c91.x, c91.y
                frc r5.w, r5.w
                mad r5.w, r5.w, c86.x, c86.y
                sincos r12.x, r5.w  // ::h<0>
                mul r5.w, r10.y, r12.x

#line 1143
                mul r6.w, r5.w, c135.w  // ::j<0>

#line 1151
                mul r9.xy, r7.y, c151  // ::m<0>
                mad r5.w, r5.w, c135.w, r9.y
                mad r5.w, r7.y, -c151.z, r5.w
                mul r9.y, r5.w, c83.z  // ::g<0>
                mad r5.w, r7.y, c151.w, -r6.w
                mul r9.w, r5.w, -c141.w  // ::b<0>

#line 2682
                mov r1.z, -c163.y
              else
                if_eq r11.x, -c65.z

#line 1216
                  mad r5.w, r10.y, -c172.y, c172.z  // ::minOverMax<0>
                  if_lt -r5.w, c95.z

#line 1221
                    if_lt r8.z, c107.w
                      mul r6.w, r8.z, c150.w  // ::h<0>
                      rcp r8.w, r5.w
                      lrp r10.w, r6.w, r8.w, -c163.y  // ::part<0>
                      mul r11.y, r8.w, r8.w
                      mul r10.w, r10.w, r10.w
                      mul r10.w, r10.w, c160.y
                      mad r10.w, r11.y, c160.x, r10.w
                      add r10.w, r10.w, c127.w
                      rsq r10.w, r10.w
                      mul r12.z, r7.y, r10.w  // ::b<0>
                      mul r12.x, r8.w, r12.z  // ::r<0>
                      mad r8.w, r12.z, r8.w, -r12.z
                      mad r12.y, r6.w, r8.w, r12.z  // ::g<0>
                    else
                      if_lt r8.z, c172.x

#line 1232
                        mad r6.w, r8.z, -c118.x, c118.y
                        mul r6.w, r6.w, -c52.x  // ::h<0>
                        rcp r8.w, r5.w
                        lrp r10.w, r6.w, r8.w, -c163.y  // ::part<0>
                        mul r11.y, r8.w, r8.w
                        mul r10.w, r10.w, r10.w
                        mul r10.w, r10.w, c160.x
                        mad r10.w, r11.y, c160.y, r10.w
                        add r10.w, r10.w, c127.w
                        rsq r10.w, r10.w
                        mul r12.z, r7.y, r10.w  // ::b<0>
                        mul r12.y, r8.w, r12.z  // ::g<0>
                        mad r8.w, r12.z, r8.w, -r12.z
                        mad r12.x, r6.w, r8.w, r12.z  // ::r<0>
                      else
                        if_lt r8.z, c118.z
                          mad r6.w, r8.z, c118.x, c118.w
                          mul r6.w, r6.w, -c52.x  // ::h<0>
                          rcp r8.w, r5.w
                          lrp r10.w, r6.w, r8.w, -c163.y  // ::part<0>

#line 1243
                          mul r11.y, r8.w, r8.w
                          mul r10.w, r10.w, r10.w
                          mul r10.w, r10.w, c127.w
                          mad r10.w, r11.y, c160.y, r10.w
                          add r10.w, r10.w, c160.x
                          rsq r10.w, r10.w
                          mul r12.x, r7.y, r10.w  // ::r<0>
                          mul r12.y, r8.w, r12.x  // ::g<0>
                          mad r8.w, r12.x, r8.w, -r12.x
                          mad r12.z, r6.w, r8.w, r12.x  // ::b<0>
                        else
                          if_lt r8.z, c168.y
                            mad r6.w, r8.z, -c119.x, c119.y
                            mul r6.w, r6.w, -c52.x  // ::h<0>
                            rcp r8.w, r5.w
                            lrp r10.w, r6.w, r8.w, -c163.y  // ::part<0>
                            mul r11.y, r8.w, r8.w
                            mul r10.w, r10.w, r10.w
                            mul r10.w, r10.w, c160.y
                            mad r10.w, r11.y, c127.w, r10.w
                            add r10.w, r10.w, c160.x
                            rsq r10.w, r10.w
                            mul r12.x, r7.y, r10.w  // ::r<0>
                            mul r12.z, r8.w, r12.x  // ::b<0>

#line 1254
                            mad r8.w, r12.x, r8.w, -r12.x
                            mad r12.y, r6.w, r8.w, r12.x  // ::g<0>
                          else
                            add r6.w, r8.z, -c156.w
                            mad r8.w, r8.z, c119.x, c119.z
                            mul r8.w, r8.w, -c52.x  // ::h<0>
                            rcp r5.w, r5.w
                            lrp r10.w, r8.w, r5.w, -c163.y  // ::part<0>
                            mul r11.y, r5.w, r5.w

#line 1270
                            mul r11.yz, r11.y, c156.xzxw

#line 1261
                            mul r10.w, r10.w, r10.w
                            mad r10.w, r10.w, c160.x, r11.y
                            add r10.w, r10.w, c160.y
                            rsq r10.w, r10.w
                            mul r13.y, r7.y, r10.w  // ::g<0>
                            mul r13.z, r5.w, r13.y  // ::b<0>
                            mad r10.w, r13.y, r5.w, -r13.y
                            mad r13.x, r8.w, r10.w, r13.y  // ::r<0>

#line 1268
                            mad r8.w, r8.z, -c119.x, c119.w
                            mul r8.w, r8.w, -c52.x  // ::h<0>
                            lrp r10.w, r8.w, r5.w, -c163.y  // ::part<0>
                            mul r10.w, r10.w, r10.w
                            mad r10.w, r10.w, c127.w, r11.z
                            add r10.w, r10.w, c160.y
                            rsq r10.w, r10.w
                            mul r14.y, r7.y, r10.w  // ::g<0>
                            mul r14.x, r5.w, r14.y  // ::r<0>
                            mad r5.w, r14.y, r5.w, -r14.y
                            mad r14.z, r8.w, r5.w, r14.y  // ::b<0>
                            cmp r12.xyz, r6.w, r14, r13  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1278
                    if_lt r8.z, c107.w
                      mul r5.w, r8.z, c150.w  // ::h<0>
                      mul r6.w, r7.y, r7.y
                      mul r8.w, r8.z, r5.w
                      mad r8.w, r8.w, c136.x, c136.y
                      rcp r8.w, r8.w
                      mul r6.w, r6.w, r8.w
                      rsq r6.w, r6.w
                      rcp r12.x, r6.w  // ::r<0>
                      mul r12.y, r5.w, r12.x  // ::g<0>
                      mov r12.z, c95.z
                    else
                      if_lt r8.z, c172.x
                        mad r5.w, r8.z, -c118.x, c118.y
                        mul r6.w, r5.w, -c52.x  // ::h<0>

#line 1289
                        mul r8.w, r7.y, r7.y
                        mul r5.w, r5.w, r6.w
                        mad r5.w, r5.w, c136.z, c136.w
                        rcp r5.w, r5.w
                        mul r5.w, r5.w, r8.w
                        rsq r5.w, r5.w
                        rcp r12.y, r5.w  // ::g<0>
                        mul r12.x, r6.w, r12.y  // ::r<0>
                        mov r12.z, c95.z
                      else

#line 1312
                        mad r11.yz, r8.z, c149.x, c149
                        mul r13.xy, r11.yzzw, -c52.x  // ::h<0,0>

#line 1297
                        mul r5.w, r7.y, r7.y

#line 1313
                        mul r11.yz, r11, r13.xxyw
                        mad r11.yz, r11, c174.xxyw, c174.xzww

#line 1297
                        rcp r6.w, r11.y
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r14.y, r6.w  // ::g<0>
                        mul r14.z, r13.x, r14.y  // ::b<0>

#line 1320
                        mad r11.yw, r8.z, -c119.x, c119
                        mul r13.xz, r11.yyww, -c52.x  // ::h<0,0>
                        mul r11.yw, r11, r13.xxzz
                        mad r11.yw, r11, c137.xxzy, c137.xzzw

#line 1305
                        rcp r6.w, r11.y
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r15.z, r6.w  // ::b<0>
                        mul r15.y, r13.x, r15.z  // ::g<0>

#line 1310
                        add r16.xyz, r8.z, c130

#line 1313
                        rcp r6.w, r11.z
                        mul r6.w, r5.w, r6.w
                        rsq r6.w, r6.w
                        rcp r17.z, r6.w  // ::b<0>
                        mul r17.x, r13.y, r17.z  // ::r<0>

#line 1321
                        rcp r6.w, r11.w
                        mul r5.w, r5.w, r6.w
                        rsq r5.w, r5.w
                        rcp r18.x, r5.w  // ::r<0>
                        mul r18.z, r13.z, r18.x  // ::b<0>
                        mov r18.y, c95.z
                        mov r17.y, c95.z
                        cmp r11.yzw, r16.z, r18.xxyz, r17.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r15.x, c95.z
                        cmp r11.yzw, r16.y, r11, r15.xxyz  // ::r<0>, ::g<0>, ::b<0>
                        mov r14.x, c95.z
                        cmp r12.xyz, r16.x, r11.yzww, r14  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1328
                  add r11.yzw, r12.xxyz, -c141.w
                  frc r12.xyz, r11.yzww
                  add r11.yzw, r11, -r12.xxyz
                  mul_sat r9.xyw, r11.yzzw, c79.w  // ::result<0,1,2>

#line 2683
                  mov r1.z, -c163.y
                else
                  if_eq r11.x, -c52.z

#line 1398
                    mul r5.w, r10.y, c90.w  // ::white<0>
                    mul r6.w, r7.y, c90.w  // ::black<0>
                    mad r6.w, r10.y, c90.w, r6.w

#line 1407
                    if_ge r6.w, -c163.y

#line 1403
                      rcp r6.w, r6.w
                      mul r9.xyw, r5.w, r6.w  // ::gray<0,0,0>

#line 1418
                    else

#line 936
                      add r6.w, -r8.z, c91.w

#line 948
                      mul r8.w, r8.z, c150.w
                      cmp r6.w, r6.w, r8.w, c131.x  // ::SectorPosition<0>
                      frc r8.w, r6.w
                      add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 952
                      add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 956
                      add r12.x, -r6.w, -c163.y  // ::q<0>

#line 984
                      add r13, r8.w, c171

#line 990
                      add r6.w, r8.w, c65.x
                      cmp r14.x, -r6_abs.w, c163_abs.y, c163_abs.x  // ::r<0>

#line 995
                      mov r12.y, c95.z
                      cmp r14.yz, -r6_abs.w, r12.xyxw, c95.z  // ::g<0>, ::b<0>
                      mad r12.zw, r12.x, c132, c132.y
                      cmp r11.yzw, -r13_abs.w, r12.xzyw, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.z, r12.xyxw, r11  // ::r<0>, ::g<0>, ::b<0>
                      mad r14.xyz, r12.wxyw, c132.yzyw, c132.wyww
                      cmp r11.yzw, -r13_abs.y, r14.xzxy, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.x, r12.xxwy, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r8_abs.w, r14.xxyz, r11  // ::r<0>, ::g<0>, ::b<0>

#line 1410
                      mad r6.w, r10.y, -c172.y, c172.z
                      mad r6.w, r7.y, -c90.w, r6.w

#line 1417
                      mad r9.xyw, r11.yzzw, r6.w, r5.w  // ::rgb<0,1,2>
                    endif

#line 2684
                    mov r1.z, -c163.y
                  else
                    if_eq r11.x, -c53.x

#line 553
                      mul r11.yzw, r10.y, c92.xxyz
                      mad r11.yzw, r8.z, c120.xxyz, r11
                      mad r9.xyw, r7.y, c93.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2685
                      mov r1.z, -c163.y
                    else
                      if_eq r11.x, -c67.x

#line 2429
                        add r5.w, r7.y, c95.w
                        mad r6.w, r5.w, c149.w, r8.z  // ::ycbcr<0>
                        add r8.w, r10.y, c95.w
                        mad r10.w, r8.w, -c130.w, r8.z
                        mad r5.w, r5.w, -c92.w, r10.w  // ::ycbcr<1>
                        mad r8.w, r8.w, c120.w, r8.z  // ::ycbcr<2>

#line 2409
                        add r6.w, r6.w, -c141.z
                        mul r10.w, r6.w, c93.w  // ::ypbpr<0>
                        add r5.w, r5.w, c95.w
                        add r8.w, r8.w, c95.w

#line 2364
                        mad r9.x, r8.w, c102.x, r10.w  // ::r<0>
                        mad r9.w, r5.w, c102.y, r10.w  // ::b<0>
                        mul r5.w, r9.x, c148.x
                        mad r5.w, r6.w, c93.w, -r5.w
                        mad r5.w, r9.w, -c148.z, r5.w
                        mul r9.y, r5.w, c102.z  // ::g<0>

#line 2687
                        mov r1.z, -c163.y
                      else
                        add r5.w, r11.x, c67.y
                        cmp r1.z, -r5_abs.w, c163_abs.y, c163_abs.x

#line 1625
                        add r6.w, r8.z, c141.z
                        mul r6.w, r6.w, c91.z  // ::fy<0>
                        mad r8.w, r10.y, c102.w, r6.w  // ::fx<0>
                        mad r10.w, r7.y, -c123.x, r6.w  // ::fz<0>
                        mul r11.y, r8.w, r8.w
                        mul r11.z, r8.w, r11.y  // ::fx3<0>
                        mul r11.w, r10.w, r10.w
                        mul r12.x, r10.w, r11.w  // ::fz3<0>
                        mad r11.y, r8.w, -r11.y, c72.w
                        mad r8.w, r8.w, c123.y, c123.z
                        mul r8.w, r8.w, c122.x
                        cmp r8.w, r11.y, r8.w, r11.z  // ::xr<0>
                        add r11.y, -r8.z, c88.w
                        mul r11.z, r6.w, r6.w
                        mul r6.w, r6.w, r11.z
                        mul r11.z, r8.z, c122.x
                        cmp r6.w, r11.y, r11.z, r6.w  // ::yr<0>
                        mad r11.y, r10.w, -r11.w, c72.w
                        mad r10.w, r10.w, c123.y, c123.z
                        mul r10.w, r10.w, c122.x
                        cmp r10.w, r11.y, r10.w, r12.x  // ::zr<0>

#line 591
                        abs r11.y, c13.x

#line 595
                        rcp r11.z, c13.x
                        mul r12.x, r11.z, c12.x  // ::xyY_XYZ<0>
                        mov r13.x, c13.x  // ::WhiteY<0>
                        add r11.w, -r13.x, -c12.x
                        add r11.w, r11.w, -c163.y
                        mul r12.z, r11.z, r11.w  // ::xyY_XYZ<2>
                        mov r12.y, -c163.y
                        cmp r11.yzw, -r11.y, c126.w, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 1637
                        mul r12.x, r8.w, r11.y  // ::Lab_Lrgb<0>
                        mul r12.y, r6.w, r11.z  // ::Lab_Lrgb<1>
                        mul r12.z, r10.w, r11.w  // ::Lab_Lrgb<2>

#line 2688
                        cmp r9.xyw, -r5_abs.w, r12.xyzz, r9  // ::TLrgb<0,1,2>
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r1.z, -r1.z

#line 2724
            else

#line 2690
              if_eq r11.x, -c11.x

#line 591
                abs r1.z, c13.x

#line 595
                rcp r5.w, c13.x
                mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                mov r13.x, c13.x  // ::WhiteY<0>
                add r6.w, -r13.x, -c12.x
                add r6.w, r6.w, -c163.y
                mul r12.z, r5.w, r6.w  // ::xyY_XYZ<2>
                mov r12.y, -c163.y
                cmp r11.yzw, -r1.z, c126.w, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 635
                add r12.xy, r11.ywzw, c68

#line 638
                cmp r5.w, -r12_abs.y, c68.z, c68.w
                cmp r5.w, -r1.z, c95.z, r5.w
                cmp r5.w, -r12_abs.x, r5.w, c95.z

#line 648
                add r12.xy, r11.zwzw, r11.yzzw
                mul r12.xy, r12, c125  // ::Ka<0,0>

#line 1681
                mul r6.w, r8.z, c90.w
                mul r6.w, r6.w, r6.w
                mul r6.w, r11.z, r6.w  // ::Y<0>
                rcp r8.w, r12.x
                cmp r8.w, r5.w, r8.w, c123.w
                mul r8.w, r8.w, r10.y
                cmp r1.z, -r1.z, c143.x, c143.y
                mul r1.z, r1.z, r6.w
                rsq r10.w, r1.z
                rcp r10.w, r10.w
                mad r8.w, r8.w, r10.w, r1.z
                mul r8.w, r11.y, r8.w  // ::X<0>
                rcp r11.y, r12.y
                cmp r5.w, r5.w, r11.y, c71.x
                mul r5.w, r5.w, r7.y
                mad r1.z, r5.w, r10.w, -r1.z
                mul r1.z, -r11.w, r1.z  // ::Z<0>

#line 553
                mul r11.yzw, r6.w, c24.xxyz
                mad r11.yzw, r8.w, c23.xxyz, r11
                mad r9.xyw, r1.z, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2690
                mov r1.z, -c163.y
              else
                if_eq r11.x, -c11.y

#line 1727
                  add r5.w, r8.z, -c72.z  // ::Jz<0>
                  mad r6.w, r5.w, c71.y, c71.z
                  rcp r6.w, r6.w

#line 1732
                  mul r11.yz, r10.y, c146.xxyw
                  mad r8.w, r5.w, r6.w, r11.y
                  mad r8.w, r7.y, c71.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 574
                  pow r10.w, r8.w, c146.z  // ::XX<0>
                  add r8.w, -r10.w, c70.z
                  mad r10.w, r10.w, c121.x, c121.y
                  rcp r10.w, r10.w
                  mul r8.w, r8.w, r10.w
                  pow r10.w, r8.w, c146.w

#line 1732
                  mad r11.yz, r5.w, r6.w, -r11
                  mad r11.yz, r7.y, -c121.xzww, r11  // PerceptualQuantizerInverse::X<0,0>

#line 574
                  pow r5.w, r11.y, c146.z  // ::XX<0>
                  add r6.w, -r5.w, c70.z
                  mad r5.w, r5.w, c121.x, c121.y
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r6.w
                  pow r6.w, r5.w, c146.w
                  pow r5.w, r11.z, c146.z  // ::XX<0>
                  add r8.w, -r5.w, c70.z
                  mad r5.w, r5.w, c121.x, c121.y
                  rcp r5.w, r5.w
                  mul r5.w, r5.w, r8.w
                  pow r8.w, r5.w, c146.w

#line 1736
                  mul r11.yzw, r6.w, c145.xxyz
                  mad r11.yw, r10.w, c144.xxzy, -r11
                  mad r5.w, r10.w, c145.w, r11.z
                  mad r5.w, r8.w, -c144.z, r5.w  // ::Y<0>
                  mad r11.yz, r8.w, c147.xxyw, r11.xyww  // ::X<0>, ::Z<0>
                  mul r5.w, r5.w, c69.y  // ::xyz<1>
                  mul r11.yz, r11, c69.y  // ::xyz<0,2>

#line 553
                  mul r12.xyz, r5.w, c24
                  mad r12.xyz, r11.y, c23, r12
                  mad r9.xyw, r11.z, c25.xyzz, r12.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2691
                  mov r1.z, -c163.y
                else
                  if_eq r11.x, -c11.z

#line 591
                    abs r5.w, c13.x

#line 595
                    rcp r6.w, c13.x
                    mul r12.x, r6.w, c12.x  // ::xyY_XYZ<0>
                    mov r13.x, c13.x  // ::WhiteY<0>
                    add r8.w, -r13.x, -c12.x
                    add r8.w, r8.w, -c163.y
                    mul r12.z, r6.w, r8.w  // ::xyY_XYZ<2>
                    mov r12.y, -c163.y
                    cmp r11.yzw, -r5.w, c126.w, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 553
                    mul r12.xyz, r10.y, c27
                    mad r12.xyz, r8.z, c26, r12
                    mad r12.xyz, r7.y, c28, r12  // ::x<0>, ::y<0>, ::z<0>

#line 583
                    mul r13.xyz, r12, r12
                    mul r12.xyz, r12, r13  // ::Pow3<0,0,0>

#line 553
                    mul r13.xyz, r12.y, c33
                    mad r12.xyw, r12.x, c32.xyzz, r13.xyzz
                    mad r12.xyz, r12.z, c34, r12.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1785
                    mul r11.yzw, r11, r12.xxyz  // ::xyz<0,1,2>

#line 553
                    mul r12.xyz, r11.z, c24
                    mad r12.xyz, r11.y, c23, r12
                    mad r9.xyw, r11.w, c25.xyzz, r12.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2692
                    mov r1.z, -c163.y
                  else
                    if_eq r11.x, -c11.w

#line 933
                      mul r5.w, r10.y, c90.w  // ::_s<0>
                      mul r12.y, r7.y, c90.w  // ::_b<0>

#line 936
                      add r6.w, -r8.z, c91.w

#line 948
                      mul r8.w, r8.z, c150.w
                      cmp r6.w, r6.w, r8.w, c131.x  // ::SectorPosition<0>
                      frc r8.w, r6.w
                      add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 952
                      add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 955
                      mad r10.w, r10.y, -c172.y, c172.z
                      mul r12.z, r10.w, r12.y  // ::p<0>
                      mad r10.w, r5.w, -r6.w, -c163.y
                      mul r12.w, r10.w, r12.y  // ::q<0>
                      add r6.w, -r6.w, -c163.y
                      mad r6.w, r5.w, -r6.w, -c163.y
                      mul r12.x, r6.w, r12.y  // ::t<0>

#line 984
                      add r13, r8.w, c171

#line 990
                      add r6.w, r8.w, c65.x

#line 995
                      cmp r11.yzw, -r6_abs.w, r12, c95.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.w, r12.xxzy, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.z, r12.xzwy, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.y, r12.xzyx, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r13_abs.x, r12.xwyz, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r11.yzw, -r8_abs.w, r12.xyxz, r11  // ::r<0>, ::g<0>, ::b<0>
                      cmp r9.xyw, -r5_abs.w, r12.y, r11.yzzw  // ::r<0>, ::g<0>, ::b<0>

#line 2693
                      mov r1.z, -c163.y
                    else
                      if_eq r11.x, -c73.x

#line 1042
                        mul r9.xyw, r7.y, c90.w  // ::l<0,0,0>

#line 1049
                        if_lt -r10.y, c95.z

#line 1042
                          mul r5.w, r10.y, c90.w  // ::s<0>
                          min r6.w, r8.z, c91.w  // ::h<0>
                          mul r8.w, r6.w, c150.w  // ::h<0>

#line 1051
                          mad r10.w, r7.y, c131.y, c131.z
                          add r10.w, -r10_abs.w, -c163.y
                          mul r12.x, r5.w, r10.w  // ::chroma<0>
                          cmp r11.yz, r6.w, c169.xxyw, c169.xzww
                          mul r5.w, r8.w, r11.z
                          frc r5.w, r5.w
                          mad r5.w, r11.y, r5.w, c163.y
                          add r5.w, -r5_abs.w, -c163.y
                          mul r12.y, r5.w, r12.x  // ::v<0>

#line 1072
                          add r13, -r6.w, c128

#line 1078
                          add r14, r6.w, -c128.wzyx

#line 1084
                          add r5.w, r6.w, c131.w
                          add r11.yz, -r6.w, c129.xxyw

#line 1089
                          cmp r11.yz, r11, -c163_abs.y, -c163_abs.x
                          cmp r5.w, r5.w, r11.y, c95.z
                          mov r12.z, c95.z
                          cmp r15.xyz, r5.w, c95.z, r12.xzyw  // ::result<0,1,2>
                          cmp r5.w, r14.w, r11.z, c95.z
                          cmp r11.yzw, r5.w, r15.xxyz, r12.xyzx  // ::result<0,1,2>
                          cmp r13, r13, -c163_abs.y, -c163_abs.x
                          cmp r13.xyz, r14.zyxw, r13, c95.z
                          cmp r11.yzw, r13.x, r11, r12.xzyx  // ::result<0,1,2>
                          cmp r11.yzw, r13.y, r11, r12.xzxy  // ::result<0,1,2>
                          cmp r11.yzw, r13.z, r11, r12.xyxz  // ::result<0,1,2>
                          cmp r5.w, r6.w, r13.w, c95.z
                          cmp r11.yzw, r5.w, r11, r12.xxyz  // ::result<0,1,2>
                          mad r5.w, r12.x, c141.w, r9.w  // ::w<0>

#line 1094
                          add r9.xyw, r5.w, r11.yzzw  // ::result<0,1,2>

#line 1099
                        endif

#line 2694
                        mov r1.z, -c163.y
                      else
                        if_eq r11.x, -c73.y

#line 1398
                          mul r5.w, r10.y, c90.w  // ::white<0>
                          mul r6.w, r7.y, c90.w  // ::black<0>
                          mad r6.w, r10.y, c90.w, r6.w

#line 1407
                          if_ge r6.w, -c163.y

#line 1403
                            rcp r6.w, r6.w
                            mul r9.xyw, r5.w, r6.w  // ::gray<0,0,0>

#line 1418
                          else

#line 936
                            add r6.w, -r8.z, c91.w

#line 948
                            mul r8.w, r8.z, c150.w
                            cmp r6.w, r6.w, r8.w, c131.x  // ::SectorPosition<0>
                            frc r8.w, r6.w
                            add r8.w, r6.w, -r8.w  // ::SectorNumber<0>

#line 952
                            add r6.w, r6.w, -r8.w  // ::FractionalSector<0>

#line 956
                            add r12.x, -r6.w, -c163.y  // ::q<0>

#line 984
                            add r13, r8.w, c171

#line 990
                            add r6.w, r8.w, c65.x
                            cmp r14.x, -r6_abs.w, c163_abs.y, c163_abs.x  // ::r<0>

#line 995
                            mov r12.y, c95.z
                            cmp r14.yz, -r6_abs.w, r12.xyxw, c95.z  // ::g<0>, ::b<0>
                            mad r12.zw, r12.x, c132, c132.y
                            cmp r11.yzw, -r13_abs.w, r12.xzyw, r14.xxyz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r11.yzw, -r13_abs.z, r12.xyxw, r11  // ::r<0>, ::g<0>, ::b<0>
                            mad r14.xyz, r12.wxyw, c132.yzyw, c132.wyww
                            cmp r11.yzw, -r13_abs.y, r14.xzxy, r11  // ::r<0>, ::g<0>, ::b<0>
                            cmp r11.yzw, -r13_abs.x, r12.xxwy, r11  // ::r<0>, ::g<0>, ::b<0>
                            cmp r11.yzw, -r8_abs.w, r14.xxyz, r11  // ::r<0>, ::g<0>, ::b<0>

#line 1410
                            mad r6.w, r10.y, -c172.y, c172.z
                            mad r6.w, r7.y, -c90.w, r6.w

#line 1417
                            mad r9.xyw, r11.yzzw, r6.w, r5.w  // ::rgb<0,1,2>
                          endif

#line 2695
                          mov r1.z, -c163.y
                        else
                          if_eq r11.x, -c73.z

#line 672
                            mad r5.w, r7.y, c91.x, c91.y
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c86.x, c86.y
                            sincos r12.xy, r5.w
                            mul r11.yz, r10.y, r12.xxyw  // ::a<0>, ::b<0>

#line 1625
                            add r5.w, r8.z, c141.z
                            mul r6.w, r5.w, c91.z  // ::fy<0>
                            mul r8.w, r11.z, c123.x
                            mad r10.w, r11.y, c102.w, r6.w  // ::fx<0>
                            mad r5.w, r5.w, c91.z, -r8.w  // ::fz<0>
                            mul r8.w, r10.w, r10.w
                            mul r11.y, r8.w, r10.w  // ::fx3<0>
                            mul r11.z, r5.w, r5.w
                            mul r11.w, r5.w, r11.z  // ::fz3<0>
                            mad r8.w, r10.w, -r8.w, c72.w
                            mad r10.w, r10.w, c123.y, c123.z
                            mul r10.w, r10.w, c122.x
                            cmp r8.w, r8.w, r10.w, r11.y  // ::xr<0>
                            add r10.w, -r8.z, c88.w
                            mul r11.y, r6.w, r6.w
                            mul r6.w, r6.w, r11.y
                            mul r11.y, r8.z, c122.x
                            cmp r6.w, r10.w, r11.y, r6.w  // ::yr<0>
                            mad r10.w, r5.w, -r11.z, c72.w
                            mad r5.w, r5.w, c123.y, c123.z
                            mul r5.w, r5.w, c122.x
                            cmp r5.w, r10.w, r5.w, r11.w  // ::zr<0>

#line 591
                            abs r10.w, c13.x

#line 595
                            rcp r11.y, c13.x
                            mul r12.x, r11.y, c12.x  // ::xyY_XYZ<0>
                            mov r13.x, c13.x  // ::WhiteY<0>
                            add r11.z, -r13.x, -c12.x
                            add r11.z, r11.z, -c163.y
                            mul r12.z, r11.y, r11.z  // ::xyY_XYZ<2>
                            mov r12.y, -c163.y
                            cmp r11.yzw, -r10.w, c126.w, r12.xxyz  // ::xyY_XYZ<0,1,2>

#line 1637
                            mul r9.x, r8.w, r11.y  // ::Lab_Lrgb<0>
                            mul r9.y, r6.w, r11.z  // ::Lab_Lrgb<1>
                            mul r9.w, r5.w, r11.w  // ::Lab_Lrgb<2>

#line 2696
                            mov r1.z, -c163.y
                          else
                            if_eq r11.x, -c73.w

#line 672
                              mad r5.w, r7.y, c91.x, c91.y
                              frc r5.w, r5.w
                              mad r5.w, r5.w, c86.x, c86.y
                              sincos r12.xy, r5.w
                              mul r11.yz, r10.y, r12.xxyw  // ::a<0>, ::b<0>

#line 591
                              abs r5.w, c13.x

#line 595
                              rcp r6.w, c13.x
                              mul r12.x, r6.w, c12.x  // ::xyY_XYZ<0>
                              mov r13.x, c13.x  // ::WhiteY<0>
                              add r8.w, -r13.x, -c12.x
                              add r8.w, r8.w, -c163.y
                              mul r12.z, r6.w, r8.w  // ::xyY_XYZ<2>
                              mov r12.y, -c163.y
                              cmp r12.xyz, -r5.w, c126.w, r12  // ::xyY_XYZ<0,1,2>

#line 635
                              add r13.xy, r12.xzzw, c68

#line 638
                              cmp r6.w, -r13_abs.y, c68.z, c68.w
                              cmp r6.w, -r5.w, c95.z, r6.w
                              cmp r6.w, -r13_abs.x, r6.w, c95.z

#line 648
                              add r13.xy, r12.yzzw, r12
                              mul r13.xy, r13, c125  // ::Ka<0,0>

#line 1681
                              mul r8.w, r8.z, c90.w
                              mul r8.w, r8.w, r8.w
                              mul r8.w, r12.y, r8.w  // ::Y<0>
                              rcp r10.w, r13.x
                              cmp r10.w, r6.w, r10.w, c123.w
                              mul r10.w, r10.w, r11.y
                              cmp r5.w, -r5.w, c143.x, c143.y
                              mul r5.w, r5.w, r8.w
                              rsq r11.y, r5.w
                              rcp r11.y, r11.y
                              mad r10.w, r10.w, r11.y, r5.w
                              mul r10.w, r12.x, r10.w  // ::X<0>
                              rcp r11.w, r13.y
                              cmp r6.w, r6.w, r11.w, c71.x
                              mul r6.w, r6.w, r11.z
                              mad r5.w, r6.w, r11.y, -r5.w
                              mul r5.w, -r12.z, r5.w  // ::Z<0>

#line 553
                              mul r11.yzw, r8.w, c24.xxyz
                              mad r11.yzw, r10.w, c23.xxyz, r11
                              mad r9.xyw, r5.w, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2697
                              mov r1.z, -c163.y
                            else
                              if_eq r11.x, -c35.x

#line 672
                                mad r5.w, r7.y, c91.x, c91.y
                                frc r5.w, r5.w
                                mad r5.w, r5.w, c86.x, c86.y
                                sincos r12.xy, r5.w
                                mul r12, r10.y, r12.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1727
                                add r5.w, r8.z, -c72.z  // ::Jz<0>
                                mad r6.w, r5.w, c71.y, c71.z
                                rcp r6.w, r6.w

#line 1732
                                mul r11.yz, r12.xxzw, c146.xxyw
                                mad r8.w, r5.w, r6.w, r11.y
                                mad r8.w, r12.y, c71.w, r8.w  // PerceptualQuantizerInverse::X<0>

#line 574
                                pow r10.w, r8.w, c146.z  // ::XX<0>
                                add r8.w, -r10.w, c70.z
                                mad r10.w, r10.w, c121.x, c121.y
                                rcp r10.w, r10.w
                                mul r8.w, r8.w, r10.w
                                pow r10.w, r8.w, c146.w

#line 1732
                                mad r11.yz, r5.w, r6.w, -r11
                                mad r11.yz, r12.xyww, -c121.xzww, r11  // PerceptualQuantizerInverse::X<0,0>

#line 574
                                pow r5.w, r11.y, c146.z  // ::XX<0>
                                add r6.w, -r5.w, c70.z
                                mad r5.w, r5.w, c121.x, c121.y
                                rcp r5.w, r5.w
                                mul r5.w, r5.w, r6.w
                                pow r6.w, r5.w, c146.w
                                pow r5.w, r11.z, c146.z  // ::XX<0>
                                add r8.w, -r5.w, c70.z
                                mad r5.w, r5.w, c121.x, c121.y
                                rcp r5.w, r5.w
                                mul r5.w, r5.w, r8.w
                                pow r8.w, r5.w, c146.w

#line 1736
                                mul r11.yzw, r6.w, c145.xxyz
                                mad r11.yw, r10.w, c144.xxzy, -r11
                                mad r5.w, r10.w, c145.w, r11.z
                                mad r5.w, r8.w, -c144.z, r5.w  // ::Y<0>
                                mad r11.yz, r8.w, c147.xxyw, r11.xyww  // ::X<0>, ::Z<0>
                                mul r5.w, r5.w, c69.y  // ::xyz<1>
                                mul r11.yz, r11, c69.y  // ::xyz<0,2>

#line 553
                                mul r12.xyz, r5.w, c24
                                mad r12.xyz, r11.y, c23, r12
                                mad r9.xyw, r11.z, c25.xyzz, r12.xyzz  // ::x<0>, ::y<0>, ::z<0>

#line 2698
                                mov r1.z, -c163.y
                              else
                                add r5.w, r11.x, c35.y
                                cmp r1.z, -r5_abs.w, c163_abs.y, c163_abs.x

#line 672
                                mad r6.w, r7.y, c91.x, c91.y
                                frc r6.w, r6.w
                                mad r6.w, r6.w, c86.x, c86.y
                                sincos r12.xy, r6.w
                                mul r8.xy, r10.y, r12  // ::a<0>, ::b<0>

#line 2065
                                add r11.yzw, r8.xxyz, c165.xwwy
                                mul r12.xyz, r11.yzww, c147.zzww  // ::result<0,1,2>

#line 595
                                mul r6.w, r12.z, r12.x
                                rcp r8.w, r12.y
                                mul r13.x, r6.w, r8.w  // ::xyY_XYZ<0>
                                mad r6.w, r11.z, -c123.x, -r12.x
                                add r6.w, r6.w, -c163.y
                                mul r6.w, r12.z, r6.w
                                mul r13.z, r8.w, r6.w  // ::xyY_XYZ<2>
                                mov r13.y, r12.z
                                cmp r11.yzw, -r12_abs.y, c126.w, r13.xxyz  // ::xyY_XYZ<0,1,2>

#line 2699
                                cmp r9.xyw, -r5_abs.w, r11.yzzw, r9  // ::TLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r1.z, -r1.z

#line 2724
              else

#line 2701
                if_eq r11.x, -c35.z

#line 672
                  mad r1.z, r7.y, c91.x, c91.y
                  frc r1.z, r1.z
                  mad r1.z, r1.z, c86.x, c86.y
                  sincos r12.xy, r1.z
                  mul r11.yz, r10.y, r12.xxyw  // ::a<0>, ::b<0>

#line 591
                  abs r1.z, c13.x

#line 595
                  rcp r5.w, c13.x
                  mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                  mov r13.x, c13.x  // ::WhiteY<0>
                  add r6.w, -r13.x, -c12.x
                  add r6.w, r6.w, -c163.y
                  mul r12.z, r5.w, r6.w  // ::xyY_XYZ<2>
                  mov r12.y, -c163.y
                  cmp r12.xyz, -r1.z, c126.w, r12  // ::xyY_XYZ<0,1,2>

#line 654
                  cmp r1.z, -r1.z, c142.y, c142.w
                  add r1.z, r1.z, r12.x
                  mul r5.w, r12.x, -c51.x
                  mad r1.z, r12.z, -c62.x, r1.z
                  rcp r1.z, r1.z
                  mul r5.w, r1.z, r5.w  // ::ComputeKu<0>

#line 659
                  mul r1.z, r12.y, r1.z
                  mul r1.z, r1.z, -c89.z  // ::ComputeKv<0>

#line 1831
                  add r6.w, -r8.z, c88.w
                  add r8.w, r8.z, c141.z
                  mul r8.w, r8.w, c91.z
                  mul r10.w, r8.w, r8.w
                  mul r8.w, r8.w, r10.w

#line 1836
                  mul r12, r8.z, c153

#line 1831
                  cmp r6.w, r6.w, r12.x, r8.w  // ::Y<0>
                  mad r5.w, r12.z, r5.w, r11.y
                  rcp r5.w, r5.w
                  mad r5.w, r12.y, r5.w, c163.y
                  mul r5.w, r5.w, c59.w  // ::a<0>
                  mul r8.w, r6.w, c65.x  // ::b<0>
                  mad r1.z, r12.z, r1.z, r11.z
                  rcp r1.z, r1.z
                  mad r1.z, r12.w, r1.z, c65.x
                  mad r1.z, r6.w, r1.z, -r8.w
                  rcp r10.w, r5.w
                  mul r1.z, r1.z, r10.w  // ::X<0>
                  mad r5.w, r1.z, r5.w, r8.w  // ::Z<0>

#line 1842
                  max r8.w, r1.z, c95.z  // ::X<0>

#line 1845
                  max r1.z, r6.w, c95.z  // ::Y<0>

#line 1848
                  max r6.w, r5.w, c95.z  // ::Z<0>

#line 553
                  mul r11.yzw, r1.z, c24.xxyz
                  mad r11.yzw, r8.w, c23.xxyz, r11
                  mad r9.xyw, r6.w, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2701
                  mov r1.z, -c163.y
                else
                  if_eq r11.x, -c35.w

#line 672
                    mad r5.w, r7.y, c91.x, c91.y
                    frc r5.w, r5.w
                    mad r5.w, r5.w, c86.x, c86.y
                    sincos r12.xy, r5.w
                    mul r8.xy, r10.y, r12  // ::a<0>, ::b<0>

#line 2213
                    add r8.xyw, r8.xyzz, c165.wwzy
                    mul r11.yzw, r8.xxyw, c147.xzzw  // ::result<0,1,2>

#line 595
                    mul r5.w, r11.w, r11.y
                    rcp r6.w, r11.z
                    mul r12.x, r5.w, r6.w  // ::xyY_XYZ<0>
                    mad r5.w, r8.y, -c123.x, -r11.y
                    add r5.w, r5.w, -c163.y
                    mul r5.w, r11.w, r5.w
                    mul r12.z, r6.w, r5.w  // ::xyY_XYZ<2>
                    mov r12.y, r11.w
                    cmp r8.xyw, -r11_abs.z, c126.w, r12.xyzz  // ::xyY_XYZ<0,1,2>

#line 553
                    mul r11.yzw, r8.y, c24.xxyz
                    mad r11.yzw, r8.x, c23.xxyz, r11
                    mad r9.xyw, r8.w, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2702
                    mov r1.z, -c163.y
                  else
                    if_eq r11.x, -c54.x

#line 553
                      mul r8.xyw, r10.y, c15.xyzz
                      mad r8.xyw, r8.z, c14.xyzz, r8
                      mad r8.xyw, r7.y, c16.xyzz, r8  // ::x<0>, ::y<0>, ::z<0>
                      mul r11.yzw, r8.y, c24.xxyz
                      mad r11.yzw, r8.x, c23.xxyz, r11
                      mad r9.xyw, r8.w, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2703
                      mov r1.z, -c163.y
                    else
                      if_eq r11.x, -c54.y

#line 591
                        abs r5.w, c13.x

#line 595
                        rcp r6.w, c13.x
                        mul r12.x, r6.w, c12.x  // ::xyY_XYZ<0>
                        mov r8.x, c13.x  // ::WhiteY<0>
                        add r8.x, -r8.x, -c12.x
                        add r8.x, r8.x, -c163.y
                        mul r12.z, r6.w, r8.x  // ::xyY_XYZ<2>
                        mov r12.y, -c163.y
                        cmp r8.xyw, -r5.w, c126.w, r12.xyzz  // ::xyY_XYZ<0,1,2>

#line 654
                        cmp r5.w, -r5.w, c142.y, c142.w
                        add r5.w, r5.w, r8.x
                        mul r6.w, r8.x, -c51.x
                        mad r5.w, r8.w, -c62.x, r5.w
                        rcp r5.w, r5.w
                        mul r6.w, r5.w, r6.w  // ::ComputeKu<0>

#line 659
                        mul r5.w, r8.y, r5.w
                        mul r5.w, r5.w, -c89.z  // ::ComputeKv<0>

#line 1831
                        add r8.x, -r8.z, c88.w
                        add r8.y, r8.z, c141.z
                        mul r8.y, r8.y, c91.z
                        mul r8.w, r8.y, r8.y
                        mul r8.y, r8.w, r8.y

#line 1836
                        mul r12, r8.z, c153

#line 1831
                        cmp r8.x, r8.x, r12.x, r8.y  // ::Y<0>
                        mad r6.w, r12.z, r6.w, r10.y
                        rcp r6.w, r6.w
                        mad r6.w, r12.y, r6.w, c163.y
                        mul r6.w, r6.w, c59.w  // ::a<0>
                        mul r8.y, r8.x, c65.x  // ::b<0>
                        mad r5.w, r12.z, r5.w, r7.y
                        rcp r5.w, r5.w
                        mad r5.w, r12.w, r5.w, c65.x
                        mad r5.w, r8.x, r5.w, -r8.y
                        rcp r8.w, r6.w
                        mul r5.w, r5.w, r8.w  // ::X<0>
                        mad r6.w, r5.w, r6.w, r8.y  // ::Z<0>

#line 1842
                        max r8.y, r5.w, c95.z  // ::X<0>

#line 1845
                        max r5.w, r8.x, c95.z  // ::Y<0>

#line 1848
                        max r8.x, r6.w, c95.z  // ::Z<0>

#line 553
                        mul r11.yzw, r5.w, c24.xxyz
                        mad r11.yzw, r8.y, c23.xxyz, r11
                        mad r9.xyw, r8.x, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2704
                        mov r1.z, -c163.y
                      else
                        if_eq r11.x, -c36.y

#line 595
                          mul r5.w, r7.y, r8.z
                          rcp r6.w, r10.y
                          mul r7.x, r5.w, r6.w  // ::xyY_XYZ<0>
                          add r5.w, -r8.z, -r10.y
                          add r5.w, r5.w, -c163.y
                          mul r5.w, r7.y, r5.w
                          mul r7.z, r6.w, r5.w  // ::xyY_XYZ<2>
                          cmp r9.xyw, -r10_abs.y, c126.w, r7.xyzz  // ::xyY_XYZ<0,1,2>

#line 2706
                          mov r1.z, -c163.y
                        else
                          if_eq r11.x, -c36.z

#line 1443
                            mad r5.w, r8.z, c90.x, c90.z
                            frc r5.w, r5.w
                            mad r5.w, r5.w, c86.x, c86.y
                            sincos r12.xy, r5.w
                            rcp r5.w, r12.x
                            mul r5.w, r5.w, r12.y  // ::x<0>
                            mul r6.w, r5.w, r5.w  // ::x<0>
                            mul r8.x, r10.y, r10.y
                            mul r8.x, r8.x, -c65.x
                            rcp r6.w, r6.w
                            add r6.w, r6.w, -c163.y
                            mul r6.w, r6.w, -c89.z
                            rcp r6.w, r6.w
                            mul r6.w, r6.w, r8.x
                            rsq r6.w, r6.w
                            rcp r6.w, r6.w  // ::r<0>
                            mad r5.w, r5.w, r5.w, -c163.y
                            mul r5.w, r5.w, -c89.z
                            rcp r5.w, r5.w
                            mul r5.w, r5.w, r8.x
                            rsq r5.w, r5.w
                            rcp r5.w, r5.w  // ::g<0>
                            mul r8.x, r5.w, c144.w
                            mad r8.x, r6.w, c124.x, r8.x
                            add r8.x, r8.x, c127.w
                            rcp r8.x, r8.x
                            mul r8.x, r7.y, r8.x  // ::k<0>
                            add r8.y, -r6.w, -c163.y
                            add r8.y, -r5.w, r8.y
                            mul r9.w, r8.y, r8.x  // ::B<0>
                            mul r9.y, r5.w, r8.x  // ::G<0>
                            mul r9.x, r6.w, r8.x  // ::R<0>

#line 2707
                            mov r1.z, -c163.y
                          else
                            add r5.w, r11.x, c36.w
                            cmp r1.z, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2138
                            mul r6.w, r8.z, c124.y  // XYZ_Lrgb::input<0>
                            mad r8.x, r10.y, c62.x, r6.w
                            mad r8.x, r7.y, -c89.x, r8.x  // XYZ_Lrgb::input<2>

#line 553
                            mul r11.yzw, r10.y, c24.xxyz
                            mad r11.yzw, r6.w, c23.xxyz, r11
                            mad r8.xyw, r8.x, c25.xyzz, r11.yzzw  // ::x<0>, ::y<0>, ::z<0>

#line 2708
                            cmp r9.xyw, -r5_abs.w, r8, r9  // ::TLrgb<0,1,2>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r1.z, -r1.z

#line 2724
                else
                  add r8.xy, r11.x, c40.zwzw
                  cmp r1.z, -r8_abs.y, -c163_abs.y, -c163_abs.x

#line 2710
                  if_eq r11.x, -c37.x

#line 2158
                    if_eq r9.z, -r4.w

#line 2171
                      mov r11.yzw, c95.z  // ::UVW_Lrgb<0,1,2>
                    else

#line 591
                      abs r4.w, c13.x

#line 595
                      rcp r5.w, c13.x
                      mul r12.x, r5.w, c12.x  // ::xyY_XYZ<0>
                      mov r13.x, c13.x  // ::WhiteY<0>
                      add r6.w, -r13.x, -c12.x
                      add r6.w, r6.w, -c163.y
                      mul r12.z, r5.w, r6.w  // ::xyY_XYZ<2>
                      mov r12.y, -c163.y
                      cmp r12.xyz, -r4.w, c126.w, r12  // ::xyY_XYZ<0,1,2>

#line 2159
                      cmp r4.w, -r4.w, c142.y, c142.w
                      add r4.w, r4.w, r12.x
                      mul r5.w, r12.x, -c51.x
                      mad r4.w, r12.z, -c62.x, r4.w
                      rcp r4.w, r4.w
                      mul r5.w, r4.w, r5.w  // ::uN<0>
                      mul r4.w, r12.y, r4.w
                      mul r4.w, r4.w, -c52.x  // ::vN<0>
                      add r6.w, r7.y, -c94.z
                      mul r6.w, r6.w, c124.z
                      mul r8.w, r6.w, r6.w
                      mul r6.w, r6.w, r8.w  // ::y<0>
                      mul r8.w, r7.y, -c52.z
                      rcp r9.z, r8.w
                      mad r5.w, r8.z, r9.z, r5.w
                      cmp r5.w, -r8_abs.w, c95.z, r5.w  // ::_u<0>
                      mad r4.w, r10.y, r9.z, r4.w
                      cmp r4.w, -r8_abs.w, c95.z, r4.w  // ::_v<0>
                      mul r8.w, r5.w, r6.w
                      rcp r4.w, r4.w
                      mul r8.w, r4.w, r8.w  // ::x<0>
                      add r9.z, r4.w, r4.w
                      mul r4.w, r5.w, r4.w
                      mad r4.w, r4.w, c141.w, r9.z
                      add r4.w, r4.w, c65.x
                      mul r4.w, r4.w, r6.w  // ::z<0>

#line 2170
                      mul r5.w, r8.w, c90.w  // ::xyz<0>
                      mul r6.w, r6.w, c90.w  // ::xyz<1>
                      mul r4.w, r4.w, c90.w  // ::xyz<2>

#line 553
                      mul r12.xyz, r6.w, c24
                      mad r12.xyz, r5.w, c23, r12
                      mad r11.yzw, r4.w, c25.xxyz, r12.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2171
                    endif

#line 2710
                    mov r4.w, -c163.y
                  else
                    if_eq r11.x, -c37.y

#line 2389
                      add r5.w, r8.z, -c141.z
                      mul r6.w, r5.w, c93.w  // ::ypbpr<0>
                      add r8.w, r10.y, c95.w
                      add r9.z, r7.y, c95.w

#line 2364
                      mad r11.y, r9.z, c102.x, r6.w  // ::r<0>
                      mad r11.w, r8.w, c102.y, r6.w  // ::b<0>
                      mul r6.w, r11.y, c148.x
                      mad r5.w, r5.w, c93.w, -r6.w
                      mad r5.w, r11.w, -c148.z, r5.w
                      mul r11.z, r5.w, c102.z  // ::g<0>

#line 2711
                      mov r4.w, -c163.y
                    else
                      if_eq r11.x, -c37.z

#line 595
                        mul r5.w, r7.y, r8.z
                        rcp r6.w, r10.y
                        mul r7.x, r5.w, r6.w  // ::xyY_XYZ<0>
                        add r5.w, -r8.z, -r10.y
                        add r5.w, r5.w, -c163.y
                        mul r5.w, r7.y, r5.w
                        mul r7.z, r6.w, r5.w  // ::xyY_XYZ<2>
                        cmp r12.xyz, -r10_abs.y, c126.w, r7  // ::xyY_XYZ<0,1,2>

#line 553
                        mul r13.xyz, r12.y, c24
                        mad r12.xyw, r12.x, c23.xyzz, r13.xyzz
                        mad r11.yzw, r12.z, c25.xxyz, r12.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2712
                        mov r4.w, -c163.y
                      else
                        if_eq r11.x, -c37.w

#line 591
                          abs r5.w, c13.x

#line 595
                          rcp r6.w, c13.x
                          mul r12.x, r6.w, c12.x  // ::xyY_XYZ<0>
                          mov r7.x, c13.x  // ::WhiteY<0>
                          add r7.x, -r7.x, -c12.x
                          add r7.x, r7.x, -c163.y
                          mul r12.z, r6.w, r7.x  // ::xyY_XYZ<2>

#line 2230
                          mov r12.y, -c163.y
                          mul r12.xyz, r12, c165.w
                          cmp r12.xyz, -r5.w, c124.w, r12  // ::white<0,1,2>

#line 2234
                          add r5.w, r12.y, r12.x
                          add r5.w, r12.z, r5.w
                          rcp r6.w, r5.w
                          mul r6.w, r6.w, r12.y  // ::x0<0>
                          mul r5.w, r5.w, c90.w  // ::ew<0>

#line 2239
                          mul r7.x, r7.y, r7.y

#line 2243
                          mul r12.xy, c38.yxzw, c38.xzzw
                          mul r13.yz, r7.x, c172  // ::Y<0>
                          mul r7.x, r6.w, r13.z
                          mul r12.xy, r10.y, r12
                          mul r12.xz, r12.xyyw, c165.w
                          mad r7.x, r7.x, r5.w, r12.x
                          mul r6.w, r6.w, r12.z
                          mad r6.w, r6.w, -r5.w, r7.x
                          mul r7.x, r10.y, c165.w
                          mul r12.xw, r7.x, c38.xyzz
                          mul r7.z, r5.w, r12.z
                          mad r7.x, r7.x, c38.x, -r7.z
                          mul r7.z, r5.w, r13.y
                          mad r7.x, r13.z, r5.w, r7.x
                          rcp r7.x, r7.x
                          mul r6.w, r6.w, r7.x  // ::x<0>
                          mad r7.x, r12.w, c38.x, r13.z
                          mad r7.x, r12.y, -c165.w, r7.x
                          mad r7.z, r7.z, c165.w, r12.x
                          mad r5.w, r12.z, -r5.w, r7.z
                          rcp r5.w, r5.w
                          mul r7.z, r5.w, r7.x  // ::y<0>

#line 595
                          mul r8.w, r13.y, r6.w
                          rcp r9.z, r7.z
                          mul r13.x, r8.w, r9.z  // ::xyY_XYZ<0>
                          mad r5.w, r7.x, -r5.w, -r6.w
                          add r5.w, r5.w, -c163.y
                          mul r5.w, r13.y, r5.w
                          mul r13.w, r9.z, r5.w  // ::xyY_XYZ<2>
                          cmp r12.xyz, -r7_abs.z, c126.w, r13.xyww  // ::xyY_XYZ<0,1,2>

#line 553
                          mul r13.xyz, r12.y, c24
                          mad r12.xyw, r12.x, c23.xyzz, r13.xyzz
                          mad r11.yzw, r12.z, c25.xxyz, r12.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2713
                          mov r4.w, -c163.y
                        else
                          if_eq r11.x, -c55.x

#line 553
                            mul r12.xyz, r10.y, c24
                            mad r12.xyz, r8.z, c23, r12
                            mad r11.yzw, r7.y, c25.xxyz, r12.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2714
                            mov r4.w, -c163.y
                          else
                            if_eq r11.x, -c55.y

#line 2409
                              add r5.w, r8.z, -c141.z
                              mul r6.w, r5.w, c93.w  // ::ypbpr<0>
                              add r7.x, r10.y, c95.w
                              add r7.z, r7.y, c95.w

#line 2364
                              mad r11.y, r7.z, c102.x, r6.w  // ::r<0>
                              mad r11.w, r7.x, c102.y, r6.w  // ::b<0>
                              mul r6.w, r11.y, c148.x
                              mad r5.w, r5.w, c93.w, -r6.w
                              mad r5.w, r11.w, -c148.z, r5.w
                              mul r11.z, r5.w, c102.z  // ::g<0>

#line 2715
                              mov r4.w, -c163.y
                            else

#line 2719
                              add r12, r11.x, c175

#line 2265
                              add r5.w, r8.z, -r10.y  // ::c<0>
                              add r13.x, r7.y, r5.w  // ::YCoCg_Lrgb<0>
                              add r13.y, r8.z, r10.y  // ::YCoCg_Lrgb<1>
                              add r13.z, -r7.y, r5.w  // ::YCoCg_Lrgb<2>

#line 2308
                              mad r14.xyz, r10.y, c99, r8.z

#line 2280
                              mad r5.w, r10.y, -c99.w, r8.z
                              mad r15.y, r7.y, c100.x, r5.w  // ::g<0>
                              mad r15.xz, r7.y, -c100.yyzw, r14.xyyw  // ::r<0>, ::b<0>

#line 2308
                              mad r14.x, r7.y, c100.w, r14.z  // ::r<0>

#line 2333
                              mad r16, r10.y, c96, r8.z

#line 2309
                              mad r14.y, r7.y, c100.w, r16.x  // ::g<0>

#line 2719
                              cmp r5.w, -r12_abs.w, c163_abs.y, c163_abs.x

#line 2333
                              mad r16.xyz, r7.y, c97, r16.yzww  // ::b<0>, ::r<0>, ::g<0>
                              mad r6.w, r10.y, c97.w, r8.z
                              mad r6.w, r7.y, c98.x, r6.w  // ::b<0>

#line 2337
                              mov_sat r7.xz, r16.yyzw
                              cmp r17.xy, r16.yzzw, r7.xzzw, c95.z  // ::r<0>, ::g<0>
                              mov_sat r7.x, r6.w
                              cmp r17.z, r6.w, r7.x, c95.z  // ::b<0>

#line 2719
                              cmp r16.yzw, -r12_abs.w, r17.xxyz, r9.xxyw  // ::TLrgb<0,1,2>
                              mov r14.z, r16.x
                              cmp r14.xyz, -r12_abs.z, r14, r16.yzww  // ::TLrgb<0,1,2>
                              cmp r5.w, -r12_abs.z, -c163.y, r5.w
                              cmp r14.xyz, -r12_abs.y, r15, r14  // ::TLrgb<0,1,2>
                              cmp r5.w, -r12_abs.y, -c163.y, r5.w
                              cmp r11.yzw, -r12_abs.x, r13.xxyz, r14.xxyz  // ::TLrgb<0,1,2>
                              cmp r4.w, -r12_abs.x, -c163.y, r5.w
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2453
                  mad r12.xy, r7.y, c98.yzzw, r8.z  // ::r<0,0>

#line 2459
                  mad r13.xyz, r10.y, c101, r8.z  // ::b<0,0>

#line 2366
                  mad r5.w, r12.x, -c148.x, r8.z
                  mad r5.w, r13.x, -c148.z, r5.w
                  mul r12.z, r5.w, c102.z  // ::g<0>

#line 2456
                  mad r5.w, r7.y, c98.w, r13.y  // ::g<0>

#line 2463
                  mov_sat r6.w, r12.y
                  cmp r14.x, r12.y, r6.w, c95.z  // ::r<0>
                  mov_sat r6.w, r5.w
                  cmp r14.y, r5.w, r6.w, c95.z  // ::g<0>
                  mov_sat r5.w, r13.z
                  cmp r14.z, r13.z, r5.w, c95.z  // ::b<0>

#line 2722
                  cmp r13.yzw, -r8_abs.y, r14.xxyz, r11  // ::TLrgb<0,1,2>
                  mov r12.w, r13.x
                  cmp r12.xyz, -r8_abs.x, r12.xzww, r13.yzww  // ::TLrgb<0,1,2>
                  cmp r1.z, -r8_abs.x, c163.y, r1.z
                  mov r10.x, r8.z
                  mov r10.z, r7.y
                  cmp r7.xyz, r1.z, r10, r12  // ::TLrgb<0,1,2>
                  cmp r9.xyw, -r4.w, r7.xyzz, r11.yzzw  // ::TLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r1.z, -r9.x, c47.x
            mul r4.w, r9.x, c48.x
            rcp r5.w, c45.x
            pow r6.w, r9.x, r5.w
            lrp r5.w, r6.w, -r6.y, -c46.x
            cmp r1.z, r1.z, r4.w, r5.w  // ::V<0>
            mov r4.w, -c163.y
          else

#line 2559
            if_eq c10.x, -r6.y

#line 2562
              rcp r5.w, c45.x
              pow r1.z, r9.x, r5.w  // ::V<0>
              mov r4.w, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r5.w, -r9.x, -c163.y
                rsq r6.w, r9.x
                rcp r6.w, r6.w
                mul r6.w, r6.w, -c141.w  // ::Transfer<0>
                cmp r5.w, r5.w, -c163_abs.y, -c163_abs.x
                cmp r5.w, r9.x, r5.w, c95.z
                add r7.x, r9.x, c103.y
                log r7.x, r7.x
                mad r7.x, r7.x, c103.z, c103.w  // ::Transfer<0>
                cmp r1.z, r5.w, r7.x, r6.w  // ::Transfer<0>
                mov r4.w, -c163.y
              else

#line 2582
                mov r7.x, c10.x  // ::Companding<0>
                add r5.w, r7.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r5.w, r9.x, c101.w
                add r6.w, r5.w, -c70.z
                max r7.x, r6.w, c95.z  // ::a<0>
                mad r5.w, r5.w, -c70.y, c70.x  // ::b<0>
                rcp r5.w, r5.w
                mul r5.w, r5.w, r7.x
                pow r6.w, r5.w, c146.w
                mul r1.z, r6.w, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp oC0.x, -r4.w, r9.x, r1.z  // ::main<0>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r1.z, -r9.y, c47.x
            mul r4.w, r9.y, c48.x
            rcp r5.w, c45.x
            pow r6.w, r9.y, r5.w
            lrp r5.w, r6.w, -r6.y, -c46.x
            cmp r1.z, r1.z, r4.w, r5.w  // ::V<0>
            mov r4.w, -c163.y
          else

#line 2559
            if_eq c10.x, -r6.y

#line 2562
              rcp r5.w, c45.x
              pow r1.z, r9.y, r5.w  // ::V<0>
              mov r4.w, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r5.w, -r9.y, -c163.y
                rsq r6.w, r9.y
                rcp r6.w, r6.w
                mul r6.w, r6.w, -c141.w  // ::Transfer<0>
                cmp r5.w, r5.w, -c163_abs.y, -c163_abs.x
                cmp r5.w, r9.y, r5.w, c95.z
                add r7.x, r9.y, c103.y
                log r7.x, r7.x
                mad r7.x, r7.x, c103.z, c103.w  // ::Transfer<0>
                cmp r1.z, r5.w, r7.x, r6.w  // ::Transfer<0>
                mov r4.w, -c163.y
              else

#line 2582
                mov r7.x, c10.x  // ::Companding<0>
                add r5.w, r7.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r5.w, r9.y, c101.w
                add r6.w, r5.w, -c70.z
                max r7.x, r6.w, c95.z  // ::a<0>
                mad r5.w, r5.w, -c70.y, c70.x  // ::b<0>
                rcp r5.w, r5.w
                mul r5.w, r5.w, r7.x
                pow r6.w, r5.w, c146.w
                mul r1.z, r6.w, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp oC0.y, -r4.w, r9.y, r1.z  // ::main<1>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r1.z, -r9.w, c47.x
            mul r4.w, r9.w, c48.x
            rcp r5.w, c45.x
            pow r6.w, r9.w, r5.w
            lrp r5.w, r6.w, -r6.y, -c46.x
            cmp r1.z, r1.z, r4.w, r5.w  // ::V<0>
            mov r4.w, -c163.y
          else

#line 2559
            if_eq c10.x, -r6.y

#line 2562
              rcp r5.w, c45.x
              pow r1.z, r9.w, r5.w  // ::V<0>
              mov r4.w, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r5.w, -r9.w, -c163.y
                rsq r6.y, r9.w
                rcp r6.y, r6.y
                mul r6.y, r6.y, -c141.w  // ::Transfer<0>
                cmp r5.w, r5.w, -c163_abs.y, -c163_abs.x
                cmp r5.w, r9.w, r5.w, c95.z
                add r6.w, r9.w, c103.y
                log r6.w, r6.w
                mad r6.w, r6.w, c103.z, c103.w  // ::Transfer<0>
                cmp r1.z, r5.w, r6.w, r6.y  // ::Transfer<0>
                mov r4.w, -c163.y
              else

#line 2582
                mov r7.x, c10.x  // ::Companding<0>
                add r5.w, r7.x, c62.x
                cmp r4.w, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r5.w, r9.w, c101.w
                add r6.y, r5.w, -c70.z
                max r7.x, r6.y, c95.z  // ::a<0>
                mad r5.w, r5.w, -c70.y, c70.x  // ::b<0>
                rcp r5.w, r5.w
                mul r5.w, r5.w, r7.x
                pow r6.y, r5.w, c146.w
                mul r1.z, r6.y, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp oC0.z, -r4.w, r9.w, r1.z  // ::main<2>

#line 2943
          mov oC0.w, r7.w  // ::main<3>
        else
          mov oC0, c95.z  // ::main<0,1,2,3>
        endif
        mov r3.x, r1.w  // ::input4<0>
        mov r3.yz, r2  // ::input4<1,2>
        mov r2.yw, r1.xxzy  // ::input3<0,1>
      endif
    endif
    if_ne r0.w, -r0.w

#line 3020
    else

#line 2951
      mov r1.x, c0.x  // ::Model<0>
      add r7, r1.x, c176
      cmp r8, -r7_abs, c163_abs.y, c163_abs.x

#line 2948
      add r0.w, r8.y, r8.x
      cmp r0.w, -r0.w, c163_abs.x, c163_abs.y
      add r0.w, r8.z, r0.w
      cmp r0.w, -r0.w, c163_abs.x, c163_abs.y
      add r0.w, r8.w, r0.w
      cmp r0.w, -r0.w, c163_abs.x, c163_abs.y

#line 2951
      add r1.yz, r1.x, c104
      cmp r1.yz, -r1_abs.xzyw, c163_abs.y, c163_abs.x

#line 2948
      add r0.w, r0.w, r1.z
      cmp r0.w, -r0.w, c163_abs.x, c163_abs.y
      add r0.w, r1.y, r0.w

#line 2945
      if_lt -r0.w, c95.z

#line 2986
        mov r2.z, -c163.y
        cmp r1.zw, -r7_abs.w, r2, -c163.y  // ::input6<0,2>
        cmp r1.zw, -r7_abs.z, r2.xyyz, r1  // ::input6<0,2>
        cmp r1.zw, -r7_abs.y, r2.xyyz, r1  // ::input6<0,2>
        cmp r1.zw, -r7_abs.x, r2.xyyw, r1  // ::input6<0,2>

#line 2738
        if_eq r1.x, -c53.z

#line 1502
          mul r0.w, r1.z, c90.w  // ::a<0>
          rsq r0.w, r0.w
          rcp r0.w, r0.w
          mul r0.w, r0.w, c104.w
          rcp r0.w, r0.w
          mul r0.w, r0.w, r1.w
          pow r2.z, r0.w, c105.x  // ::t<0>

#line 1513
          mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
          mad r0.w, r6.y, c116.x, c116.y
          frc r0.w, r0.w
          mad r0.w, r0.w, c86.x, c86.y
          sincos r7.x, r0.w
          add r0.w, r7.x, c105.y

#line 1507
          mul r0.w, r0.w, c105.z
          rcp r2.z, r2.z
          mul r0.w, r0.w, r2.z  // ::p1<0>
          mad r2.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
          frc r4.w, r6.w
          mad r4.w, r4.w, c86.x, c86.y
          sincos r7.xy, r4.w
          if_ge r7_abs.y, r7_abs.x
            rcp r4.w, r7.y
            mul r5.w, r4.w, r7.x
            mul r6.y, r5.w, c105.w
            mad r4.w, r0.w, r4.w, r6.y
            add r4.w, r4.w, c106.z
            rcp r4.w, r4.w
            mul r8.y, r2.z, r4.w  // ::cb<0>
            mul r8.x, r5.w, r8.y  // ::ca<0>
          else

#line 1521
            rcp r4.w, r7.x
            mad r0.w, r0.w, r4.w, c105.w
            mul r4.w, r4.w, r7.y
            mad r0.w, r4.w, -c106.w, r0.w
            rcp r0.w, r0.w
            mul r8.x, r0.w, r2.z  // ::ca<0>
            mul r8.y, r4.w, r8.x  // ::cb<0>
          endif

#line 552
          mul r6.yw, r8.x, c108.xxzy
          mad r6.yw, r2.z, c108.xxzz, r6
          mad r6.yw, r8.y, c108.xxzw, r6  // ::x<0>, ::y<0>
          mul r0.w, r8.x, c112.x
          mad r0.w, r2.z, c112.y, r0.w
          mad r0.w, r8.y, c112.z, r0.w  // ::z<0>

#line 1485
          add r6.yw, r6, c112.w
          mul r7.xy, r6_abs.ywzw, c113.x
          add r6.yw, -r6_abs, c155.z
          rcp r2.z, r6.y
          mul r2.z, r2.z, r7.x
          pow r4.w, r2.z, c113.y
          rcp r2.z, r6.w
          mul r2.z, r2.z, r7.y
          pow r5.w, r2.z, c113.y
          add r0.w, r0.w, c112.w
          mul r2.z, r0_abs.w, c113.x
          add r0.w, -r0_abs.w, c155.z
          rcp r0.w, r0.w
          mul r0.w, r0.w, r2.z
          pow r2.z, r0.w, c113.y

#line 553
          mul r7.xyz, r5.w, c114
          mad r7.xyz, r4.w, c139, r7  // ::x<0>, ::y<0>
          mad r0.w, r2.z, c165.w, r7.z  // ::z<0>
          mul r8, r7.xyxy, c110
          add r6.yw, r8, r8.xxzz
          mad r6.yw, r0.w, c113.xzzw, r6  // ::x<0>, ::y<0>
          mul r7.xy, r7, c109
          add r2.z, r7.y, r7.x
          mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
          mul r7, r6.ywyw, c138
          add r7.xy, r7.ywzw, r7.xzzw
          mad r7.xy, r0.w, c109.zwzw, r7  // ::x<0>, ::y<0>
          mul r6.yw, r6, c140.xxzy
          add r2.z, r6.w, r6.y
          mad r0.w, r0.w, c139.w, r2.z  // ::z<0>
          mul r7.yzw, r7.y, c24.xxyz
          mad r7.xyz, r7.x, c23, r7.yzww
          mad r7.xyz, r0.w, c25, r7  // ::x<0>, ::y<0>, ::z<0>

#line 2738
          mov r1.y, -c163.y
        else
          if_eq r1.x, c141.z

#line 1502
            mul r0.w, r1.z, c90.w  // ::a<0>
            rsq r0.w, r0.w
            rcp r0.w, r0.w
            mul r0.w, r0.w, c104.w
            rcp r0.w, r0.w
            mul r0.w, r0.w, r1.w
            pow r2.z, r0.w, c105.x  // ::t<0>

#line 1513
            mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
            mad r0.w, r6.y, c116.x, c116.y
            frc r0.w, r0.w
            mad r0.w, r0.w, c86.x, c86.y
            sincos r8.x, r0.w
            add r0.w, r8.x, c105.y

#line 1507
            mul r0.w, r0.w, c105.z
            rcp r2.z, r2.z
            mul r0.w, r0.w, r2.z  // ::p1<0>
            mad r2.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
            frc r4.w, r6.w
            mad r4.w, r4.w, c86.x, c86.y
            sincos r8.xy, r4.w
            if_ge r8_abs.y, r8_abs.x
              rcp r4.w, r8.y
              mul r5.w, r4.w, r8.x
              mul r6.y, r5.w, c105.w
              mad r4.w, r0.w, r4.w, r6.y
              add r4.w, r4.w, c106.z
              rcp r4.w, r4.w
              mul r9.y, r2.z, r4.w  // ::cb<0>
              mul r9.x, r5.w, r9.y  // ::ca<0>
            else

#line 1521
              rcp r4.w, r8.x
              mad r0.w, r0.w, r4.w, c105.w
              mul r4.w, r4.w, r8.y
              mad r0.w, r4.w, -c106.w, r0.w
              rcp r0.w, r0.w
              mul r9.x, r0.w, r2.z  // ::ca<0>
              mul r9.y, r4.w, r9.x  // ::cb<0>
            endif

#line 552
            mul r6.yw, r9.x, c108.xxzy
            mad r6.yw, r2.z, c108.xxzz, r6
            mad r6.yw, r9.y, c108.xxzw, r6  // ::x<0>, ::y<0>
            mul r0.w, r9.x, c112.x
            mad r0.w, r2.z, c112.y, r0.w
            mad r0.w, r9.y, c112.z, r0.w  // ::z<0>

#line 1485
            add r6.yw, r6, c112.w
            mul r8.xy, r6_abs.ywzw, c113.x
            add r6.yw, -r6_abs, c155.z
            rcp r2.z, r6.y
            mul r2.z, r2.z, r8.x
            pow r4.w, r2.z, c113.y
            rcp r2.z, r6.w
            mul r2.z, r2.z, r8.y
            pow r5.w, r2.z, c113.y
            add r0.w, r0.w, c112.w
            mul r2.z, r0_abs.w, c113.x
            add r0.w, -r0_abs.w, c155.z
            rcp r0.w, r0.w
            mul r0.w, r0.w, r2.z
            pow r2.z, r0.w, c113.y

#line 553
            mul r8.xyz, r5.w, c114
            mad r8.xyz, r4.w, c139, r8  // ::x<0>, ::y<0>
            mad r0.w, r2.z, c165.w, r8.z  // ::z<0>
            mul r9, r8.xyxy, c110
            add r6.yw, r9, r9.xxzz
            mad r6.yw, r0.w, c113.xzzw, r6  // ::x<0>, ::y<0>
            mul r8.xy, r8, c109
            add r2.z, r8.y, r8.x
            mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
            mul r8, r6.ywyw, c138
            add r8.xy, r8.ywzw, r8.xzzw
            mad r8.xy, r0.w, c109.zwzw, r8  // ::x<0>, ::y<0>
            mul r6.yw, r6, c140.xxzy
            add r2.z, r6.w, r6.y
            mad r0.w, r0.w, c139.w, r2.z  // ::z<0>
            mul r8.yzw, r8.y, c24.xxyz
            mad r8.xyz, r8.x, c23, r8.yzww
            mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2739
            mov r1.y, -c163.y
          else
            if_eq r1.x, -c94.z

#line 1502
              mul r0.w, r1.z, c90.w  // ::a<0>
              rsq r0.w, r0.w
              rcp r0.w, r0.w
              mul r0.w, r0.w, c104.w
              rcp r0.w, r0.w
              mul r0.w, r0.w, r1.w
              pow r2.z, r0.w, c105.x  // ::t<0>

#line 1513
              mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
              mad r0.w, r6.y, c116.x, c116.y
              frc r0.w, r0.w
              mad r0.w, r0.w, c86.x, c86.y
              sincos r8.x, r0.w
              add r0.w, r8.x, c105.y

#line 1507
              mul r0.w, r0.w, c105.z
              rcp r2.z, r2.z
              mul r0.w, r0.w, r2.z  // ::p1<0>
              mad r2.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
              frc r4.w, r6.w
              mad r4.w, r4.w, c86.x, c86.y
              sincos r8.xy, r4.w
              if_ge r8_abs.y, r8_abs.x
                rcp r4.w, r8.y
                mul r5.w, r4.w, r8.x
                mul r6.y, r5.w, c105.w
                mad r4.w, r0.w, r4.w, r6.y
                add r4.w, r4.w, c106.z
                rcp r4.w, r4.w
                mul r9.y, r2.z, r4.w  // ::cb<0>
                mul r9.x, r5.w, r9.y  // ::ca<0>
              else

#line 1521
                rcp r4.w, r8.x
                mad r0.w, r0.w, r4.w, c105.w
                mul r4.w, r4.w, r8.y
                mad r0.w, r4.w, -c106.w, r0.w
                rcp r0.w, r0.w
                mul r9.x, r0.w, r2.z  // ::ca<0>
                mul r9.y, r4.w, r9.x  // ::cb<0>
              endif

#line 552
              mul r6.yw, r9.x, c108.xxzy
              mad r6.yw, r2.z, c108.xxzz, r6
              mad r6.yw, r9.y, c108.xxzw, r6  // ::x<0>, ::y<0>
              mul r0.w, r9.x, c112.x
              mad r0.w, r2.z, c112.y, r0.w
              mad r0.w, r9.y, c112.z, r0.w  // ::z<0>

#line 1485
              add r6.yw, r6, c112.w
              mul r8.xy, r6_abs.ywzw, c113.x
              add r6.yw, -r6_abs, c155.z
              rcp r2.z, r6.y
              mul r2.z, r2.z, r8.x
              pow r4.w, r2.z, c113.y
              rcp r2.z, r6.w
              mul r2.z, r2.z, r8.y
              pow r5.w, r2.z, c113.y
              add r0.w, r0.w, c112.w
              mul r2.z, r0_abs.w, c113.x
              add r0.w, -r0_abs.w, c155.z
              rcp r0.w, r0.w
              mul r0.w, r0.w, r2.z
              pow r2.z, r0.w, c113.y

#line 553
              mul r8.xyz, r5.w, c114
              mad r8.xyz, r4.w, c139, r8  // ::x<0>, ::y<0>
              mad r0.w, r2.z, c165.w, r8.z  // ::z<0>
              mul r9, r8.xyxy, c110
              add r6.yw, r9, r9.xxzz
              mad r6.yw, r0.w, c113.xzzw, r6  // ::x<0>, ::y<0>
              mul r8.xy, r8, c109
              add r2.z, r8.y, r8.x
              mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
              mul r8, r6.ywyw, c138
              add r8.xy, r8.ywzw, r8.xzzw
              mad r8.xy, r0.w, c109.zwzw, r8  // ::x<0>, ::y<0>
              mul r6.yw, r6, c140.xxzy
              add r2.z, r6.w, r6.y
              mad r0.w, r0.w, c139.w, r2.z  // ::z<0>
              mul r8.yzw, r8.y, c24.xxyz
              mad r8.xyz, r8.x, c23, r8.yzww
              mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2740
              mov r1.y, -c163.y
            else
              if_eq r1.x, -c54.z

#line 1502
                mul r0.w, r1.z, c90.w  // ::a<0>
                rsq r0.w, r0.w
                rcp r0.w, r0.w
                mul r0.w, r0.w, c104.w
                rcp r0.w, r0.w
                mul r0.w, r0.w, r1.w
                pow r2.z, r0.w, c105.x  // ::t<0>

#line 1513
                mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
                mad r0.w, r6.y, c116.x, c116.y
                frc r0.w, r0.w
                mad r0.w, r0.w, c86.x, c86.y
                sincos r8.x, r0.w
                add r0.w, r8.x, c105.y

#line 1507
                mul r0.w, r0.w, c105.z
                rcp r2.z, r2.z
                mul r0.w, r0.w, r2.z  // ::p1<0>
                mad r2.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
                frc r4.w, r6.w
                mad r4.w, r4.w, c86.x, c86.y
                sincos r8.xy, r4.w
                if_ge r8_abs.y, r8_abs.x
                  rcp r4.w, r8.y
                  mul r5.w, r4.w, r8.x
                  mul r6.y, r5.w, c105.w
                  mad r4.w, r0.w, r4.w, r6.y
                  add r4.w, r4.w, c106.z
                  rcp r4.w, r4.w
                  mul r9.y, r2.z, r4.w  // ::cb<0>
                  mul r9.x, r5.w, r9.y  // ::ca<0>
                else

#line 1521
                  rcp r4.w, r8.x
                  mad r0.w, r0.w, r4.w, c105.w
                  mul r4.w, r4.w, r8.y
                  mad r0.w, r4.w, -c106.w, r0.w
                  rcp r0.w, r0.w
                  mul r9.x, r0.w, r2.z  // ::ca<0>
                  mul r9.y, r4.w, r9.x  // ::cb<0>
                endif

#line 552
                mul r6.yw, r9.x, c108.xxzy
                mad r6.yw, r2.z, c108.xxzz, r6
                mad r6.yw, r9.y, c108.xxzw, r6  // ::x<0>, ::y<0>
                mul r0.w, r9.x, c112.x
                mad r0.w, r2.z, c112.y, r0.w
                mad r0.w, r9.y, c112.z, r0.w  // ::z<0>

#line 1485
                add r6.yw, r6, c112.w
                mul r8.xy, r6_abs.ywzw, c113.x
                add r6.yw, -r6_abs, c155.z
                rcp r2.z, r6.y
                mul r2.z, r2.z, r8.x
                pow r4.w, r2.z, c113.y
                rcp r2.z, r6.w
                mul r2.z, r2.z, r8.y
                pow r5.w, r2.z, c113.y
                add r0.w, r0.w, c112.w
                mul r2.z, r0_abs.w, c113.x
                add r0.w, -r0_abs.w, c155.z
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.z
                pow r2.z, r0.w, c113.y

#line 553
                mul r8.xyz, r5.w, c114
                mad r8.xyz, r4.w, c139, r8  // ::x<0>, ::y<0>
                mad r0.w, r2.z, c165.w, r8.z  // ::z<0>
                mul r9, r8.xyxy, c110
                add r6.yw, r9, r9.xxzz
                mad r6.yw, r0.w, c113.xzzw, r6  // ::x<0>, ::y<0>
                mul r8.xy, r8, c109
                add r2.z, r8.y, r8.x
                mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                mul r8, r6.ywyw, c138
                add r8.xy, r8.ywzw, r8.xzzw
                mad r8.xy, r0.w, c109.zwzw, r8  // ::x<0>, ::y<0>
                mul r6.yw, r6, c140.xxzy
                add r2.z, r6.w, r6.y
                mad r0.w, r0.w, c139.w, r2.z  // ::z<0>
                mul r8.yzw, r8.y, c24.xxyz
                mad r8.xyz, r8.x, c23, r8.yzww
                mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2742
                mov r1.y, -c163.y
              else
                if_eq r1.x, -c54.w

#line 1502
                  mul r0.w, r1.z, c90.w  // ::a<0>
                  rsq r0.w, r0.w
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, c104.w
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r1.w
                  pow r2.z, r0.w, c105.x  // ::t<0>

#line 1513
                  mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
                  mad r0.w, r6.y, c116.x, c116.y
                  frc r0.w, r0.w
                  mad r0.w, r0.w, c86.x, c86.y
                  sincos r8.x, r0.w
                  add r0.w, r8.x, c105.y

#line 1507
                  mul r0.w, r0.w, c105.z
                  rcp r2.z, r2.z
                  mul r0.w, r0.w, r2.z  // ::p1<0>
                  mad r2.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
                  frc r4.w, r6.w
                  mad r4.w, r4.w, c86.x, c86.y
                  sincos r8.xy, r4.w
                  if_ge r8_abs.y, r8_abs.x
                    rcp r4.w, r8.y
                    mul r5.w, r4.w, r8.x
                    mul r6.y, r5.w, c105.w
                    mad r4.w, r0.w, r4.w, r6.y
                    add r4.w, r4.w, c106.z
                    rcp r4.w, r4.w
                    mul r9.y, r2.z, r4.w  // ::cb<0>
                    mul r9.x, r5.w, r9.y  // ::ca<0>
                  else

#line 1521
                    rcp r4.w, r8.x
                    mad r0.w, r0.w, r4.w, c105.w
                    mul r4.w, r4.w, r8.y
                    mad r0.w, r4.w, -c106.w, r0.w
                    rcp r0.w, r0.w
                    mul r9.x, r0.w, r2.z  // ::ca<0>
                    mul r9.y, r4.w, r9.x  // ::cb<0>
                  endif

#line 552
                  mul r6.yw, r9.x, c108.xxzy
                  mad r6.yw, r2.z, c108.xxzz, r6
                  mad r6.yw, r9.y, c108.xxzw, r6  // ::x<0>, ::y<0>
                  mul r0.w, r9.x, c112.x
                  mad r0.w, r2.z, c112.y, r0.w
                  mad r0.w, r9.y, c112.z, r0.w  // ::z<0>

#line 1485
                  add r6.yw, r6, c112.w
                  mul r8.xy, r6_abs.ywzw, c113.x
                  add r6.yw, -r6_abs, c155.z
                  rcp r2.z, r6.y
                  mul r2.z, r2.z, r8.x
                  pow r4.w, r2.z, c113.y
                  rcp r2.z, r6.w
                  mul r2.z, r2.z, r8.y
                  pow r5.w, r2.z, c113.y
                  add r0.w, r0.w, c112.w
                  mul r2.z, r0_abs.w, c113.x
                  add r0.w, -r0_abs.w, c155.z
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r2.z
                  pow r2.z, r0.w, c113.y

#line 553
                  mul r8.xyz, r5.w, c114
                  mad r8.xyz, r4.w, c139, r8  // ::x<0>, ::y<0>
                  mad r0.w, r2.z, c165.w, r8.z  // ::z<0>
                  mul r9, r8.xyxy, c110
                  add r6.yw, r9, r9.xxzz
                  mad r6.yw, r0.w, c113.xzzw, r6  // ::x<0>, ::y<0>
                  mul r8.xy, r8, c109
                  add r2.z, r8.y, r8.x
                  mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                  mul r8, r6.ywyw, c138
                  add r8.xy, r8.ywzw, r8.xzzw
                  mad r8.xy, r0.w, c109.zwzw, r8  // ::x<0>, ::y<0>
                  mul r6.yw, r6, c140.xxzy
                  add r2.z, r6.w, r6.y
                  mad r0.w, r0.w, c139.w, r2.z  // ::z<0>
                  mul r8.yzw, r8.y, c24.xxyz
                  mad r8.xyz, r8.x, c23, r8.yzww
                  mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2743
                  mov r1.y, -c163.y
                else
                  if_eq r1.x, -c36.x

#line 1502
                    mul r0.w, r1.z, c90.w  // ::a<0>
                    rsq r0.w, r0.w
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, c104.w
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, r1.w
                    pow r1.w, r0.w, c105.x  // ::t<0>

#line 1513
                    mad r6.yw, r2.x, c177.xxzy, c177.xzzw

#line 1503
                    mad r0.w, r6.y, c116.x, c116.y
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c86.x, c86.y
                    sincos r8.x, r0.w
                    add r0.w, r8.x, c105.y

#line 1507
                    mul r0.w, r0.w, c105.z
                    rcp r1.w, r1.w
                    mul r0.w, r0.w, r1.w  // ::p1<0>
                    mad r1.z, r1.z, c106.x, c106.y  // ::p2<0>

#line 1513
                    frc r1.w, r6.w
                    mad r1.w, r1.w, c86.x, c86.y
                    sincos r8.xy, r1.w
                    if_ge r8_abs.y, r8_abs.x
                      rcp r1.w, r8.y
                      mul r2.z, r1.w, r8.x
                      mul r4.w, r2.z, c105.w
                      mad r1.w, r0.w, r1.w, r4.w
                      add r1.w, r1.w, c106.z
                      rcp r1.w, r1.w
                      mul r9.y, r1.w, r1.z  // ::cb<0>
                      mul r9.x, r2.z, r9.y  // ::ca<0>
                    else

#line 1521
                      rcp r1.w, r8.x
                      mad r0.w, r0.w, r1.w, c105.w
                      mul r1.w, r1.w, r8.y
                      mad r0.w, r1.w, -c106.w, r0.w
                      rcp r0.w, r0.w
                      mul r9.x, r0.w, r1.z  // ::ca<0>
                      mul r9.y, r1.w, r9.x  // ::cb<0>
                    endif

#line 552
                    mul r6.yw, r9.x, c108.xxzy
                    mad r6.yw, r1.z, c108.xxzz, r6
                    mad r6.yw, r9.y, c108.xxzw, r6  // ::x<0>, ::y<0>
                    mul r0.w, r9.x, c112.x
                    mad r0.w, r1.z, c112.y, r0.w
                    mad r0.w, r9.y, c112.z, r0.w  // ::z<0>

#line 1485
                    add r1.zw, r6.xyyw, c112.w
                    mul r6.yw, r1_abs.xzzw, c113.x
                    add r1.zw, -r1_abs, c155.z
                    rcp r1.z, r1.z
                    mul r1.z, r1.z, r6.y
                    pow r2.z, r1.z, c113.y
                    rcp r1.z, r1.w
                    mul r1.z, r1.z, r6.w
                    pow r4.w, r1.z, c113.y
                    add r0.w, r0.w, c112.w
                    mul r1.z, r0_abs.w, c113.x
                    add r0.w, -r0_abs.w, c155.z
                    rcp r0.w, r0.w
                    mul r0.w, r0.w, r1.z
                    pow r1.z, r0.w, c113.y

#line 553
                    mul r8.xyz, r4.w, c114
                    mad r8.xyz, r2.z, c139, r8  // ::x<0>, ::y<0>
                    mad r0.w, r1.z, c165.w, r8.z  // ::z<0>
                    mul r9, r8.xyxy, c110
                    add r1.zw, r9.xyyw, r9.xyxz
                    mad r1.zw, r0.w, c113, r1  // ::x<0>, ::y<0>
                    mul r6.yw, r8.xxzy, c109.xxzy
                    add r2.z, r6.w, r6.y
                    mad r0.w, r0.w, c114.w, r2.z  // ::z<0>
                    mul r8, r1.zwzw, c138
                    add r6.yw, r8, r8.xxzz
                    mad r6.yw, r0.w, c109.xzzw, r6  // ::x<0>, ::y<0>
                    mul r1.zw, r1, c140.xyxy
                    add r1.z, r1.w, r1.z
                    mad r0.w, r0.w, c139.w, r1.z  // ::z<0>
                    mul r8.xyz, r6.w, c24
                    mad r8.xyz, r6.y, c23, r8
                    mad r7.xyz, r0.w, c25, r8  // ::x<0>, ::y<0>, ::z<0>

#line 2744
                  else
                    mov r7.xyz, c95.z
                  endif
                endif
              endif
            endif
          endif
        endif
        cmp r1.yzw, -r1.y, c95.z, r7.xxyz  // ::TLrgb<0,1,2>

#line 2551
        if_eq c10.x, r0.z

#line 2554
          add r0.w, -r1.y, c47.x
          mul r2.z, r1.y, c48.x
          mov r6.y, c163.y  // ::Minimum3<64>
          rcp r4.w, c45.x
          pow r5.w, r1.y, r4.w
          lrp r4.w, r5.w, -r6.y, -c46.x
          cmp r0.w, r0.w, r2.z, r4.w  // ::V<0>
          mov r2.z, -c163.y
        else

#line 2559
          mov r6.y, c163.y  // ::Minimum3<64>
          if_eq c10.x, -r6.y

#line 2562
            rcp r4.w, c45.x
            pow r0.w, r1.y, r4.w  // ::V<0>
            mov r2.z, -c163.y
          else

#line 2567
            if_eq c10.x, -r6.x

#line 2575
              add r4.w, -r1.y, -c163.y
              rsq r5.w, r1.y
              rcp r5.w, r5.w
              mul r5.w, r5.w, -c141.w  // ::Transfer<0>
              cmp r4.w, r4.w, -c163_abs.y, -c163_abs.x
              cmp r4.w, r1.y, r4.w, c95.z
              add r6.y, r1.y, c103.y
              log r6.y, r6.y
              mad r6.y, r6.y, c103.z, c103.w  // ::Transfer<0>
              cmp r0.w, r4.w, r6.y, r5.w  // ::Transfer<0>
              mov r2.z, -c163.y
            else

#line 2582
              mov r7.x, c10.x  // ::Companding<0>
              add r4.w, r7.x, c62.x
              cmp r2.z, -r4_abs.w, c163_abs.y, c163_abs.x

#line 2591
              pow r4.w, r1.y, c101.w
              add r5.w, r4.w, -c70.z
              max r6.y, r5.w, c95.z  // ::a<0>
              mad r4.w, r4.w, -c70.y, c70.x  // ::b<0>
              rcp r4.w, r4.w
              mul r4.w, r4.w, r6.y
              pow r5.w, r4.w, c146.w
              mul r0.w, r5.w, c104.x  // ::Transfer<0>
            endif
          endif
        endif
        cmp r7.x, -r2.z, r1.y, r0.w  // ::Transfer<0>

#line 2551
        if_eq c10.x, r0.z

#line 2554
          add r0.w, -r1.z, c47.x
          mul r1.y, r1.z, c48.x
          mov r6.y, c163.y  // ::Minimum3<64>
          rcp r2.z, c45.x
          pow r4.w, r1.z, r2.z
          lrp r2.z, r4.w, -r6.y, -c46.x
          cmp r0.w, r0.w, r1.y, r2.z  // ::V<0>
          mov r1.y, -c163.y
        else

#line 2559
          mov r6.y, c163.y  // ::Minimum3<64>
          if_eq c10.x, -r6.y

#line 2562
            rcp r2.z, c45.x
            pow r0.w, r1.z, r2.z  // ::V<0>
            mov r1.y, -c163.y
          else

#line 2567
            if_eq c10.x, -r6.x

#line 2575
              add r2.z, -r1.z, -c163.y
              rsq r4.w, r1.z
              rcp r4.w, r4.w
              mul r4.w, r4.w, -c141.w  // ::Transfer<0>
              cmp r2.z, r2.z, -c163_abs.y, -c163_abs.x
              cmp r2.z, r1.z, r2.z, c95.z
              add r5.w, r1.z, c103.y
              log r5.w, r5.w
              mad r5.w, r5.w, c103.z, c103.w  // ::Transfer<0>
              cmp r0.w, r2.z, r5.w, r4.w  // ::Transfer<0>
              mov r1.y, -c163.y
            else

#line 2582
              mov r8.x, c10.x  // ::Companding<0>
              add r2.z, r8.x, c62.x
              cmp r1.y, -r2_abs.z, c163_abs.y, c163_abs.x

#line 2591
              pow r2.z, r1.z, c101.w
              add r4.w, r2.z, -c70.z
              max r5.w, r4.w, c95.z  // ::a<0>
              mad r2.z, r2.z, -c70.y, c70.x  // ::b<0>
              rcp r2.z, r2.z
              mul r2.z, r2.z, r5.w
              pow r4.w, r2.z, c146.w
              mul r0.w, r4.w, c104.x  // ::Transfer<0>
            endif
          endif
        endif
        cmp r7.y, -r1.y, r1.z, r0.w  // ::Transfer<0>

#line 2551
        if_eq c10.x, r0.z

#line 2554
          add r0.w, -r1.w, c47.x
          mul r1.y, r1.w, c48.x
          mov r6.y, c163.y  // ::Minimum3<64>
          rcp r1.z, c45.x
          pow r2.z, r1.w, r1.z
          lrp r1.z, r2.z, -r6.y, -c46.x
          cmp r0.w, r0.w, r1.y, r1.z  // ::V<0>
          mov r1.y, -c163.y
        else

#line 2559
          mov r6.y, c163.y  // ::Minimum3<64>
          if_eq c10.x, -r6.y

#line 2562
            rcp r1.z, c45.x
            pow r0.w, r1.w, r1.z  // ::V<0>
            mov r1.y, -c163.y
          else

#line 2567
            if_eq c10.x, -r6.x

#line 2575
              add r1.z, -r1.w, -c163.y
              rsq r2.z, r1.w
              rcp r2.z, r2.z
              mul r2.z, r2.z, -c141.w  // ::Transfer<0>
              cmp r1.z, r1.z, -c163_abs.y, -c163_abs.x
              cmp r1.z, r1.w, r1.z, c95.z
              add r4.w, r1.w, c103.y
              log r4.w, r4.w
              mad r4.w, r4.w, c103.z, c103.w  // ::Transfer<0>
              cmp r0.w, r1.z, r4.w, r2.z  // ::Transfer<0>
              mov r1.y, -c163.y
            else

#line 2582
              mov r8.x, c10.x  // ::Companding<0>
              add r1.z, r8.x, c62.x
              cmp r1.y, -r1_abs.z, c163_abs.y, c163_abs.x

#line 2591
              pow r2.z, r1.w, c101.w
              add r1.z, r2.z, -c70.z
              max r4.w, r1.z, c95.z  // ::a<0>
              mad r1.z, r2.z, -c70.y, c70.x  // ::b<0>
              rcp r1.z, r1.z
              mul r1.z, r1.z, r4.w
              pow r2.z, r1.z, c146.w
              mul r0.w, r2.z, c104.x  // ::Transfer<0>
            endif
          endif
        endif
        cmp r7.z, -r1.y, r1.w, r0.w  // ::Transfer<0>

#line 3001
      else
        if_ge c0.x, r0.y
          mov r0.w, c141.w
          mad r8, r3.xwyz, c5.x, -r0.w
          frc r9, r8
          add r8, r8, -r9
          rcp r0.y, c5.x
          mul r8, r0.y, r8
          cmp r3, -c5.x, r3.xwyz, r8  // ::input4<0,3,1,2>

#line 751
          add r8, -r3, -c163.y
          mul r1.yzw, r8.y, r8.xxzw  // ::r<0>, ::g<0>, ::b<0>

#line 2732
          add r9.xyz, r1.x, c115

#line 774
          mad r8.xzw, r8, r8.y, r3.y  // ::c<0>, ::m<0>, ::y<0>

#line 2015
          mul r10.xyz, r3.xzww, r8.y  // ::r<0>, ::g<0>, ::b<0>

#line 2038
          lrp r11.xyz, r3.xzww, -c163.y, r3.y  // ::r<0>, ::g<0>, ::b<0>

#line 2732
          cmp r3.xyz, -r9_abs.y, r10, r11  // ::TLrgb<0,1,2>
          cmp r3.xyz, -r9_abs.x, r8.xzww, r3  // ::TLrgb<0,1,2>
          cmp r1.yzw, -r0_abs.x, r1, r3.xxyz  // ::TLrgb<0,1,2>
          cmp r0.y, -r9_abs.z, -c163_abs.y, -c163_abs.x
          cmp r0.y, -r9_abs.y, c163.y, r0.y
          cmp r0.y, -r9_abs.x, c163.y, r0.y
          cmp r0.x, -r0_abs.x, c163.y, r0.y
          cmp r0.xyw, r0.x, c95.z, r1.yzzw  // ::TLrgb<0,1,2>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r1.y, -r0.x, c47.x
            mul r1.z, r0.x, c48.x
            mov r3.y, c163.y  // ::Minimum3<64>
            rcp r1.w, c45.x
            pow r2.z, r0.x, r1.w
            lrp r1.w, r2.z, -r3.y, -c46.x
            cmp r1.y, r1.y, r1.z, r1.w  // ::V<0>
            mov r1.z, -c163.y
          else

#line 2559
            mov r3.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r3.y

#line 2562
              rcp r2.z, c45.x
              pow r1.y, r0.x, r2.z  // ::V<0>
              mov r1.z, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r1.w, -r0.x, -c163.y
                rsq r2.z, r0.x
                rcp r2.z, r2.z
                mul r2.z, r2.z, -c141.w  // ::Transfer<0>
                cmp r1.w, r1.w, -c163_abs.y, -c163_abs.x
                cmp r1.w, r0.x, r1.w, c95.z
                add r3.x, r0.x, c103.y
                log r3.x, r3.x
                mad r3.x, r3.x, c103.z, c103.w  // ::Transfer<0>
                cmp r1.y, r1.w, r3.x, r2.z  // ::Transfer<0>
                mov r1.z, -c163.y
              else

#line 2582
                mov r3.x, c10.x  // ::Companding<0>
                add r1.w, r3.x, c62.x
                cmp r1.z, -r1_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r1.w, r0.x, c101.w
                add r2.z, r1.w, -c70.z
                max r3.x, r2.z, c95.z  // ::a<0>
                mad r1.w, r1.w, -c70.y, c70.x  // ::b<0>
                rcp r1.w, r1.w
                mul r1.w, r1.w, r3.x
                pow r2.z, r1.w, c146.w
                mul r1.y, r2.z, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.x, -r1.z, r0.x, r1.y  // ::Transfer<0>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r0.x, -r0.y, c47.x
            mul r1.y, r0.y, c48.x
            mov r3.y, c163.y  // ::Minimum3<64>
            rcp r1.z, c45.x
            pow r2.z, r0.y, r1.z
            lrp r1.z, r2.z, -r3.y, -c46.x
            cmp r1.y, r0.x, r1.y, r1.z  // ::V<0>
            mov r0.x, -c163.y
          else

#line 2559
            mov r3.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r3.y

#line 2562
              rcp r2.z, c45.x
              pow r1.y, r0.y, r2.z  // ::V<0>
              mov r0.x, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r1.z, -r0.y, -c163.y
                rsq r1.w, r0.y
                rcp r1.w, r1.w
                mul r1.w, r1.w, -c141.w  // ::Transfer<0>
                cmp r1.z, r1.z, -c163_abs.y, -c163_abs.x
                cmp r1.z, r0.y, r1.z, c95.z
                add r2.z, r0.y, c103.y
                log r2.z, r2.z
                mad r2.z, r2.z, c103.z, c103.w  // ::Transfer<0>
                cmp r1.y, r1.z, r2.z, r1.w  // ::Transfer<0>
                mov r0.x, -c163.y
              else

#line 2582
                mov r3.x, c10.x  // ::Companding<0>
                add r1.z, r3.x, c62.x
                cmp r0.x, -r1_abs.z, c163_abs.y, c163_abs.x

#line 2591
                pow r1.z, r0.y, c101.w
                add r1.w, r1.z, -c70.z
                max r2.z, r1.w, c95.z  // ::a<0>
                mad r1.z, r1.z, -c70.y, c70.x  // ::b<0>
                rcp r1.z, r1.z
                mul r1.z, r1.z, r2.z
                pow r2.z, r1.z, c146.w
                mul r1.y, r2.z, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.y, -r0.x, r0.y, r1.y  // ::Transfer<0>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r0.x, -r0.w, c47.x
            mul r0.y, r0.w, c48.x
            mov r1.y, c163.y  // ::Minimum3<64>
            rcp r1.z, c45.x
            pow r2.z, r0.w, r1.z
            lrp r3.x, r2.z, -r1.y, -c46.x
            cmp r1.y, r0.x, r0.y, r3.x  // ::V<0>
            mov r0.x, -c163.y
          else

#line 2559
            mov r0.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r0.y

#line 2562
              rcp r0.y, c45.x
              pow r1.y, r0.w, r0.y  // ::V<0>
              mov r0.x, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r0.y, -r0.w, -c163.y
                rsq r1.z, r0.w
                rcp r1.z, r1.z
                mul r1.z, r1.z, -c141.w  // ::Transfer<0>
                cmp r0.y, r0.y, -c163_abs.y, -c163_abs.x
                cmp r0.y, r0.w, r0.y, c95.z
                add r1.w, r0.w, c103.y
                log r1.w, r1.w
                mad r1.w, r1.w, c103.z, c103.w  // ::Transfer<0>
                cmp r1.y, r0.y, r1.w, r1.z  // ::Transfer<0>
                mov r0.x, -c163.y
              else

#line 2582
                mov r3.x, c10.x  // ::Companding<0>
                add r0.y, r3.x, c62.x
                cmp r0.x, -r0_abs.y, c163_abs.y, c163_abs.x

#line 2591
                pow r1.z, r0.w, c101.w
                add r0.y, r1.z, -c70.z
                max r1.w, r0.y, c95.z  // ::a<0>
                mad r0.y, r1.z, -c70.y, c70.x  // ::b<0>
                rcp r0.y, r0.y
                mul r0.y, r0.y, r1.w
                pow r1.z, r0.y, c146.w
                mul r1.y, r1.z, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.z, -r0.x, r0.w, r1.y  // ::Transfer<0>

#line 3009
        else

#line 3013
          mov r0.w, c141.w
          mad r0.xyw, r2.ywzx, c5.x, -r0.w
          frc r1.yzw, r0.xxyw
          add r0.xyw, r0, -r1.yzzw
          rcp r1.y, c5.x
          mul r0.xyw, r0, r1.y
          cmp r0.xyw, -c5.x, r2.ywzx, r0  // ::input3<0,1,2>

#line 411
          lrp r2.z, r0.x, r5.x, r4.x  // ::ConvertRange<0>
          lrp r3.y, r0.y, r5.y, r4.y  // ::ConvertRange<0>
          add r0.x, -r4.z, r5.z
          mul r0.x, r0.x, r0.w
          lrp r8.y, r0.w, r5.z, r4.z  // ::ConvertRange<0>

#line 2671
          if_eq c0.x, r0.z

#line 2002
            mul r0.y, r3.y, c154.w
            mad r1.y, r2.z, c77.w, r0.y  // ::RCA_Lrgb<0>
            mul r0.yw, r8.y, c134.xzzw
            mad r1.z, r3.y, c77.w, r0.y  // ::RCA_Lrgb<1>
            mad r1.w, r2.z, c154.w, r0.w  // ::RCA_Lrgb<2>

#line 2671
            mov r0.y, -c163.y
          else
            if_eq c0.x, -r6.x

#line 2081
              mul r0.w, r8.y, c154.w
              mad r1.y, r2.z, c77.w, r0.w  // ::RGV_Lrgb<0>
              mul r4.xy, r3.y, c134.wzzw
              mad r1.z, r2.z, c154.w, r4.x  // ::RGV_Lrgb<1>
              mad r1.w, r8.y, c77.w, r4.y  // ::RGV_Lrgb<2>

#line 2672
              mov r0.y, -c163.y
            else
              if_eq r1.x, -c62.x

#line 2093
                min r0.w, r8.y, r3.y
                min r3.w, r0.w, r2.z  // ::white<0>
                add r0.w, r2.z, -r3.w  // ::r<0>
                add r2.w, -r3.w, r3.y  // ::y<0>
                add r4.x, -r3.w, r8.y  // ::b<0>
                max r5.x, r2.w, r4.x
                max r4.y, r0.w, r5.x  // ::mY<0>
                min r5.z, r4.x, r2.w  // ::g<0>
                add r2.w, r2.w, -r5.z  // ::y<0>

#line 2104
                add r5.y, r4.x, -r5.z  // ::b<0>

#line 2110
                cmp r4.x, -r5.z, -c163_abs.x, -c163_abs.y
                cmp r4.x, -r5.y, c95.z, r4.x
                mul r5.xw, r5.yyzz, -c89.x
                cmp r5.yz, r4.x, r5, r5.xxww  // ::b<0>, ::g<0>
                add r5.x, r0.w, r2.w  // ::r<0>
                add r5.w, r2.w, r5.z  // ::g<0>
                max r0.w, r5.w, r5.y
                max r2.w, r5.x, r0.w  // ::mG<0>

#line 2119
                rcp r0.w, r2.w
                mul r0.w, r0.w, r4.y  // ::mN<0>

#line 2123
                mul r4.xyw, r0.w, r5.xwzy  // ::r<0>, ::g<0>, ::b<0>
                cmp r4.xyw, -r2.w, r5.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>

#line 2128
                add r4.xyw, r3.w, r4  // ::r<0>, ::g<0>, ::b<0>
                frc r5.xyz, r4.xyww
                add r4.xyw, r4, -r5.xyzz
                mul r1.yzw, r4.xxyw, c79.w  // ::RYB_Lrgb<0,1,2>

#line 2673
                mov r0.y, -c163.y
              else
                if_eq r1.x, -c51.x

#line 738
                  add r1.y, -r2.z, -c163.y  // ::CMY_Lrgb<0>
                  add r1.z, -r3.y, -c163.y  // ::CMY_Lrgb<1>
                  add r1.w, -r8.y, -c163.y  // ::CMY_Lrgb<2>

#line 2674
                  mov r0.y, -c163.y
                else
                  if_eq r1.x, -c65.x

#line 788
                    mul r0.w, r3.y, c90.w  // ::c<0>
                    mul r4.xyw, r8.y, c90.w  // ::g<0,0,0>

#line 796
                    if_eq r0.w, c95.z

#line 845
                      mov r1.yzw, r4.xxyw  // ::HCV_Lrgb<0,1,2>
                    else

#line 788
                      mul r2.w, r2.z, c76.w  // ::h<0>

#line 796
                      cmp r3.w, r2.z, c132.y, c132.z
                      mul r2.w, r2.w, r3.w
                      frc r2.w, r2.w
                      mul r2.w, r2.w, r3.w
                      mul r3.w, r2.w, -c52.x  // ::hi<0>
                      cmp r2.w, r2.w, c132.y, c132.z
                      mul r4.x, r2.w, r3.w
                      frc r4.x, r4.x
                      mul r5.x, r2.w, r4.x  // ::v<0>

#line 801
                      frc r4.y, r3.w
                      add r3.w, r3.w, -r4.y  // ::fhi<0>

#line 827
                      add r9, r3.w, c171

#line 838
                      mov r5.yz, c163_abs.xxyw
                      mad r5.w, r2.w, -r4.x, -c163.y
                      cmp r10.xyz, -r9_abs.w, r5, r5.zyww  // ::pure<0,1,2>
                      mad r11.xyz, r5.xzyw, c132.zyyw, c132.ywww
                      cmp r10.xyz, -r9_abs.z, r11.zxyw, r10  // ::pure<0,1,2>
                      cmp r9.yzw, -r9_abs.y, r5.xyzx, r10.xxyz  // ::pure<0,1,2>
                      cmp r9.xyz, -r9_abs.x, r11, r9.yzww  // ::pure<0,1,2>
                      cmp r5.xyz, -r3_abs.w, r5.zxyw, r9  // ::pure<0,1,2>

#line 844
                      lrp r1.yzw, r0.w, r5.xxyz, r4.w  // ::result<0,1,2>
                    endif

#line 2675
                    mov r0.y, -c163.y
                  else
                    if_eq r1.x, -c52.x

#line 880
                      cmp r4.xy, r2.z, c84, c84.zwzw
                      mul r0.w, r2.z, r4.y
                      frc r0.w, r0.w
                      mad r2.w, r4.x, r0.w, c165.z
                      mul r0.w, r0.w, c165.z
                      cmp r0.w, r2.z, r0.w, r2.w
                      mul r2.w, r3.y, c90.w  // ::s<0>
                      mul r3.w, r8.y, c79.w  // ::i<0>

#line 887
                      if_lt r0.w, c172.x
                        mad r4.x, r3.y, -c172.y, c172.z
                        mul r1.w, r3.w, r4.x  // ::b<0>
                        mad r4.x, r0.w, c76_abs.w, c76_abs.x
                        frc r4.x, r4.x
                        mad r4.x, r4.x, c86.x, c86.y
                        sincos r5.x, r4.x
                        mul r4.x, r2.w, r5.x
                        mad r4.y, r0.w, -c86.z, c86.w
                        mad r4.y, r4.y, c116.x, c116.y
                        frc r4.y, r4.y
                        mad r4.y, r4.y, c86.x, c86.y
                        sincos r9.x, r4.y
                        rcp r4.y, r9.x
                        mad r4.x, r4.x, r4.y, -c163.y
                        mul r1.y, r3.w, r4.x  // ::r<0>
                        mad r4.x, r5.x, -r4.y, -c163.y
                        mad r4.x, r2.w, r4.x, -c163.y
                        mul r1.z, r3.w, r4.x  // ::g<0>
                      else
                        if_lt r0.w, c168.y
                          mad r4.x, r0.w, c116.z, c116.w  // ::h<0>
                          mad r4.y, r3.y, -c172.y, c172.z
                          mul r1.y, r3.w, r4.y  // ::r<0>
                          mad r4.y, r4.x, c116.x, c116.y
                          frc r4.y, r4.y
                          mad r4.y, r4.y, c86.x, c86.y
                          sincos r5.x, r4.y
                          mul r4.y, r2.w, r5.x
                          add r4.x, -r4.x, c172.w
                          mad r4.x, r4.x, c116.x, c116.y
                          frc r4.x, r4.x
                          mad r4.x, r4.x, c86.x, c86.y
                          sincos r9.x, r4.x
                          rcp r4.x, r9.x
                          mad r4.y, r4.y, r4.x, -c163.y

#line 898
                          mad r4.x, r5.x, -r4.x, -c163.y
                          mad r4.x, r2.w, r4.x, -c163.y
                          mul r1.zw, r3.w, r4.xyyx  // ::g<0>, ::b<0>
                        else

#line 902
                          mad r0.w, r0.w, c85.x, c85.y  // ::h<0>
                          mad r4.x, r3.y, -c172.y, c172.z
                          mul r1.z, r3.w, r4.x  // ::g<0>
                          mad r4.x, r0.w, c116.x, c116.y
                          frc r4.x, r4.x
                          mad r4.x, r4.x, c86.x, c86.y
                          sincos r5.x, r4.x
                          mul r4.x, r2.w, r5.x
                          add r0.w, -r0.w, c172.w
                          mad r0.w, r0.w, c116.x, c116.y
                          frc r0.w, r0.w
                          mad r0.w, r0.w, c86.x, c86.y
                          sincos r9.x, r0.w
                          rcp r0.w, r9.x
                          mad r4.x, r4.x, r0.w, -c163.y
                          mul r1.w, r3.w, r4.x  // ::b<0>
                          mad r0.w, r5.x, -r0.w, -c163.y
                          mad r0.w, r2.w, r0.w, -c163.y
                          mul r1.y, r0.w, r3.w  // ::r<0>
                        endif
                      endif

#line 2676
                      mov r0.y, -c163.y
                    else
                      if_eq r1.x, -c50.z

#line 1900
                        if_lt c165.w, r8.y

#line 1908
                          mad r1.yzw, r2.z, c150.xxxy, c150.xzxx
                        else

#line 1900
                          add r0.w, r8.y, c85.z

#line 1903
                          if_lt r8.y, c85.w
                            cmp r2.xy, r0.w, c165.wyzw, c165.y  // ::HPLuv_Lrgb<0,1>

#line 1908
                            mov r1.yzw, r2.xxyz  // ::HPLuv_Lrgb<0,1,2>
                          else

#line 469
                            add r0.w, r8.y, c141.z
                            mul r2.w, r0.w, r0.w
                            mul r3.w, r0.w, r2.w
                            mul r3.w, r3.w, c87.x  // ::s1<0>
                            mad r2.w, r0.w, -r2.w, c87.y

#line 1833
                            mul r5, r8.y, c122

#line 470
                            cmp r2.w, r2.w, r5.x, r3.w  // ::s2<0>

#line 455
                            mul r3.w, r8.y, r2.w
                            mul r4.x, r3.w, c87.z  // ::y<0>
                            mul r4.yw, r2.w, c88.xxzy  // ::x<0>, ::z<0>
                            rcp r4.w, r4.w
                            mul r6.y, r4.w, r4.y  // ::GetBounds2<0>
                            mul r4.x, r4.w, r4.x  // ::GetBounds2<1>

#line 486
                            rcp r6.w, r6.y

#line 449
                            mad r4.w, r4.y, -r4.w, -r6.w
                            rcp r4.w, r4.w
                            mul r4.w, r4.w, r4.x  // ::GetIntersection<0>

#line 487
                            mad r4.x, r4.w, r6.y, r4.x  // GetDistance::input<1>

#line 444
                            mul r4.x, r4.x, r4.x
                            mad r4.x, r4.w, r4.w, r4.x
                            rsq r4.x, r4.x
                            rcp r4.x, r4.x  // ::GetDistance<0>

#line 489
                            min r6.y, r4.x, c87.w  // ::GetChroma1a<0>

#line 455
                            mad r3.w, r3.w, c87.z, -r5.y  // ::y<0>
                            mad r2.w, r2.w, c88.y, c88.z  // ::z<0>
                            rcp r2.w, r2.w
                            mul r4.x, r2.w, r4.y  // ::GetBounds2<0>
                            mul r3.w, r2.w, r3.w  // ::GetBounds2<1>

#line 486
                            rcp r4.w, r4.x

#line 449
                            mad r2.w, r4.y, -r2.w, -r4.w
                            rcp r2.w, r2.w
                            mul r2.w, r2.w, r3.w  // ::GetIntersection<0>

#line 487
                            mad r3.w, r2.w, r4.x, r3.w  // GetDistance::input<1>

#line 444
                            mul r3.w, r3.w, r3.w
                            mad r2.w, r2.w, r2.w, r3.w
                            rsq r2.w, r2.w
                            rcp r2.w, r2.w  // ::GetDistance<0>

#line 489
                            min r3.w, r2.w, r6.y  // ::GetChroma1a<0>

#line 1904
                            mul r2.w, r3.y, r3.w
                            mul r2.w, r2.w, c90.w  // ::C<0>

#line 672
                            mad r3.w, r2.z, c91.x, c91.y
                            frc r3.w, r3.w
                            mad r3.w, r3.w, c86.x, c86.y
                            sincos r9.xy, r3.w
                            mul r4.xy, r2.w, r9  // ::a<0>, ::b<0>

#line 591
                            abs r2.w, c13.x

#line 595
                            rcp r3.w, c13.x
                            mul r9.x, r3.w, c12.x  // ::xyY_XYZ<0>
                            mov r10.x, c13.x  // ::WhiteY<0>
                            add r4.w, -r10.x, -c12.x
                            add r4.w, r4.w, -c163.y
                            mul r9.z, r3.w, r4.w  // ::xyY_XYZ<2>
                            mov r9.y, -c163.y
                            cmp r9.xyz, -r2.w, c126.w, r9  // ::xyY_XYZ<0,1,2>

#line 654
                            cmp r2.w, -r2.w, c142.y, c142.w
                            add r2.w, r2.w, r9.x
                            mul r3.w, r9.x, -c51.x
                            mad r2.w, r9.z, -c62.x, r2.w
                            rcp r2.w, r2.w
                            mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 659
                            mul r2.w, r9.y, r2.w
                            mul r2.w, r2.w, -c89.z  // ::ComputeKv<0>

#line 1831
                            add r4.w, -r8.y, c88.w
                            mul r0.w, r0.w, c91.z
                            mul r5.y, r0.w, r0.w
                            mul r0.w, r0.w, r5.y
                            cmp r0.w, r4.w, r5.x, r0.w  // ::Y<0>
                            mad r3.w, r5.w, r3.w, r4.x
                            rcp r3.w, r3.w
                            mad r3.w, r5.z, r3.w, c163.y
                            mul r3.w, r3.w, c59.w  // ::a<0>
                            mul r4.x, r0.w, c65.x  // ::b<0>
                            mul r4.w, r8.y, -c36.w
                            mad r2.w, r5.w, r2.w, r4.y
                            rcp r2.w, r2.w
                            mad r2.w, r4.w, r2.w, c65.x
                            mad r2.w, r0.w, r2.w, -r4.x
                            rcp r4.y, r3.w
                            mul r2.w, r2.w, r4.y  // ::X<0>
                            mad r3.w, r2.w, r3.w, r4.x  // ::Z<0>

#line 1842
                            max r4.x, r2.w, c95.z  // ::X<0>

#line 1845
                            max r2.w, r0.w, c95.z  // ::Y<0>

#line 1848
                            max r0.w, r3.w, c95.z  // ::Z<0>

#line 553
                            mul r5.xyz, r2.w, c24
                            mad r4.xyw, r4.x, c23.xyzz, r5.xyzz
                            mad r1.yzw, r0.w, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 1908
                          endif
                        endif

#line 2677
                        mov r0.y, -c163.y
                      else
                        if_eq r1.x, -c117.z

#line 933
                          mul r0.w, r3.y, c90.w  // ::_s<0>
                          mul r5.y, r8.y, c90.w  // ::_b<0>

#line 936
                          add r2.w, -r2.z, c91.w

#line 948
                          mul r3.w, r2.z, c150.w
                          cmp r2.w, r2.w, r3.w, c131.x  // ::SectorPosition<0>
                          frc r3.w, r2.w
                          add r3.w, r2.w, -r3.w  // ::SectorNumber<0>

#line 952
                          add r2.w, r2.w, -r3.w  // ::FractionalSector<0>

#line 955
                          mad r4.x, r3.y, -c172.y, c172.z
                          mul r5.z, r4.x, r5.y  // ::p<0>
                          mad r4.x, r0.w, -r2.w, -c163.y
                          mul r5.w, r4.x, r5.y  // ::q<0>
                          add r2.w, -r2.w, -c163.y
                          mad r2.w, r0.w, -r2.w, -c163.y
                          mul r5.x, r2.w, r5.y  // ::t<0>

#line 984
                          add r9, r3.w, c171

#line 990
                          add r2.w, r3.w, c65.x

#line 995
                          cmp r4.xyw, -r2_abs.w, r5.yzzw, c95.z  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r9_abs.w, r5.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r9_abs.z, r5.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r9_abs.y, r5.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r9_abs.x, r5.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r4.xyw, -r3_abs.w, r5.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                          cmp r1.yzw, -r0_abs.w, r5.y, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 2678
                          mov r0.y, -c163.y
                        else
                          add r0.w, r6.z, c0.x
                          cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x
                          if_eq c0.x, -r6.z

#line 1042
                            mul r1.yzw, r8.y, c90.w  // ::l<0,0,0>

#line 1049
                            if_lt -r3.y, c95.z

#line 1042
                              mul r0.w, r3.y, c90.w  // ::s<0>
                              min r3.w, r2.z, c91.w  // ::h<0>
                              mul r2.w, r3.w, c150.w  // ::h<0>

#line 1051
                              mad r4.x, r8.y, c131.y, c131.z
                              add r4.x, -r4_abs.x, -c163.y
                              mul r5.x, r0.w, r4.x  // ::chroma<0>
                              cmp r4.xy, r3.w, c169, c169.zwzw
                              mul r0.w, r2.w, r4.y
                              frc r0.w, r0.w
                              mad r0.w, r4.x, r0.w, c163.y
                              add r0.w, -r0_abs.w, -c163.y
                              mul r5.y, r0.w, r5.x  // ::v<0>

#line 1072
                              add r9, -r3.w, c128

#line 1078
                              add r10, r3.w, -c128.wzyx

#line 1084
                              add r0.w, r3.w, c131.w
                              add r4.xy, -r3.w, c129

#line 1089
                              cmp r4.xy, r4, -c163_abs.y, -c163_abs.x
                              cmp r0.w, r0.w, r4.x, c95.z
                              mov r5.z, c95.z
                              cmp r6.yzw, r0.w, c95.z, r5.xxzy  // ::result<0,1,2>
                              cmp r0.w, r10.w, r4.y, c95.z
                              cmp r4.xyw, r0.w, r6.yzzw, r5.yzzx  // ::result<0,1,2>
                              cmp r9, r9, -c163_abs.y, -c163_abs.x
                              cmp r6.yzw, r10.xzyx, r9.xxyz, c95.z
                              cmp r4.xyw, r6.y, r4, r5.zyzx  // ::result<0,1,2>
                              cmp r4.xyw, r6.z, r4, r5.zxzy  // ::result<0,1,2>
                              cmp r4.xyw, r6.w, r4, r5.yxzz  // ::result<0,1,2>
                              cmp r0.w, r3.w, r9.w, c95.z
                              cmp r4.xyw, r0.w, r4, r5.xyzz  // ::result<0,1,2>
                              mad r0.w, r5.x, c141.w, r1.w  // ::w<0>

#line 1094
                              add r1.yzw, r0.w, r4.xxyw  // ::result<0,1,2>

#line 1099
                            endif

#line 2679
                          else
                            mov r1.yzw, c95.z
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          if_ne r0.y, -r0.y

#line 2724
          else

#line 2681
            if_eq r1.x, c141.x

#line 1945
              if_lt c165.w, r8.y

#line 1953
                mad r1.yzw, r2.z, c150.xxxy, c150.xzxx
              else

#line 1945
                add r0.y, r8.y, c85.z

#line 1948
                if_lt r8.y, c85.w
                  cmp r1.yz, r0.y, c165.xwyw, c165.y  // ::HSLuv_Lrgb<0,1>

#line 1953
                  mov r1.w, r2.z
                else

#line 469
                  add r0.y, r8.y, c141.z
                  mul r0.w, r0.y, r0.y
                  mul r2.w, r0.w, r0.y
                  mul r2.w, r2.w, c87.x  // ::s1<0>
                  mad r0.w, r0.y, -r0.w, c87.y

#line 1833
                  mul r5, r8.y, c122

#line 470
                  cmp r0.w, r0.w, r5.x, r2.w  // ::s2<0>

#line 455
                  mul r2.w, r8.y, r0.w
                  mul r3.w, r2.w, c87.z  // ::y<0>
                  mul r9, r0.w, c152  // ::x<0>, ::z<0>, ::x<0>, ::z<0>
                  rcp r4.x, r9.y
                  mul r4.y, r4.x, r9.x  // ::GetBounds2<0>
                  mul r3.w, r3.w, r4.x  // ::GetBounds2<1>
                  mad r2.w, r2.w, c87.z, -r5.y  // ::y<0>
                  mad r4.xw, r0.w, c173.xyzy, c173.z  // ::z<0,0>
                  rcp r4.x, r4.x
                  mul r6.y, r4.x, r9.x  // ::GetBounds2<0>
                  mul r2.w, r2.w, r4.x  // ::GetBounds2<1>
                  mul r4.x, r0.w, r5.y  // ::y<0>
                  rcp r6.z, r9.w
                  mul r6.w, r6.z, r9.z  // ::GetBounds2<0>
                  mul r6.z, r4.x, r6.z  // ::GetBounds2<1>
                  mad r5.y, r5.y, r0.w, -r5.y  // ::y<0>
                  rcp r4.w, r4.w
                  mul r7.w, r4.w, r9.z  // ::GetBounds2<0>
                  mul r4.w, r4.w, r5.y  // ::GetBounds2<1>
                  mul r9.xy, r0.w, c129.zwzw  // ::x<0>, ::z<0>
                  rcp r8.w, r9.y
                  mul r9.y, r8.w, r9.x  // ::GetBounds2<0>
                  mul r4.x, r4.x, r8.w  // ::GetBounds2<1>
                  mad r0.w, r0.w, c173.w, c173.z  // ::z<0>
                  rcp r0.w, r0.w
                  mul r8.w, r0.w, r9.x  // ::GetBounds2<0>
                  mul r0.w, r0.w, r5.y  // ::GetBounds2<1>

#line 672
                  mad r9.xz, r2.z, c135.xyyw, c135.z
                  frc r9.xz, r9
                  mad r9.xz, r9, c86.x, c86.y

#line 503
                  sincos r10.xy, r9.x
                  mad r4.y, r4.y, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r3.w, r3.w, r4.y  // ::length<0>
                  min r4.y, r3.w, c87.w  // GetChroma2a::result<0>
                  cmp r3.w, r3.w, r4.y, c87.w  // GetChroma2a::result<0>
                  mad r4.y, r6.y, -r10.x, r10.y
                  rcp r4.y, r4.y
                  mul r2.w, r2.w, r4.y  // ::length<0>
                  min r4.y, r2.w, r3.w  // GetChroma2a::result<0>
                  cmp r2.w, r2.w, r4.y, r3.w  // GetChroma2a::result<0>
                  mad r3.w, r6.w, -r10.x, r10.y
                  rcp r3.w, r3.w
                  mul r3.w, r3.w, r6.z  // ::length<0>
                  min r4.y, r3.w, r2.w  // GetChroma2a::result<0>
                  cmp r2.w, r3.w, r4.y, r2.w  // GetChroma2a::result<0>
                  mad r3.w, r7.w, -r10.x, r10.y
                  rcp r3.w, r3.w
                  mul r3.w, r3.w, r4.w  // ::length<0>
                  min r4.y, r3.w, r2.w  // GetChroma2a::result<0>
                  cmp r2.w, r3.w, r4.y, r2.w  // GetChroma2a::result<0>
                  mad r3.w, r9.y, -r10.x, r10.y
                  rcp r3.w, r3.w
                  mul r3.w, r3.w, r4.x  // ::length<0>
                  min r4.x, r3.w, r2.w  // GetChroma2a::result<0>
                  cmp r2.w, r3.w, r4.x, r2.w  // GetChroma2a::result<0>
                  mad r3.w, r8.w, -r10.x, r10.y
                  rcp r3.w, r3.w
                  mul r0.w, r0.w, r3.w  // ::length<0>
                  min r3.w, r0.w, r2.w  // GetChroma2a::result<0>
                  cmp r0.w, r0.w, r3.w, r2.w  // GetChroma2a::result<0>

#line 1949
                  mul r0.w, r3.y, r0.w
                  mul r0.w, r0.w, c90.w  // ::C<0>

#line 672
                  sincos r10.xy, r9.z
                  mul r4.xy, r0.w, r10  // ::a<0>, ::b<0>

#line 591
                  abs r0.w, c13.x

#line 595
                  rcp r2.w, c13.x
                  mul r9.x, r2.w, c12.x  // ::xyY_XYZ<0>
                  mov r10.x, c13.x  // ::WhiteY<0>
                  add r3.w, -r10.x, -c12.x
                  add r3.w, r3.w, -c163.y
                  mul r9.z, r2.w, r3.w  // ::xyY_XYZ<2>
                  mov r9.y, -c163.y
                  cmp r6.yzw, -r0.w, c126.w, r9.xxyz  // ::xyY_XYZ<0,1,2>

#line 654
                  cmp r0.w, -r0.w, c142.y, c142.w
                  add r0.w, r0.w, r6.y
                  mul r2.w, r6.y, -c51.x
                  mad r0.w, r6.w, -c62.x, r0.w
                  rcp r0.w, r0.w
                  mul r2.w, r0.w, r2.w  // ::ComputeKu<0>

#line 659
                  mul r0.w, r6.z, r0.w
                  mul r0.w, r0.w, -c89.z  // ::ComputeKv<0>

#line 1831
                  add r3.w, -r8.y, c88.w
                  mul r0.y, r0.y, c91.z
                  mul r4.w, r0.y, r0.y
                  mul r0.y, r0.y, r4.w
                  cmp r0.y, r3.w, r5.x, r0.y  // ::Y<0>
                  mad r2.w, r5.w, r2.w, r4.x
                  rcp r2.w, r2.w
                  mad r2.w, r5.z, r2.w, c163.y
                  mul r2.w, r2.w, c59.w  // ::a<0>
                  mul r3.w, r0.y, c65.x  // ::b<0>
                  mul r4.x, r8.y, -c36.w
                  mad r0.w, r5.w, r0.w, r4.y
                  rcp r0.w, r0.w
                  mad r0.w, r4.x, r0.w, c65.x
                  mad r0.w, r0.y, r0.w, -r3.w
                  rcp r4.x, r2.w
                  mul r0.w, r0.w, r4.x  // ::X<0>
                  mad r2.w, r0.w, r2.w, r3.w  // ::Z<0>

#line 1842
                  max r3.w, r0.w, c95.z  // ::X<0>

#line 1845
                  max r4.x, r0.y, c95.z  // ::Y<0>

#line 1848
                  max r0.y, r2.w, c95.z  // ::Z<0>

#line 553
                  mul r4.xyw, r4.x, c24.xyzz
                  mad r4.xyw, r3.w, c23.xyzz, r4
                  mad r1.yzw, r0.y, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 1953
                endif
              endif

#line 2681
              mov r0.y, -c163.y
            else
              if_eq r1.x, -c51.z

#line 1139
                mad r0.w, r2.z, c91.x, c91.y
                frc r0.w, r0.w
                mad r0.w, r0.w, c86.x, c86.y
                sincos r5.x, r0.w  // ::h<0>
                mul r0.w, r3.y, r5.x

#line 1143
                mul r2.w, r0.w, c135.w  // ::j<0>

#line 1151
                mul r1.yz, r8.y, c151.xxyw  // ::m<0>
                mad r0.w, r0.w, c135.w, r1.z
                mad r0.w, r8.y, -c151.z, r0.w
                mul r1.z, r0.w, c83.z  // ::g<0>
                mad r0.w, r8.y, c151.w, -r2.w
                mul r1.w, r0.w, -c141.w  // ::b<0>

#line 2682
                mov r0.y, -c163.y
              else
                if_eq r1.x, -c65.z

#line 1216
                  mad r0.w, r3.y, -c172.y, c172.z  // ::minOverMax<0>
                  if_lt -r0.w, c95.z

#line 1221
                    if_lt r2.z, c107.w
                      mul r2.w, r2.z, c150.w  // ::h<0>
                      rcp r3.w, r0.w
                      lrp r4.x, r2.w, r3.w, -c163.y  // ::part<0>
                      mul r4.y, r3.w, r3.w
                      mul r4.x, r4.x, r4.x
                      mul r4.x, r4.x, c160.y
                      mad r4.x, r4.y, c160.x, r4.x
                      add r4.x, r4.x, c127.w
                      rsq r4.x, r4.x
                      mul r5.z, r4.x, r8.y  // ::b<0>
                      mul r5.x, r3.w, r5.z  // ::r<0>
                      mad r3.w, r5.z, r3.w, -r5.z
                      mad r5.y, r2.w, r3.w, r5.z  // ::g<0>
                    else
                      if_lt r2.z, c172.x

#line 1232
                        mad r2.w, r2.z, -c118.x, c118.y
                        mul r2.w, r2.w, -c52.x  // ::h<0>
                        rcp r3.w, r0.w
                        lrp r4.x, r2.w, r3.w, -c163.y  // ::part<0>
                        mul r4.y, r3.w, r3.w
                        mul r4.x, r4.x, r4.x
                        mul r4.x, r4.x, c160.x
                        mad r4.x, r4.y, c160.y, r4.x
                        add r4.x, r4.x, c127.w
                        rsq r4.x, r4.x
                        mul r5.z, r4.x, r8.y  // ::b<0>
                        mul r5.y, r3.w, r5.z  // ::g<0>
                        mad r3.w, r5.z, r3.w, -r5.z
                        mad r5.x, r2.w, r3.w, r5.z  // ::r<0>
                      else
                        if_lt r2.z, c118.z
                          mad r2.w, r2.z, c118.x, c118.w
                          mul r2.w, r2.w, -c52.x  // ::h<0>
                          rcp r3.w, r0.w
                          lrp r4.x, r2.w, r3.w, -c163.y  // ::part<0>

#line 1243
                          mul r4.y, r3.w, r3.w
                          mul r4.x, r4.x, r4.x
                          mul r4.x, r4.x, c127.w
                          mad r4.x, r4.y, c160.y, r4.x
                          add r4.x, r4.x, c160.x
                          rsq r4.x, r4.x
                          mul r5.x, r4.x, r8.y  // ::r<0>
                          mul r5.y, r3.w, r5.x  // ::g<0>
                          mad r3.w, r5.x, r3.w, -r5.x
                          mad r5.z, r2.w, r3.w, r5.x  // ::b<0>
                        else
                          if_lt r2.z, c168.y
                            mad r2.w, r2.z, -c119.x, c119.y
                            mul r2.w, r2.w, -c52.x  // ::h<0>
                            rcp r3.w, r0.w
                            lrp r4.x, r2.w, r3.w, -c163.y  // ::part<0>
                            mul r4.y, r3.w, r3.w
                            mul r4.x, r4.x, r4.x
                            mul r4.x, r4.x, c160.y
                            mad r4.x, r4.y, c127.w, r4.x
                            add r4.x, r4.x, c160.x
                            rsq r4.x, r4.x
                            mul r5.x, r4.x, r8.y  // ::r<0>
                            mul r5.z, r3.w, r5.x  // ::b<0>

#line 1254
                            mad r3.w, r5.x, r3.w, -r5.x
                            mad r5.y, r2.w, r3.w, r5.x  // ::g<0>
                          else
                            add r2.w, r2.z, -c156.w
                            mad r3.w, r2.z, c119.x, c119.z
                            mul r3.w, r3.w, -c52.x  // ::h<0>
                            rcp r0.w, r0.w
                            lrp r4.x, r3.w, r0.w, -c163.y  // ::part<0>
                            mul r4.y, r0.w, r0.w

#line 1270
                            mul r4.yw, r4.y, c156.xzzx

#line 1261
                            mul r4.x, r4.x, r4.x
                            mad r4.x, r4.x, c160.x, r4.y
                            add r4.x, r4.x, c160.y
                            rsq r4.x, r4.x
                            mul r9.y, r4.x, r8.y  // ::g<0>
                            mul r9.z, r0.w, r9.y  // ::b<0>
                            mad r4.x, r9.y, r0.w, -r9.y
                            mad r9.x, r3.w, r4.x, r9.y  // ::r<0>

#line 1268
                            mad r3.w, r2.z, -c119.x, c119.w
                            mul r3.w, r3.w, -c52.x  // ::h<0>
                            lrp r4.x, r3.w, r0.w, -c163.y  // ::part<0>
                            mul r4.x, r4.x, r4.x
                            mad r4.x, r4.x, c127.w, r4.w
                            add r4.x, r4.x, c160.y
                            rsq r4.x, r4.x
                            mul r10.y, r4.x, r8.y  // ::g<0>
                            mul r10.x, r0.w, r10.y  // ::r<0>
                            mad r0.w, r10.y, r0.w, -r10.y
                            mad r10.z, r3.w, r0.w, r10.y  // ::b<0>
                            cmp r5.xyz, r2.w, r10, r9  // ::r<0>, ::g<0>, ::b<0>
                          endif
                        endif
                      endif
                    endif
                  else

#line 1278
                    if_lt r2.z, c107.w
                      mul r0.w, r2.z, c150.w  // ::h<0>
                      mul r2.w, r8.y, r8.y
                      mul r3.w, r2.z, r0.w
                      mad r3.w, r3.w, c136.x, c136.y
                      rcp r3.w, r3.w
                      mul r2.w, r2.w, r3.w
                      rsq r2.w, r2.w
                      rcp r5.x, r2.w  // ::r<0>
                      mul r5.y, r0.w, r5.x  // ::g<0>
                      mov r5.z, c95.z
                    else
                      if_lt r2.z, c172.x
                        mad r0.w, r2.z, -c118.x, c118.y
                        mul r2.w, r0.w, -c52.x  // ::h<0>

#line 1289
                        mul r3.w, r8.y, r8.y
                        mul r0.w, r0.w, r2.w
                        mad r0.w, r0.w, c136.z, c136.w
                        rcp r0.w, r0.w
                        mul r0.w, r0.w, r3.w
                        rsq r0.w, r0.w
                        rcp r5.y, r0.w  // ::g<0>
                        mul r5.x, r2.w, r5.y  // ::r<0>
                        mov r5.z, c95.z
                      else

#line 1312
                        mad r4.xy, r2.z, c149.x, c149.yzzw
                        mul r6.yz, r4.xxyw, -c52.x  // ::h<0,0>

#line 1297
                        mul r0.w, r8.y, r8.y

#line 1313
                        mul r4.xy, r4, r6.yzzw
                        mad r4.xy, r4, c174, c174.zwzw

#line 1297
                        rcp r2.w, r4.x
                        mul r2.w, r0.w, r2.w
                        rsq r2.w, r2.w
                        rcp r9.y, r2.w  // ::g<0>
                        mul r9.z, r6.y, r9.y  // ::b<0>

#line 1320
                        mad r4.xw, r2.z, -c119.x, c119.yyzw
                        mul r6.yw, r4.xxzw, -c52.x  // ::h<0,0>
                        mul r4.xw, r4, r6.yyzw
                        mad r4.xw, r4, c137.xyzy, c137.zyzw

#line 1305
                        rcp r2.w, r4.x
                        mul r2.w, r0.w, r2.w
                        rsq r2.w, r2.w
                        rcp r10.z, r2.w  // ::b<0>
                        mul r10.y, r6.y, r10.z  // ::g<0>

#line 1310
                        add r11.xyz, r2.z, c130

#line 1313
                        rcp r2.w, r4.y
                        mul r2.w, r0.w, r2.w
                        rsq r2.w, r2.w
                        rcp r12.z, r2.w  // ::b<0>
                        mul r12.x, r6.z, r12.z  // ::r<0>

#line 1321
                        rcp r2.w, r4.w
                        mul r0.w, r0.w, r2.w
                        rsq r0.w, r0.w
                        rcp r13.x, r0.w  // ::r<0>
                        mul r13.z, r6.w, r13.x  // ::b<0>
                        mov r13.y, c95.z
                        mov r12.y, c95.z
                        cmp r4.xyw, r11.z, r13.xyzz, r12.xyzz  // ::r<0>, ::g<0>, ::b<0>
                        mov r10.x, c95.z
                        cmp r4.xyw, r11.y, r4, r10.xyzz  // ::r<0>, ::g<0>, ::b<0>
                        mov r9.x, c95.z
                        cmp r5.xyz, r11.x, r4.xyww, r9  // ::r<0>, ::g<0>, ::b<0>
                      endif
                    endif
                  endif

#line 1328
                  add r4.xyw, r5.xyzz, -c141.w
                  frc r5.xyz, r4.xyww
                  add r4.xyw, r4, -r5.xyzz
                  mul_sat r1.yzw, r4.xxyw, c79.w  // ::result<0,1,2>

#line 2683
                  mov r0.y, -c163.y
                else
                  if_eq r1.x, -c52.z

#line 1398
                    mul r0.w, r3.y, c90.w  // ::white<0>
                    mul r2.w, r8.y, c90.w  // ::black<0>
                    mad r2.w, r3.y, c90.w, r2.w

#line 1407
                    if_ge r2.w, -c163.y

#line 1403
                      rcp r2.w, r2.w
                      mul r1.yzw, r0.w, r2.w  // ::gray<0,0,0>

#line 1418
                    else

#line 936
                      add r2.w, -r2.z, c91.w

#line 948
                      mul r3.w, r2.z, c150.w
                      cmp r2.w, r2.w, r3.w, c131.x  // ::SectorPosition<0>
                      frc r3.w, r2.w
                      add r3.w, r2.w, -r3.w  // ::SectorNumber<0>

#line 952
                      add r2.w, r2.w, -r3.w  // ::FractionalSector<0>

#line 956
                      add r5.x, -r2.w, -c163.y  // ::q<0>

#line 984
                      add r9, r3.w, c171

#line 990
                      add r2.w, r3.w, c65.x
                      cmp r10.x, -r2_abs.w, c163_abs.y, c163_abs.x  // ::r<0>

#line 995
                      mov r5.y, c95.z
                      cmp r10.yz, -r2_abs.w, r5.xyxw, c95.z  // ::g<0>, ::b<0>
                      mad r5.zw, r5.x, c132, c132.y
                      cmp r4.xyw, -r9_abs.w, r5.zyzw, r10.xyzz  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.z, r5.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                      mad r6.yzw, r5.xwxy, c132.xyzy, c132.xwyw
                      cmp r4.xyw, -r9_abs.y, r6.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.x, r5.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r3_abs.w, r6.yzzw, r4  // ::r<0>, ::g<0>, ::b<0>

#line 1410
                      mad r2.w, r3.y, -c172.y, c172.z
                      mad r2.w, r8.y, -c90.w, r2.w

#line 1417
                      mad r1.yzw, r4.xxyw, r2.w, r0.w  // ::rgb<0,1,2>
                    endif

#line 2684
                    mov r0.y, -c163.y
                  else
                    if_eq r1.x, -c53.x

#line 553
                      mul r4.xyw, r3.y, c92.xyzz
                      mad r4.xyw, r2.z, c120.xyzz, r4
                      mad r1.yzw, r8.y, c93.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2685
                      mov r0.y, -c163.y
                    else
                      if_eq r1.x, -c67.x

#line 2429
                        add r0.w, r8.y, c95.w
                        mad r2.w, r0.w, c149.w, r2.z  // ::ycbcr<0>
                        add r3.w, r3.y, c95.w
                        mad r4.x, r3.w, -c130.w, r2.z
                        mad r0.w, r0.w, -c92.w, r4.x  // ::ycbcr<1>
                        mad r3.w, r3.w, c120.w, r2.z  // ::ycbcr<2>

#line 2409
                        add r2.w, r2.w, -c141.z
                        mul r4.x, r2.w, c93.w  // ::ypbpr<0>
                        add r0.w, r0.w, c95.w
                        add r3.w, r3.w, c95.w

#line 2364
                        mad r1.y, r3.w, c102.x, r4.x  // ::r<0>
                        mad r1.w, r0.w, c102.y, r4.x  // ::b<0>
                        mul r0.w, r1.y, c148.x
                        mad r0.w, r2.w, c93.w, -r0.w
                        mad r0.w, r1.w, -c148.z, r0.w
                        mul r1.z, r0.w, c102.z  // ::g<0>

#line 2687
                        mov r0.y, -c163.y
                      else
                        add r0.w, r1.x, c67.y
                        cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x

#line 1625
                        add r2.w, r2.z, c141.z
                        mul r2.w, r2.w, c91.z  // ::fy<0>
                        mad r3.w, r3.y, c102.w, r2.w  // ::fx<0>
                        mad r4.x, r8.y, -c123.x, r2.w  // ::fz<0>
                        mul r4.y, r3.w, r3.w
                        mul r4.w, r3.w, r4.y  // ::fx3<0>
                        mul r5.x, r4.x, r4.x
                        mul r5.y, r4.x, r5.x  // ::fz3<0>
                        mad r4.y, r3.w, -r4.y, c72.w
                        mad r3.w, r3.w, c123.y, c123.z
                        mul r3.w, r3.w, c122.x
                        cmp r3.w, r4.y, r3.w, r4.w  // ::xr<0>
                        add r4.y, -r2.z, c88.w
                        mul r4.w, r2.w, r2.w
                        mul r2.w, r2.w, r4.w
                        mul r4.w, r2.z, c122.x
                        cmp r2.w, r4.y, r4.w, r2.w  // ::yr<0>
                        mad r4.y, r4.x, -r5.x, c72.w
                        mad r4.x, r4.x, c123.y, c123.z
                        mul r4.x, r4.x, c122.x
                        cmp r4.x, r4.y, r4.x, r5.y  // ::zr<0>

#line 591
                        abs r4.y, c13.x

#line 595
                        rcp r4.w, c13.x
                        mul r5.x, r4.w, c12.x  // ::xyY_XYZ<0>
                        mov r9.x, c13.x  // ::WhiteY<0>
                        add r5.w, -r9.x, -c12.x
                        add r5.w, r5.w, -c163.y
                        mul r5.z, r4.w, r5.w  // ::xyY_XYZ<2>
                        mov r5.y, -c163.y
                        cmp r5.xyz, -r4.y, c126.w, r5  // ::xyY_XYZ<0,1,2>

#line 1637
                        mul r9.x, r3.w, r5.x  // ::Lab_Lrgb<0>
                        mul r9.y, r2.w, r5.y  // ::Lab_Lrgb<1>
                        mul r9.z, r4.x, r5.z  // ::Lab_Lrgb<2>

#line 2688
                        cmp r1.yzw, -r0_abs.w, r9.xxyz, r1  // ::TLrgb<0,1,2>
                      endif
                    endif
                  endif
                endif
              endif
            endif
            if_ne r0.y, -r0.y

#line 2724
            else

#line 2690
              if_eq r1.x, -c11.x

#line 591
                abs r0.y, c13.x

#line 595
                rcp r0.w, c13.x
                mul r5.x, r0.w, c12.x  // ::xyY_XYZ<0>
                mov r4.x, c13.x  // ::WhiteY<0>
                add r2.w, -r4.x, -c12.x
                add r2.w, r2.w, -c163.y
                mul r5.z, r0.w, r2.w  // ::xyY_XYZ<2>
                mov r5.y, -c163.y
                cmp r4.xyw, -r0.y, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 635
                add r5.xy, r4.xwzw, c68

#line 638
                cmp r0.w, -r5_abs.y, c68.z, c68.w
                cmp r0.w, -r0.y, c95.z, r0.w
                cmp r0.w, -r5_abs.x, r0.w, c95.z

#line 648
                add r5.xy, r4.ywzw, r4
                mul r5.xy, r5, c125  // ::Ka<0,0>

#line 1681
                mul r2.w, r2.z, c90.w
                mul r2.w, r2.w, r2.w
                mul r2.w, r4.y, r2.w  // ::Y<0>
                rcp r3.w, r5.x
                cmp r3.w, r0.w, r3.w, c123.w
                mul r3.w, r3.w, r3.y
                cmp r0.y, -r0.y, c143.x, c143.y
                mul r0.y, r0.y, r2.w
                rsq r4.y, r0.y
                rcp r4.y, r4.y
                mad r3.w, r3.w, r4.y, r0.y
                mul r3.w, r4.x, r3.w  // ::X<0>
                rcp r4.x, r5.y
                cmp r0.w, r0.w, r4.x, c71.x
                mul r0.w, r0.w, r8.y
                mad r0.y, r0.w, r4.y, -r0.y
                mul r0.y, -r4.w, r0.y  // ::Z<0>

#line 553
                mul r4.xyw, r2.w, c24.xyzz
                mad r4.xyw, r3.w, c23.xyzz, r4
                mad r1.yzw, r0.y, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2690
                mov r0.y, -c163.y
              else
                if_eq r1.x, -c11.y

#line 1727
                  add r0.w, r2.z, -c72.z  // ::Jz<0>
                  mad r2.w, r0.w, c71.y, c71.z
                  rcp r2.w, r2.w

#line 1732
                  mul r4.xy, r3.y, c146
                  mad r3.w, r0.w, r2.w, r4.x
                  mad r3.w, r8.y, c71.w, r3.w  // PerceptualQuantizerInverse::X<0>

#line 574
                  pow r4.w, r3.w, c146.z  // ::XX<0>
                  add r3.w, -r4.w, c70.z
                  mad r4.w, r4.w, c121.x, c121.y
                  rcp r4.w, r4.w
                  mul r3.w, r3.w, r4.w
                  pow r4.w, r3.w, c146.w

#line 1732
                  mad r4.xy, r0.w, r2.w, -r4
                  mad r4.xy, r8.y, -c121.zwzw, r4  // PerceptualQuantizerInverse::X<0,0>

#line 574
                  pow r0.w, r4.x, c146.z  // ::XX<0>
                  add r2.w, -r0.w, c70.z
                  mad r0.w, r0.w, c121.x, c121.y
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r2.w
                  pow r2.w, r0.w, c146.w
                  pow r0.w, r4.y, c146.z  // ::XX<0>
                  add r3.w, -r0.w, c70.z
                  mad r0.w, r0.w, c121.x, c121.y
                  rcp r0.w, r0.w
                  mul r0.w, r0.w, r3.w
                  pow r3.w, r0.w, c146.w

#line 1736
                  mul r5.xyz, r2.w, c145
                  mad r4.xy, r4.w, c144, -r5.xzzw
                  mad r0.w, r4.w, c145.w, r5.y
                  mad r0.w, r3.w, -c144.z, r0.w  // ::Y<0>
                  mad r4.xy, r3.w, c147, r4  // ::X<0>, ::Z<0>
                  mul r0.w, r0.w, c69.y  // ::xyz<1>
                  mul r4.xy, r4, c69.y  // ::xyz<0,2>

#line 553
                  mul r5.xyz, r0.w, c24
                  mad r5.xyz, r4.x, c23, r5
                  mad r1.yzw, r4.y, c25.xxyz, r5.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2691
                  mov r0.y, -c163.y
                else
                  if_eq r1.x, -c11.z

#line 591
                    abs r0.w, c13.x

#line 595
                    rcp r2.w, c13.x
                    mul r5.x, r2.w, c12.x  // ::xyY_XYZ<0>
                    mov r4.x, c13.x  // ::WhiteY<0>
                    add r3.w, -r4.x, -c12.x
                    add r3.w, r3.w, -c163.y
                    mul r5.z, r2.w, r3.w  // ::xyY_XYZ<2>
                    mov r5.y, -c163.y
                    cmp r4.xyw, -r0.w, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 553
                    mul r5.xyz, r3.y, c27
                    mad r5.xyz, r2.z, c26, r5
                    mad r5.xyz, r8.y, c28, r5  // ::x<0>, ::y<0>, ::z<0>

#line 583
                    mul r6.yzw, r5.xxyz, r5.xxyz
                    mul r5.xyz, r5, r6.yzww  // ::Pow3<0,0,0>

#line 553
                    mul r6.yzw, r5.y, c33.xxyz
                    mad r5.xyw, r5.x, c32.xyzz, r6.yzzw
                    mad r5.xyz, r5.z, c34, r5.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 1785
                    mul r4.xyw, r4, r5.xyzz  // ::xyz<0,1,2>

#line 553
                    mul r5.xyz, r4.y, c24
                    mad r5.xyz, r4.x, c23, r5
                    mad r1.yzw, r4.w, c25.xxyz, r5.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2692
                    mov r0.y, -c163.y
                  else
                    if_eq r1.x, -c11.w

#line 933
                      mul r0.w, r3.y, c90.w  // ::_s<0>
                      mul r5.y, r8.y, c90.w  // ::_b<0>

#line 936
                      add r2.w, -r2.z, c91.w

#line 948
                      mul r3.w, r2.z, c150.w
                      cmp r2.w, r2.w, r3.w, c131.x  // ::SectorPosition<0>
                      frc r3.w, r2.w
                      add r3.w, r2.w, -r3.w  // ::SectorNumber<0>

#line 952
                      add r2.w, r2.w, -r3.w  // ::FractionalSector<0>

#line 955
                      mad r4.x, r3.y, -c172.y, c172.z
                      mul r5.z, r4.x, r5.y  // ::p<0>
                      mad r4.x, r0.w, -r2.w, -c163.y
                      mul r5.w, r4.x, r5.y  // ::q<0>
                      add r2.w, -r2.w, -c163.y
                      mad r2.w, r0.w, -r2.w, -c163.y
                      mul r5.x, r2.w, r5.y  // ::t<0>

#line 984
                      add r9, r3.w, c171

#line 990
                      add r2.w, r3.w, c65.x

#line 995
                      cmp r4.xyw, -r2_abs.w, r5.yzzw, c95.z  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.w, r5.xzzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.z, r5.zwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.y, r5.zyzx, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r9_abs.x, r5.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r4.xyw, -r3_abs.w, r5.yxzz, r4  // ::r<0>, ::g<0>, ::b<0>
                      cmp r1.yzw, -r0_abs.w, r5.y, r4.xxyw  // ::r<0>, ::g<0>, ::b<0>

#line 2693
                      mov r0.y, -c163.y
                    else
                      if_eq r1.x, -c73.x

#line 1042
                        mul r1.yzw, r8.y, c90.w  // ::l<0,0,0>

#line 1049
                        if_lt -r3.y, c95.z

#line 1042
                          mul r0.w, r3.y, c90.w  // ::s<0>
                          min r3.w, r2.z, c91.w  // ::h<0>
                          mul r2.w, r3.w, c150.w  // ::h<0>

#line 1051
                          mad r4.x, r8.y, c131.y, c131.z
                          add r4.x, -r4_abs.x, -c163.y
                          mul r5.x, r0.w, r4.x  // ::chroma<0>
                          cmp r4.xy, r3.w, c169, c169.zwzw
                          mul r0.w, r2.w, r4.y
                          frc r0.w, r0.w
                          mad r0.w, r4.x, r0.w, c163.y
                          add r0.w, -r0_abs.w, -c163.y
                          mul r5.y, r0.w, r5.x  // ::v<0>

#line 1072
                          add r9, -r3.w, c128

#line 1078
                          add r10, r3.w, -c128.wzyx

#line 1084
                          add r0.w, r3.w, c131.w
                          add r4.xy, -r3.w, c129

#line 1089
                          cmp r4.xy, r4, -c163_abs.y, -c163_abs.x
                          cmp r0.w, r0.w, r4.x, c95.z
                          mov r5.z, c95.z
                          cmp r6.yzw, r0.w, c95.z, r5.xxzy  // ::result<0,1,2>
                          cmp r0.w, r10.w, r4.y, c95.z
                          cmp r4.xyw, r0.w, r6.yzzw, r5.yzzx  // ::result<0,1,2>
                          cmp r9, r9, -c163_abs.y, -c163_abs.x
                          cmp r6.yzw, r10.xzyx, r9.xxyz, c95.z
                          cmp r4.xyw, r6.y, r4, r5.zyzx  // ::result<0,1,2>
                          cmp r4.xyw, r6.z, r4, r5.zxzy  // ::result<0,1,2>
                          cmp r4.xyw, r6.w, r4, r5.yxzz  // ::result<0,1,2>
                          cmp r0.w, r3.w, r9.w, c95.z
                          cmp r4.xyw, r0.w, r4, r5.xyzz  // ::result<0,1,2>
                          mad r0.w, r5.x, c141.w, r1.w  // ::w<0>

#line 1094
                          add r1.yzw, r0.w, r4.xxyw  // ::result<0,1,2>

#line 1099
                        endif

#line 2694
                        mov r0.y, -c163.y
                      else
                        if_eq r1.x, -c73.y

#line 1398
                          mul r0.w, r3.y, c90.w  // ::white<0>
                          mul r2.w, r8.y, c90.w  // ::black<0>
                          mad r2.w, r3.y, c90.w, r2.w

#line 1407
                          if_ge r2.w, -c163.y

#line 1403
                            rcp r2.w, r2.w
                            mul r1.yzw, r0.w, r2.w  // ::gray<0,0,0>

#line 1418
                          else

#line 936
                            add r2.w, -r2.z, c91.w

#line 948
                            mul r3.w, r2.z, c150.w
                            cmp r2.w, r2.w, r3.w, c131.x  // ::SectorPosition<0>
                            frc r3.w, r2.w
                            add r3.w, r2.w, -r3.w  // ::SectorNumber<0>

#line 952
                            add r2.w, r2.w, -r3.w  // ::FractionalSector<0>

#line 956
                            add r5.x, -r2.w, -c163.y  // ::q<0>

#line 984
                            add r9, r3.w, c171

#line 990
                            add r2.w, r3.w, c65.x
                            cmp r10.x, -r2_abs.w, c163_abs.y, c163_abs.x  // ::r<0>

#line 995
                            mov r5.y, c95.z
                            cmp r10.yz, -r2_abs.w, r5.xyxw, c95.z  // ::g<0>, ::b<0>
                            mad r5.zw, r5.x, c132, c132.y
                            cmp r4.xyw, -r9_abs.w, r5.zyzw, r10.xyzz  // ::r<0>, ::g<0>, ::b<0>
                            cmp r4.xyw, -r9_abs.z, r5.yxzw, r4  // ::r<0>, ::g<0>, ::b<0>
                            mad r6.yzw, r5.xwxy, c132.xyzy, c132.xwyw
                            cmp r4.xyw, -r9_abs.y, r6.wyzz, r4  // ::r<0>, ::g<0>, ::b<0>
                            cmp r4.xyw, -r9_abs.x, r5.xwzy, r4  // ::r<0>, ::g<0>, ::b<0>
                            cmp r4.xyw, -r3_abs.w, r6.yzzw, r4  // ::r<0>, ::g<0>, ::b<0>

#line 1410
                            mad r2.w, r3.y, -c172.y, c172.z
                            mad r2.w, r8.y, -c90.w, r2.w

#line 1417
                            mad r1.yzw, r4.xxyw, r2.w, r0.w  // ::rgb<0,1,2>
                          endif

#line 2695
                          mov r0.y, -c163.y
                        else
                          if_eq r1.x, -c73.z

#line 672
                            mad r0.w, r8.y, c91.x, c91.y
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c86.x, c86.y
                            sincos r5.xy, r0.w
                            mul r4.xy, r3.y, r5  // ::a<0>, ::b<0>

#line 1625
                            add r0.w, r2.z, c141.z
                            mul r2.w, r0.w, c91.z  // ::fy<0>
                            mul r3.w, r4.y, c123.x
                            mad r4.x, r4.x, c102.w, r2.w  // ::fx<0>
                            mad r0.w, r0.w, c91.z, -r3.w  // ::fz<0>
                            mul r3.w, r4.x, r4.x
                            mul r4.y, r3.w, r4.x  // ::fx3<0>
                            mul r4.w, r0.w, r0.w
                            mul r5.x, r0.w, r4.w  // ::fz3<0>
                            mad r3.w, r4.x, -r3.w, c72.w
                            mad r4.x, r4.x, c123.y, c123.z
                            mul r4.x, r4.x, c122.x
                            cmp r3.w, r3.w, r4.x, r4.y  // ::xr<0>
                            add r4.x, -r2.z, c88.w
                            mul r4.y, r2.w, r2.w
                            mul r2.w, r2.w, r4.y
                            mul r4.y, r2.z, c122.x
                            cmp r2.w, r4.x, r4.y, r2.w  // ::yr<0>
                            mad r4.x, r0.w, -r4.w, c72.w
                            mad r0.w, r0.w, c123.y, c123.z
                            mul r0.w, r0.w, c122.x
                            cmp r0.w, r4.x, r0.w, r5.x  // ::zr<0>

#line 591
                            abs r4.x, c13.x

#line 595
                            rcp r4.y, c13.x
                            mul r5.x, r4.y, c12.x  // ::xyY_XYZ<0>
                            mov r9.x, c13.x  // ::WhiteY<0>
                            add r4.w, -r9.x, -c12.x
                            add r4.w, r4.w, -c163.y
                            mul r5.z, r4.y, r4.w  // ::xyY_XYZ<2>
                            mov r5.y, -c163.y
                            cmp r4.xyw, -r4.x, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 1637
                            mul r1.y, r3.w, r4.x  // ::Lab_Lrgb<0>
                            mul r1.z, r2.w, r4.y  // ::Lab_Lrgb<1>
                            mul r1.w, r0.w, r4.w  // ::Lab_Lrgb<2>

#line 2696
                            mov r0.y, -c163.y
                          else
                            if_eq r1.x, -c73.w

#line 672
                              mad r0.w, r8.y, c91.x, c91.y
                              frc r0.w, r0.w
                              mad r0.w, r0.w, c86.x, c86.y
                              sincos r5.xy, r0.w
                              mul r4.xy, r3.y, r5  // ::a<0>, ::b<0>

#line 591
                              abs r0.w, c13.x

#line 595
                              rcp r2.w, c13.x
                              mul r5.x, r2.w, c12.x  // ::xyY_XYZ<0>
                              mov r9.x, c13.x  // ::WhiteY<0>
                              add r3.w, -r9.x, -c12.x
                              add r3.w, r3.w, -c163.y
                              mul r5.z, r2.w, r3.w  // ::xyY_XYZ<2>
                              mov r5.y, -c163.y
                              cmp r5.xyz, -r0.w, c126.w, r5  // ::xyY_XYZ<0,1,2>

#line 635
                              add r6.yz, r5.xxzw, c68.xxyw

#line 638
                              cmp r2.w, -r6_abs.z, c68.z, c68.w
                              cmp r2.w, -r0.w, c95.z, r2.w
                              cmp r2.w, -r6_abs.y, r2.w, c95.z

#line 648
                              add r6.yz, r5, r5.xxyw
                              mul r6.yz, r6, c125.xxyw  // ::Ka<0,0>

#line 1681
                              mul r3.w, r2.z, c90.w
                              mul r3.w, r3.w, r3.w
                              mul r3.w, r5.y, r3.w  // ::Y<0>
                              rcp r4.w, r6.y
                              cmp r4.w, r2.w, r4.w, c123.w
                              mul r4.x, r4.w, r4.x
                              cmp r0.w, -r0.w, c143.x, c143.y
                              mul r0.w, r0.w, r3.w
                              rsq r4.w, r0.w
                              rcp r4.w, r4.w
                              mad r4.x, r4.x, r4.w, r0.w
                              mul r4.x, r5.x, r4.x  // ::X<0>
                              rcp r5.x, r6.z
                              cmp r2.w, r2.w, r5.x, c71.x
                              mul r2.w, r2.w, r4.y
                              mad r0.w, r2.w, r4.w, -r0.w
                              mul r0.w, -r5.z, r0.w  // ::Z<0>

#line 553
                              mul r5.xyz, r3.w, c24
                              mad r4.xyw, r4.x, c23.xyzz, r5.xyzz
                              mad r1.yzw, r0.w, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2697
                              mov r0.y, -c163.y
                            else
                              if_eq r1.x, -c35.x

#line 672
                                mad r0.w, r8.y, c91.x, c91.y
                                frc r0.w, r0.w
                                mad r0.w, r0.w, c86.x, c86.y
                                sincos r5.xy, r0.w
                                mul r5, r3.y, r5.xyxy  // ::a<0>, ::b<0>, ::a<0>, ::b<0>

#line 1727
                                add r0.w, r2.z, -c72.z  // ::Jz<0>
                                mad r2.w, r0.w, c71.y, c71.z
                                rcp r2.w, r2.w

#line 1732
                                mul r4.xy, r5.xzzw, c146
                                mad r3.w, r0.w, r2.w, r4.x
                                mad r3.w, r5.y, c71.w, r3.w  // PerceptualQuantizerInverse::X<0>

#line 574
                                pow r4.w, r3.w, c146.z  // ::XX<0>
                                add r3.w, -r4.w, c70.z
                                mad r4.w, r4.w, c121.x, c121.y
                                rcp r4.w, r4.w
                                mul r3.w, r3.w, r4.w
                                pow r4.w, r3.w, c146.w

#line 1732
                                mad r4.xy, r0.w, r2.w, -r4
                                mad r4.xy, r5.ywzw, -c121.zwzw, r4  // PerceptualQuantizerInverse::X<0,0>

#line 574
                                pow r0.w, r4.x, c146.z  // ::XX<0>
                                add r2.w, -r0.w, c70.z
                                mad r0.w, r0.w, c121.x, c121.y
                                rcp r0.w, r0.w
                                mul r0.w, r0.w, r2.w
                                pow r2.w, r0.w, c146.w
                                pow r0.w, r4.y, c146.z  // ::XX<0>
                                add r3.w, -r0.w, c70.z
                                mad r0.w, r0.w, c121.x, c121.y
                                rcp r0.w, r0.w
                                mul r0.w, r0.w, r3.w
                                pow r3.w, r0.w, c146.w

#line 1736
                                mul r5.xyz, r2.w, c145
                                mad r4.xy, r4.w, c144, -r5.xzzw
                                mad r0.w, r4.w, c145.w, r5.y
                                mad r0.w, r3.w, -c144.z, r0.w  // ::Y<0>
                                mad r4.xy, r3.w, c147, r4  // ::X<0>, ::Z<0>
                                mul r0.w, r0.w, c69.y  // ::xyz<1>
                                mul r4.xy, r4, c69.y  // ::xyz<0,2>

#line 553
                                mul r5.xyz, r0.w, c24
                                mad r5.xyz, r4.x, c23, r5
                                mad r1.yzw, r4.y, c25.xxyz, r5.xxyz  // ::x<0>, ::y<0>, ::z<0>

#line 2698
                                mov r0.y, -c163.y
                              else
                                add r0.w, r1.x, c35.y
                                cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x

#line 672
                                mad r2.w, r8.y, c91.x, c91.y
                                frc r2.w, r2.w
                                mad r2.w, r2.w, c86.x, c86.y
                                sincos r5.xy, r2.w
                                mul r2.xy, r3.y, r5  // ::a<0>, ::b<0>

#line 2065
                                add r4.xyw, r2.xyzz, c165.wwzy
                                mul r5.xyz, r4.xyww, c147.zzww  // ::result<0,1,2>

#line 595
                                mul r2.w, r5.z, r5.x
                                rcp r3.w, r5.y
                                mul r9.x, r2.w, r3.w  // ::xyY_XYZ<0>
                                mad r2.w, r4.y, -c123.x, -r5.x
                                add r2.w, r2.w, -c163.y
                                mul r2.w, r5.z, r2.w
                                mul r9.z, r3.w, r2.w  // ::xyY_XYZ<2>
                                mov r9.y, r5.z
                                cmp r4.xyw, -r5_abs.y, c126.w, r9.xyzz  // ::xyY_XYZ<0,1,2>

#line 2699
                                cmp r1.yzw, -r0_abs.w, r4.xxyw, r1  // ::TLrgb<0,1,2>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
              if_ne r0.y, -r0.y

#line 2724
              else

#line 2701
                if_eq r1.x, -c35.z

#line 672
                  mad r0.y, r8.y, c91.x, c91.y
                  frc r0.y, r0.y
                  mad r0.y, r0.y, c86.x, c86.y
                  sincos r5.xy, r0.y
                  mul r0.yw, r3.y, r5.xxzy  // ::a<0>, ::b<0>

#line 591
                  abs r2.w, c13.x

#line 595
                  rcp r3.w, c13.x
                  mul r5.x, r3.w, c12.x  // ::xyY_XYZ<0>
                  mov r4.x, c13.x  // ::WhiteY<0>
                  add r4.x, -r4.x, -c12.x
                  add r4.x, r4.x, -c163.y
                  mul r5.z, r3.w, r4.x  // ::xyY_XYZ<2>
                  mov r5.y, -c163.y
                  cmp r4.xyw, -r2.w, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 654
                  cmp r2.w, -r2.w, c142.y, c142.w
                  add r2.w, r2.w, r4.x
                  mul r3.w, r4.x, -c51.x
                  mad r2.w, r4.w, -c62.x, r2.w
                  rcp r2.w, r2.w
                  mul r3.w, r2.w, r3.w  // ::ComputeKu<0>

#line 659
                  mul r2.w, r4.y, r2.w
                  mul r2.w, r2.w, -c89.z  // ::ComputeKv<0>

#line 1831
                  add r4.x, -r2.z, c88.w
                  add r4.y, r2.z, c141.z
                  mul r4.y, r4.y, c91.z
                  mul r4.w, r4.y, r4.y
                  mul r4.y, r4.w, r4.y

#line 1836
                  mul r5, r2.z, c153

#line 1831
                  cmp r4.x, r4.x, r5.x, r4.y  // ::Y<0>
                  mad r0.y, r5.z, r3.w, r0.y
                  rcp r0.y, r0.y
                  mad r0.y, r5.y, r0.y, c163.y
                  mul r0.y, r0.y, c59.w  // ::a<0>
                  mul r3.w, r4.x, c65.x  // ::b<0>
                  mad r0.w, r5.z, r2.w, r0.w
                  rcp r0.w, r0.w
                  mad r0.w, r5.w, r0.w, c65.x
                  mad r0.w, r4.x, r0.w, -r3.w
                  rcp r2.w, r0.y
                  mul r0.w, r0.w, r2.w  // ::X<0>
                  mad r0.y, r0.w, r0.y, r3.w  // ::Z<0>

#line 1842
                  max r2.w, r0.w, c95.z  // ::X<0>

#line 1845
                  max r0.w, r4.x, c95.z  // ::Y<0>

#line 1848
                  max r3.w, r0.y, c95.z  // ::Z<0>

#line 553
                  mul r4.xyw, r0.w, c24.xyzz
                  mad r4.xyw, r2.w, c23.xyzz, r4
                  mad r1.yzw, r3.w, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2701
                  mov r0.y, -c163.y
                else
                  if_eq r1.x, -c35.w

#line 672
                    mad r0.w, r8.y, c91.x, c91.y
                    frc r0.w, r0.w
                    mad r0.w, r0.w, c86.x, c86.y
                    sincos r5.xy, r0.w
                    mul r2.xy, r3.y, r5  // ::a<0>, ::b<0>

#line 2213
                    add r2.xyw, r2.xyzz, c165.wwzy
                    mul r4.xyw, r2, c147.zzzw  // ::result<0,1,2>

#line 595
                    mul r0.w, r4.w, r4.x
                    rcp r2.x, r4.y
                    mul r5.x, r0.w, r2.x  // ::xyY_XYZ<0>
                    mad r0.w, r2.y, -c123.x, -r4.x
                    add r0.w, r0.w, -c163.y
                    mul r0.w, r4.w, r0.w
                    mul r5.z, r2.x, r0.w  // ::xyY_XYZ<2>
                    mov r5.y, r4.w
                    cmp r2.xyw, -r4_abs.y, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 553
                    mul r4.xyw, r2.y, c24.xyzz
                    mad r4.xyw, r2.x, c23.xyzz, r4
                    mad r1.yzw, r2.w, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2702
                    mov r0.y, -c163.y
                  else
                    if_eq r1.x, -c54.x

#line 553
                      mul r2.xyw, r3.y, c15.xyzz
                      mad r2.xyw, r2.z, c14.xyzz, r2
                      mad r2.xyw, r8.y, c16.xyzz, r2  // ::x<0>, ::y<0>, ::z<0>
                      mul r4.xyw, r2.y, c24.xyzz
                      mad r4.xyw, r2.x, c23.xyzz, r4
                      mad r1.yzw, r2.w, c25.xxyz, r4.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2703
                      mov r0.y, -c163.y
                    else
                      if_eq r1.x, -c54.y

#line 591
                        abs r0.w, c13.x

#line 595
                        rcp r2.x, c13.x
                        mul r5.x, r2.x, c12.x  // ::xyY_XYZ<0>
                        mov r4.x, c13.x  // ::WhiteY<0>
                        add r2.y, -r4.x, -c12.x
                        add r2.y, r2.y, -c163.y
                        mul r5.z, r2.x, r2.y  // ::xyY_XYZ<2>
                        mov r5.y, -c163.y
                        cmp r2.xyw, -r0.w, c126.w, r5.xyzz  // ::xyY_XYZ<0,1,2>

#line 654
                        cmp r0.w, -r0.w, c142.y, c142.w
                        add r0.w, r0.w, r2.x
                        mul r2.x, r2.x, -c51.x
                        mad r0.w, r2.w, -c62.x, r0.w
                        rcp r0.w, r0.w
                        mul r2.x, r0.w, r2.x  // ::ComputeKu<0>

#line 659
                        mul r0.w, r2.y, r0.w
                        mul r0.w, r0.w, -c89.z  // ::ComputeKv<0>

#line 1831
                        add r2.y, -r2.z, c88.w
                        add r2.w, r2.z, c141.z
                        mul r2.w, r2.w, c91.z
                        mul r3.w, r2.w, r2.w
                        mul r2.w, r2.w, r3.w

#line 1836
                        mul r5, r2.z, c153

#line 1831
                        cmp r2.y, r2.y, r5.x, r2.w  // ::Y<0>
                        mad r2.x, r5.z, r2.x, r3.y
                        rcp r2.x, r2.x
                        mad r2.x, r5.y, r2.x, c163.y
                        mul r2.x, r2.x, c59.w  // ::a<0>
                        mul r2.w, r2.y, c65.x  // ::b<0>
                        mad r0.w, r5.z, r0.w, r8.y
                        rcp r0.w, r0.w
                        mad r0.w, r5.w, r0.w, c65.x
                        mad r0.w, r2.y, r0.w, -r2.w
                        rcp r3.w, r2.x
                        mul r0.w, r0.w, r3.w  // ::X<0>
                        mad r2.x, r0.w, r2.x, r2.w  // ::Z<0>

#line 1842
                        max r2.w, r0.w, c95.z  // ::X<0>

#line 1845
                        max r0.w, r2.y, c95.z  // ::Y<0>

#line 1848
                        max r3.w, r2.x, c95.z  // ::Z<0>

#line 553
                        mul r4.xyw, r0.w, c24.xyzz
                        mad r2.xyw, r2.w, c23.xyzz, r4
                        mad r1.yzw, r3.w, c25.xxyz, r2.xxyw  // ::x<0>, ::y<0>, ::z<0>

#line 2704
                        mov r0.y, -c163.y
                      else
                        if_eq r1.x, -c36.y

#line 595
                          mul r0.w, r2.z, r8.y
                          rcp r2.x, r3.y
                          mul r8.x, r0.w, r2.x  // ::xyY_XYZ<0>
                          add r0.w, -r2.z, -r3.y
                          add r0.w, r0.w, -c163.y
                          mul r0.w, r8.y, r0.w
                          mul r8.z, r2.x, r0.w  // ::xyY_XYZ<2>
                          cmp r1.yzw, -r3_abs.y, c126.w, r8.xxyz  // ::xyY_XYZ<0,1,2>

#line 2706
                          mov r0.y, -c163.y
                        else
                          if_eq r1.x, -c36.z

#line 1443
                            mad r0.w, r2.z, c90.x, c90.z
                            frc r0.w, r0.w
                            mad r0.w, r0.w, c86.x, c86.y
                            sincos r5.xy, r0.w
                            rcp r0.w, r5.x
                            mul r0.w, r0.w, r5.y  // ::x<0>
                            mul r2.x, r0.w, r0.w  // ::x<0>
                            mul r2.y, r3.y, r3.y
                            mul r2.y, r2.y, -c65.x
                            rcp r2.x, r2.x
                            add r2.x, r2.x, -c163.y
                            mul r2.x, r2.x, -c89.z
                            rcp r2.x, r2.x
                            mul r2.x, r2.x, r2.y
                            rsq r2.x, r2.x
                            rcp r2.x, r2.x  // ::r<0>
                            mad r0.w, r0.w, r0.w, -c163.y
                            mul r0.w, r0.w, -c89.z
                            rcp r0.w, r0.w
                            mul r0.w, r0.w, r2.y
                            rsq r0.w, r0.w
                            rcp r0.w, r0.w  // ::g<0>
                            mul r2.y, r0.w, c144.w
                            mad r2.y, r2.x, c124.x, r2.y
                            add r2.y, r2.y, c127.w
                            rcp r2.y, r2.y
                            mul r2.y, r2.y, r8.y  // ::k<0>
                            add r2.w, -r2.x, -c163.y
                            add r2.w, -r0.w, r2.w
                            mul r1.z, r0.w, r2.y  // ::G<0>
                            mul r1.yw, r2.xxzw, r2.y  // ::R<0>, ::B<0>

#line 2707
                            mov r0.y, -c163.y
                          else
                            add r0.w, r1.x, c36.w
                            cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x

#line 2138
                            mul r2.x, r2.z, c124.y  // XYZ_Lrgb::input<0>
                            mad r2.y, r3.y, c62.x, r2.x
                            mad r2.y, r8.y, -c89.x, r2.y  // XYZ_Lrgb::input<2>

#line 553
                            mul r4.xyw, r3.y, c24.xyzz
                            mad r4.xyw, r2.x, c23.xyzz, r4
                            mad r2.xyw, r2.y, c25.xyzz, r4  // ::x<0>, ::y<0>, ::z<0>

#line 2708
                            cmp r1.yzw, -r0_abs.w, r2.xxyw, r1  // ::TLrgb<0,1,2>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
                if_ne r0.y, -r0.y

#line 2724
                else
                  add r0.yw, r1.x, c40.xzzw
                  cmp r2.x, -r0_abs.w, -c163_abs.y, -c163_abs.x

#line 2710
                  if_eq r1.x, -c37.x

#line 2158
                    if_eq r0.x, -r4.z

#line 2171
                      mov r4.xyz, c95.z  // ::UVW_Lrgb<0,1,2>
                    else

#line 591
                      abs r0.x, c13.x

#line 595
                      rcp r2.y, c13.x
                      mul r5.x, r2.y, c12.x  // ::xyY_XYZ<0>
                      mov r9.x, c13.x  // ::WhiteY<0>
                      add r2.w, -r9.x, -c12.x
                      add r2.w, r2.w, -c163.y
                      mul r5.z, r2.y, r2.w  // ::xyY_XYZ<2>
                      mov r5.y, -c163.y
                      cmp r5.xyz, -r0.x, c126.w, r5  // ::xyY_XYZ<0,1,2>

#line 2159
                      cmp r0.x, -r0.x, c142.y, c142.w
                      add r0.x, r0.x, r5.x
                      mul r2.y, r5.x, -c51.x
                      mad r0.x, r5.z, -c62.x, r0.x
                      rcp r0.x, r0.x
                      mul r2.y, r0.x, r2.y  // ::uN<0>
                      mul r0.x, r5.y, r0.x
                      mul r0.x, r0.x, -c52.x  // ::vN<0>
                      add r2.w, r8.y, -c94.z
                      mul r2.w, r2.w, c124.z
                      mul r3.w, r2.w, r2.w
                      mul r2.w, r2.w, r3.w  // ::y<0>
                      mul r3.w, r8.y, -c52.z
                      rcp r4.w, r3.w
                      mad r2.y, r2.z, r4.w, r2.y
                      cmp r2.y, -r3_abs.w, c95.z, r2.y  // ::_u<0>
                      mad r0.x, r3.y, r4.w, r0.x
                      cmp r0.x, -r3_abs.w, c95.z, r0.x  // ::_v<0>
                      mul r3.w, r2.y, r2.w
                      rcp r0.x, r0.x
                      mul r3.w, r0.x, r3.w  // ::x<0>
                      add r4.w, r0.x, r0.x
                      mul r0.x, r2.y, r0.x
                      mad r0.x, r0.x, c141.w, r4.w
                      add r0.x, r0.x, c65.x
                      mul r0.x, r0.x, r2.w  // ::z<0>

#line 2170
                      mul r2.y, r3.w, c90.w  // ::xyz<0>
                      mul r2.w, r2.w, c90.w  // ::xyz<1>
                      mul r0.x, r0.x, c90.w  // ::xyz<2>

#line 553
                      mul r5.xyz, r2.w, c24
                      mad r5.xyz, r2.y, c23, r5
                      mad r4.xyz, r0.x, c25, r5  // ::x<0>, ::y<0>, ::z<0>

#line 2171
                    endif

#line 2710
                    mov r0.x, -c163.y
                  else
                    if_eq r1.x, -c37.y

#line 2389
                      add r2.y, r2.z, -c141.z
                      mul r2.w, r2.y, c93.w  // ::ypbpr<0>
                      add r3.w, r3.y, c95.w
                      add r4.w, r8.y, c95.w

#line 2364
                      mad r4.x, r4.w, c102.x, r2.w  // ::r<0>
                      mad r4.z, r3.w, c102.y, r2.w  // ::b<0>
                      mul r2.w, r4.x, c148.x
                      mad r2.y, r2.y, c93.w, -r2.w
                      mad r2.y, r4.z, -c148.z, r2.y
                      mul r4.y, r2.y, c102.z  // ::g<0>

#line 2711
                      mov r0.x, -c163.y
                    else
                      if_eq r1.x, -c37.z

#line 595
                        mul r2.y, r2.z, r8.y
                        rcp r2.w, r3.y
                        mul r8.x, r2.w, r2.y  // ::xyY_XYZ<0>
                        add r2.y, -r2.z, -r3.y
                        add r2.y, r2.y, -c163.y
                        mul r2.y, r8.y, r2.y
                        mul r8.z, r2.w, r2.y  // ::xyY_XYZ<2>
                        cmp r5.xyz, -r3_abs.y, c126.w, r8  // ::xyY_XYZ<0,1,2>

#line 553
                        mul r6.yzw, r5.y, c24.xxyz
                        mad r5.xyw, r5.x, c23.xyzz, r6.yzzw
                        mad r4.xyz, r5.z, c25, r5.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2712
                        mov r0.x, -c163.y
                      else
                        if_eq r1.x, -c37.w

#line 591
                          abs r2.y, c13.x

#line 595
                          rcp r2.w, c13.x
                          mul r5.x, r2.w, c12.x  // ::xyY_XYZ<0>
                          mov r8.x, c13.x  // ::WhiteY<0>
                          add r3.w, -r8.x, -c12.x
                          add r3.w, r3.w, -c163.y
                          mul r5.z, r2.w, r3.w  // ::xyY_XYZ<2>

#line 2230
                          mov r5.y, -c163.y
                          mul r5.xyz, r5, c165.w
                          cmp r5.xyz, -r2.y, c124.w, r5  // ::white<0,1,2>

#line 2234
                          add r2.y, r5.y, r5.x
                          add r2.y, r5.z, r2.y
                          rcp r2.w, r2.y
                          mul r2.w, r2.w, r5.y  // ::x0<0>
                          mul r2.y, r2.y, c90.w  // ::ew<0>

#line 2239
                          mul r3.w, r8.y, r8.y

#line 2243
                          mul r5.xy, c38.yxzw, c38.xzzw
                          mul r9.yz, r3.w, c172  // ::Y<0>
                          mul r3.w, r2.w, r9.z
                          mul r5.xy, r3.y, r5
                          mul r5.xz, r5.xyyw, c165.w
                          mad r3.w, r3.w, r2.y, r5.x
                          mul r2.w, r2.w, r5.z
                          mad r2.w, r2.w, -r2.y, r3.w
                          mul r3.w, r3.y, c165.w
                          mul r5.xw, r3.w, c38.xyzz
                          mul r4.w, r2.y, r5.z
                          mad r3.w, r3.w, c38.x, -r4.w
                          mul r4.w, r2.y, r9.y
                          mad r3.w, r9.z, r2.y, r3.w
                          rcp r3.w, r3.w
                          mul r2.w, r2.w, r3.w  // ::x<0>
                          mad r3.w, r5.w, c38.x, r9.z
                          mad r3.w, r5.y, -c165.w, r3.w
                          mad r4.w, r4.w, c165.w, r5.x
                          mad r2.y, r5.z, -r2.y, r4.w
                          rcp r2.y, r2.y
                          mul r4.w, r2.y, r3.w  // ::y<0>

#line 595
                          mul r5.x, r9.y, r2.w
                          rcp r5.y, r4.w
                          mul r9.x, r5.y, r5.x  // ::xyY_XYZ<0>
                          mad r2.y, r3.w, -r2.y, -r2.w
                          add r2.y, r2.y, -c163.y
                          mul r2.y, r9.y, r2.y
                          mul r9.w, r5.y, r2.y  // ::xyY_XYZ<2>
                          cmp r5.xyz, -r4_abs.w, c126.w, r9.xyww  // ::xyY_XYZ<0,1,2>

#line 553
                          mul r6.yzw, r5.y, c24.xxyz
                          mad r5.xyw, r5.x, c23.xyzz, r6.yzzw
                          mad r4.xyz, r5.z, c25, r5.xyww  // ::x<0>, ::y<0>, ::z<0>

#line 2713
                          mov r0.x, -c163.y
                        else
                          if_eq r1.x, -c55.x

#line 553
                            mul r5.xyz, r3.y, c24
                            mad r5.xyz, r2.z, c23, r5
                            mad r4.xyz, r8.y, c25, r5  // ::x<0>, ::y<0>, ::z<0>

#line 2714
                            mov r0.x, -c163.y
                          else
                            if_eq r1.x, -c55.y

#line 2409
                              add r2.y, r2.z, -c141.z
                              mul r2.w, r2.y, c93.w  // ::ypbpr<0>
                              add r3.w, r3.y, c95.w
                              add r4.w, r8.y, c95.w

#line 2364
                              mad r4.x, r4.w, c102.x, r2.w  // ::r<0>
                              mad r4.z, r3.w, c102.y, r2.w  // ::b<0>
                              mul r2.w, r4.x, c148.x
                              mad r2.y, r2.y, c93.w, -r2.w
                              mad r2.y, r4.z, -c148.z, r2.y
                              mul r4.y, r2.y, c102.z  // ::g<0>

#line 2715
                              mov r0.x, -c163.y
                            else

#line 2719
                              add r5, r1.x, c175

#line 2265
                              add r1.x, r2.z, -r3.y  // ::c<0>
                              add r9.x, r8.y, r1.x  // ::YCoCg_Lrgb<0>
                              add r9.y, r2.z, r3.y  // ::YCoCg_Lrgb<1>
                              add r9.z, -r8.y, r1.x  // ::YCoCg_Lrgb<2>

#line 2308
                              mad r6.yzw, r3.y, c99.xxyz, r2.z

#line 2280
                              mad r1.x, r3.y, -c99.w, r2.z
                              mad r10.y, r8.y, c100.x, r1.x  // ::g<0>
                              mad r10.xz, r8.y, -c100.yyzw, r6.yyzw  // ::r<0>, ::b<0>

#line 2308
                              mad r11.x, r8.y, c100.w, r6.w  // ::r<0>

#line 2333
                              mad r12, r3.y, c96, r2.z

#line 2309
                              mad r11.y, r8.y, c100.w, r12.x  // ::g<0>

#line 2719
                              cmp r1.x, -r5_abs.w, c163_abs.y, c163_abs.x

#line 2333
                              mad r6.yzw, r8.y, c97.xxyz, r12  // ::b<0>, ::r<0>, ::g<0>
                              mad r2.y, r3.y, c97.w, r2.z
                              mad r2.y, r8.y, c98.x, r2.y  // ::b<0>

#line 2337
                              mov_sat r8.xz, r6.zyww
                              cmp r12.xy, r6.zwzw, r8.xzzw, c95.z  // ::r<0>, ::g<0>
                              mov_sat r2.w, r2.y
                              cmp r12.z, r2.y, r2.w, c95.z  // ::b<0>

#line 2719
                              cmp r8.xzw, -r5_abs.w, r12.xyyz, r1.yyzw  // ::TLrgb<0,1,2>
                              mov r11.z, r6.y
                              cmp r6.yzw, -r5_abs.z, r11.xxyz, r8.xxzw  // ::TLrgb<0,1,2>
                              cmp r1.x, -r5_abs.z, -c163.y, r1.x
                              cmp r6.yzw, -r5_abs.y, r10.xxyz, r6  // ::TLrgb<0,1,2>
                              cmp r1.x, -r5_abs.y, -c163.y, r1.x
                              cmp r4.xyz, -r5_abs.x, r9, r6.yzww  // ::TLrgb<0,1,2>
                              cmp r0.x, -r5_abs.x, -c163.y, r1.x
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif

#line 2453
                  mad r5.xy, r8.y, c98.yzzw, r2.z  // ::r<0,0>

#line 2459
                  mad r6.yzw, r3.y, c101.xxyz, r2.z  // ::b<0,0>

#line 2366
                  mad r1.x, r5.x, -c148.x, r2.z
                  mad r1.x, r6.y, -c148.z, r1.x
                  mul r5.z, r1.x, c102.z  // ::g<0>

#line 2456
                  mad r1.x, r8.y, c98.w, r6.z  // ::g<0>

#line 2463
                  mov_sat r2.y, r5.y
                  cmp r9.x, r5.y, r2.y, c95.z  // ::r<0>
                  mov_sat r2.y, r1.x
                  cmp r9.y, r1.x, r2.y, c95.z  // ::g<0>
                  mov_sat r1.x, r6.w
                  cmp r9.z, r6.w, r1.x, c95.z  // ::b<0>

#line 2722
                  cmp r8.xzw, -r0_abs.w, r9.xyyz, r4.xyyz  // ::TLrgb<0,1,2>
                  mov r5.w, r6.y
                  cmp r5.xyz, -r0_abs.y, r5.xzww, r8.xzww  // ::TLrgb<0,1,2>
                  cmp r0.y, -r0_abs.y, c163.y, r2.x
                  mov r3.x, r2.z
                  mov r3.z, r8.y
                  cmp r2.xyz, r0.y, r3, r5  // ::TLrgb<0,1,2>
                  cmp r1.yzw, -r0.x, r2.xxyz, r4.xxyz  // ::TLrgb<0,1,2>
                endif
              endif
            endif
          endif

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r0.x, -r1.y, c47.x
            mul r0.y, r1.y, c48.x
            mov r2.y, c163.y  // ::Minimum3<64>
            rcp r0.w, c45.x
            pow r2.x, r1.y, r0.w
            lrp r0.w, r2.x, -r2.y, -c46.x
            cmp r0.x, r0.x, r0.y, r0.w  // ::V<0>
            mov r0.y, -c163.y
          else

#line 2559
            mov r2.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r2.y

#line 2562
              rcp r1.x, c45.x
              pow r0.x, r1.y, r1.x  // ::V<0>
              mov r0.y, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r0.w, -r1.y, -c163.y
                rsq r1.x, r1.y
                rcp r1.x, r1.x
                mul r1.x, r1.x, -c141.w  // ::Transfer<0>
                cmp r0.w, r0.w, -c163_abs.y, -c163_abs.x
                cmp r0.w, r1.y, r0.w, c95.z
                add r2.x, r1.y, c103.y
                log r2.x, r2.x
                mad r2.x, r2.x, c103.z, c103.w  // ::Transfer<0>
                cmp r0.x, r0.w, r2.x, r1.x  // ::Transfer<0>
                mov r0.y, -c163.y
              else

#line 2582
                mov r1.x, c10.x  // ::Companding<0>
                add r0.w, r1.x, c62.x
                cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r0.w, r1.y, c101.w
                add r1.x, r0.w, -c70.z
                max r2.x, r1.x, c95.z  // ::a<0>
                mad r0.w, r0.w, -c70.y, c70.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c146.w
                mul r0.x, r1.x, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.x, -r0.y, r1.y, r0.x  // ::Transfer<0>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r0.x, -r1.z, c47.x
            mul r0.y, r1.z, c48.x
            mov r1.y, c163.y  // ::Minimum3<64>
            rcp r0.w, c45.x
            pow r2.x, r1.z, r0.w
            lrp r0.w, r2.x, -r1.y, -c46.x
            cmp r0.x, r0.x, r0.y, r0.w  // ::V<0>
            mov r0.y, -c163.y
          else

#line 2559
            mov r1.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r1.y

#line 2562
              rcp r1.x, c45.x
              pow r0.x, r1.z, r1.x  // ::V<0>
              mov r0.y, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r0.w, -r1.z, -c163.y
                rsq r1.x, r1.z
                rcp r1.x, r1.x
                mul r1.x, r1.x, -c141.w  // ::Transfer<0>
                cmp r0.w, r0.w, -c163_abs.y, -c163_abs.x
                cmp r0.w, r1.z, r0.w, c95.z
                add r1.y, r1.z, c103.y
                log r1.y, r1.y
                mad r1.y, r1.y, c103.z, c103.w  // ::Transfer<0>
                cmp r0.x, r0.w, r1.y, r1.x  // ::Transfer<0>
                mov r0.y, -c163.y
              else

#line 2582
                mov r1.x, c10.x  // ::Companding<0>
                add r0.w, r1.x, c62.x
                cmp r0.y, -r0_abs.w, c163_abs.y, c163_abs.x

#line 2591
                pow r0.w, r1.z, c101.w
                add r1.x, r0.w, -c70.z
                max r2.x, r1.x, c95.z  // ::a<0>
                mad r0.w, r0.w, -c70.y, c70.x  // ::b<0>
                rcp r0.w, r0.w
                mul r0.w, r0.w, r2.x
                pow r1.x, r0.w, c146.w
                mul r0.x, r1.x, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.y, -r0.y, r1.z, r0.x  // ::Transfer<0>

#line 2551
          if_eq c10.x, r0.z

#line 2554
            add r0.x, -r1.w, c47.x
            mul r0.y, r1.w, c48.x
            mov r1.y, c163.y  // ::Minimum3<64>
            rcp r0.z, c45.x
            pow r2.x, r1.w, r0.z
            lrp r0.z, r2.x, -r1.y, -c46.x
            cmp r0.x, r0.x, r0.y, r0.z  // ::V<0>
            mov r0.y, -c163.y
          else

#line 2559
            mov r1.y, c163.y  // ::Minimum3<64>
            if_eq c10.x, -r1.y

#line 2562
              rcp r1.x, c45.x
              pow r0.x, r1.w, r1.x  // ::V<0>
              mov r0.y, -c163.y
            else

#line 2567
              if_eq c10.x, -r6.x

#line 2575
                add r0.z, -r1.w, -c163.y
                rsq r0.w, r1.w
                rcp r0.w, r0.w
                mul r0.w, r0.w, -c141.w  // ::Transfer<0>
                cmp r0.z, r0.z, -c163_abs.y, -c163_abs.x
                cmp r0.z, r1.w, r0.z, c95.z
                add r1.x, r1.w, c103.y
                log r1.x, r1.x
                mad r1.x, r1.x, c103.z, c103.w  // ::Transfer<0>
                cmp r0.x, r0.z, r1.x, r0.w  // ::Transfer<0>
                mov r0.y, -c163.y
              else

#line 2582
                mov r1.x, c10.x  // ::Companding<0>
                add r0.z, r1.x, c62.x
                cmp r0.y, -r0_abs.z, c163_abs.y, c163_abs.x

#line 2591
                pow r0.z, r1.w, c101.w
                add r0.w, r0.z, -c70.z
                max r1.x, r0.w, c95.z  // ::a<0>
                mad r0.z, r0.z, -c70.y, c70.x  // ::b<0>
                rcp r0.z, r0.z
                mul r0.z, r0.z, r1.x
                pow r1.x, r0.z, c146.w
                mul r0.x, r1.x, c104.x  // ::Transfer<0>
              endif
            endif
          endif
          cmp r7.z, -r0.y, r1.w, r0.x  // ::Transfer<0>

#line 3017
        endif
      endif

#line 3020
      mov oC0.xyz, r7  // ::main<0,1,2>
      mov oC0.w, -c163.y  // ::main<3>

#line 2945
    endif

// approximately 6362 instruction slots used (1 texture, 6361 arithmetic)
